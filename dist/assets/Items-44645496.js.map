{"version":3,"file":"Items-44645496.js","sources":["../../src/components/items/ItemManagementModal.vue","../../src/views/Items.vue"],"sourcesContent":["<!-- src/components/items/ItemManagementModal.vue -->\r\n<template>\r\n  <v-dialog v-model=\"dialogVisible\" max-width=\"800\" persistent @click:outside=\"closeDialog\">\r\n    <v-card>\r\n      <!-- Add this alert if no store is selected -->\r\n      <v-alert\r\n        v-if=\"!companyStore.selectedStore\"\r\n        type=\"warning\"\r\n        variant=\"tonal\"\r\n        class=\"ma-4\"\r\n      >\r\n        Please select a store before creating new items.\r\n      </v-alert>\r\n    </v-card>\r\n  </v-dialog>\r\n  <v-alert\r\n    v-if=\"errorMessage\"\r\n    type=\"error\"\r\n    variant=\"tonal\"\r\n    closable\r\n    class=\"mb-4\"\r\n    @click:close=\"errorMessage = null\"\r\n  >\r\n    {{ errorMessage }}\r\n  </v-alert>\r\n  <v-dialog\r\n    v-model=\"dialogVisible\"\r\n    max-width=\"800\"\r\n    persistent\r\n    @click:outside=\"closeDialog\"\r\n  >\r\n    <v-card>\r\n      <v-card-title class=\"d-flex justify-space-between align-center\">\r\n        {{ editingItem ? 'Edit Item' : 'New Item' }}\r\n        <v-btn icon=\"mdi-close\" variant=\"text\" @click=\"closeDialog\" />\r\n      </v-card-title>\r\n\r\n      <v-card-text>\r\n        <v-form ref=\"form\" @submit.prevent=\"saveItem\">\r\n          <!-- Basic Information -->\r\n          <v-row>\r\n            <v-col cols=\"12\" md=\"6\">\r\n              <v-text-field\r\n                v-model=\"itemForm.name\"\r\n                label=\"Item Name\"\r\n                :rules=\"[rules.required]\"\r\n                density=\"comfortable\"\r\n                variant=\"outlined\"\r\n              />\r\n            </v-col>\r\n            <v-col cols=\"12\" md=\"6\">\r\n              <v-text-field\r\n                v-model=\"itemForm.sku\"\r\n                label=\"SKU\"\r\n                :rules=\"[rules.required]\"\r\n                density=\"comfortable\"\r\n                variant=\"outlined\"\r\n              />\r\n            </v-col>\r\n            <v-col cols=\"12\" md=\"6\">\r\n              <v-text-field\r\n                v-model=\"itemForm.price\"\r\n                label=\"Price\"\r\n                type=\"number\"\r\n                prefix=\"$\"\r\n                :rules=\"[rules.required, rules.numeric]\"\r\n                density=\"comfortable\"\r\n                variant=\"outlined\"\r\n              />\r\n            </v-col>\r\n            <v-col cols=\"12\" md=\"6\">\r\n              <v-select\r\n                v-model=\"itemForm.category_id\"\r\n                :items=\"categories\"\r\n                item-title=\"name\"\r\n                item-value=\"id\"\r\n                label=\"Category\"\r\n                :rules=\"[rules.required]\"\r\n                density=\"comfortable\"\r\n                variant=\"outlined\"\r\n              />\r\n            </v-col>\r\n            <v-col cols=\"12\" md=\"6\">\r\n              <v-text-field\r\n                v-model=\"itemForm.stock_level\"\r\n                label=\"Stock Level\"\r\n                type=\"number\"\r\n                :rules=\"[rules.required, rules.numeric]\"\r\n                density=\"comfortable\"\r\n                variant=\"outlined\"\r\n              />\r\n            </v-col>\r\n            <v-col cols=\"12\" md=\"6\">\r\n              <v-text-field\r\n                v-model=\"itemForm.reorder_level\"\r\n                label=\"Reorder Level\"\r\n                type=\"number\"\r\n                :rules=\"[rules.numeric]\"\r\n                density=\"comfortable\"\r\n                variant=\"outlined\"\r\n              />\r\n            </v-col>\r\n            <v-col cols=\"12\">\r\n              <v-textarea\r\n                v-model=\"itemForm.description\"\r\n                label=\"Description\"\r\n                rows=\"3\"\r\n                density=\"comfortable\"\r\n                variant=\"outlined\"\r\n              />\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <!-- Image Upload -->\r\n          <v-row>\r\n            <v-col cols=\"12\">\r\n              <div class=\"d-flex align-center mb-2\">\r\n                <h3 class=\"text-subtitle-1\">Item Image</h3>\r\n                <v-spacer />\r\n                <v-btn\r\n                  color=\"primary\"\r\n                  prepend-icon=\"mdi-camera\"\r\n                  variant=\"text\"\r\n                  @click=\"triggerImageUpload\"\r\n                >\r\n                  Upload Image\r\n                </v-btn>\r\n              </div>\r\n              \r\n              <input\r\n                ref=\"fileInput\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                class=\"d-none\"\r\n                @change=\"handleImageUpload\"\r\n              />\r\n\r\n              <v-card\r\n                v-if=\"itemForm.image || previewImage\"\r\n                variant=\"outlined\"\r\n                class=\"pa-2\"\r\n              >\r\n                <v-img\r\n                  :src=\"previewImage || itemForm.image\"\r\n                  height=\"200\"\r\n                  cover\r\n                  class=\"bg-grey-lighten-2\"\r\n                />\r\n                <div class=\"d-flex justify-end pa-2\">\r\n                  <v-btn\r\n                    color=\"error\"\r\n                    variant=\"text\"\r\n                    size=\"small\"\r\n                    @click=\"removeImage\"\r\n                  >\r\n                    Remove\r\n                  </v-btn>\r\n                </div>\r\n              </v-card>\r\n              <v-card\r\n                v-else\r\n                variant=\"outlined\"\r\n                class=\"d-flex align-center justify-center\"\r\n                height=\"200\"\r\n                style=\"cursor: pointer\"\r\n                @click=\"triggerImageUpload\"\r\n              >\r\n                <div class=\"text-center\">\r\n                  <v-icon size=\"48\" color=\"grey\">mdi-image-plus</v-icon>\r\n                  <div class=\"text-grey mt-2\">Click to add image</div>\r\n                </div>\r\n              </v-card>\r\n            </v-col>\r\n          </v-row>\r\n        </v-form>\r\n      </v-card-text>\r\n\r\n      <v-divider />\r\n\r\n      <v-card-actions>\r\n        <v-spacer />\r\n        <v-btn\r\n          color=\"error\"\r\n          variant=\"text\"\r\n          :disabled=\"loading\"\r\n          @click=\"closeDialog\"\r\n        >\r\n          Cancel\r\n        </v-btn>\r\n        <v-btn\r\n          color=\"primary\"\r\n          :loading=\"loading\"\r\n          @click=\"saveItem\"\r\n        >\r\n          {{ editingItem ? 'Update' : 'Create' }} Item\r\n        </v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, watch } from 'vue'\r\nimport { usePosStore } from '../../stores/pos-store'\r\nimport { logger } from '../../utils/logger'\r\nimport { useCompanyStore } from '../../stores/company'\r\n\r\nconst errorMessage = ref(null)\r\nconst companyStore = useCompanyStore()\r\nconst props = defineProps({\r\n  modelValue: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  editItem: {\r\n    type: Object,\r\n    default: null\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'item-saved', 'error'])\r\n\r\nconst posStore = usePosStore()\r\nconst form = ref(null)\r\nconst fileInput = ref(null)\r\nconst loading = ref(false)\r\nconst previewImage = ref(null)\r\n\r\n// Form validation rules\r\nconst rules = {\r\n  required: v => !!v || 'This field is required',\r\n  numeric: v => !isNaN(parseFloat(v)) && isFinite(v) || 'Must be a number'\r\n}\r\n\r\n// Form data\r\nconst itemForm = reactive({\r\n  name: '',\r\n  sku: '',\r\n  description: '',\r\n  price: '',\r\n  category_id: null,\r\n  stock_level: 0,\r\n  reorder_level: 0,\r\n  image: null\r\n})\r\n\r\n// Computed\r\nconst dialogVisible = computed({\r\n  get: () => props.modelValue,\r\n  set: (value) => emit('update:modelValue', value)\r\n})\r\n\r\nconst editingItem = computed(() => props.editItem)\r\nconst categories = computed(() => posStore.categoriesForDisplay)\r\n\r\n// Watch for edit item changes\r\nwatch(() => props.editItem, (newItem) => {\r\n  if (newItem) {\r\n    Object.keys(itemForm).forEach(key => {\r\n      if (key === 'price') {\r\n        itemForm[key] = (newItem[key] / 100).toFixed(2) // Convert cents to dollars\r\n      } else {\r\n        itemForm[key] = newItem[key] || itemForm[key]\r\n      }\r\n    })\r\n    if (newItem.media && newItem.media.length > 0) {\r\n      itemForm.image = newItem.media[0].original_url\r\n    }\r\n  }\r\n}, { immediate: true })\r\n\r\n// Methods\r\nfunction triggerImageUpload() {\r\n  fileInput.value.click()\r\n}\r\n\r\nasync function handleImageUpload(event) {\r\n  const file = event.target.files[0]\r\n  if (!file) {\r\n    logger.error('No file selected')\r\n    return\r\n  }\r\n\r\n  try {\r\n    // Log file details\r\n    logger.debug('File selected:', {\r\n      name: file.name,\r\n      type: file.type,\r\n      size: file.size\r\n    })\r\n\r\n    // Validate file type\r\n    if (!file.type.startsWith('image/')) {\r\n      throw new Error('Please select an image file')\r\n    }\r\n\r\n    // Store file object\r\n    fileObject.value = file\r\n    \r\n    // Create base64 preview\r\n    const reader = new FileReader()\r\n    reader.onload = (e) => {\r\n      const result = e.target.result\r\n      logger.debug('Image loaded:', {\r\n        resultLength: result.length,\r\n        hasData: !!result\r\n      })\r\n\r\n      // Store the full base64 string for now\r\n      previewImage.value = result\r\n    }\r\n    reader.onerror = (e) => {\r\n      logger.error('FileReader error:', e)\r\n      throw new Error('Failed to read image file')\r\n    }\r\n    reader.readAsDataURL(file)\r\n\r\n  } catch (error) {\r\n    logger.error('Failed to handle image upload:', error)\r\n    errorMessage.value = error.message || 'Failed to handle image upload'\r\n  }\r\n}\r\n\r\n// Inside saveItem function, after successful item creation:\r\n\r\n// Step 2: If we have an image, upload it using the item ID\r\nif (fileObject.value && previewImage.value) {\r\n  try {\r\n    logger.debug('Preparing image upload:', {\r\n      fileName: fileObject.value.name,\r\n      itemId: itemResponse.item.id,\r\n      hasPreviewImage: !!previewImage.value\r\n    })\r\n\r\n    // Get the base64 data without the prefix\r\n    const base64Data = previewImage.value.split(',')[1]\r\n    \r\n    const pictureData = {\r\n      picture: JSON.stringify({\r\n        name: fileObject.value.name,\r\n        data: base64Data,\r\n        item_id: itemResponse.item.id\r\n      })\r\n    }\r\n\r\n    logger.debug('Picture data prepared:', {\r\n      hasName: !!pictureData.picture.name,\r\n      hasData: !!pictureData.picture.data,\r\n      itemId: pictureData.picture.item_id\r\n    })\r\n\r\n    // Make the upload request\r\n    const imageResponse = await posStore.uploadItemPicture(pictureData)\r\n    \r\n    if (imageResponse.success) {\r\n      window.toastr?.['success']('Image uploaded successfully')\r\n      logger.info('Image upload successful for item:', itemResponse.item.id)\r\n    } else {\r\n      logger.error('Image upload response indicated failure:', imageResponse)\r\n      throw new Error('Image upload failed')\r\n    }\r\n  } catch (imageError) {\r\n    logger.error('Image upload error:', {\r\n      error: imageError,\r\n      itemId: itemResponse.item.id,\r\n      fileName: fileObject.value.name\r\n    })\r\n    window.toastr?.['error']('Failed to upload image: ' + (imageError.message || 'Unknown error'))\r\n  }\r\n}\r\n\r\nfunction removeImage() {\r\n  itemForm.image = null\r\n  previewImage.value = null\r\n  fileInput.value.value = ''\r\n}\r\n\r\nasync function saveItem() {\r\n  if (!form.value) return\r\n  const { valid } = await form.value.validate()\r\n  if (!valid) return\r\n\r\n  if (!companyStore.selectedStore) {\r\n    errorMessage.value = 'No store selected. Please select a store first.'\r\n    return\r\n  }\r\n\r\n  loading.value = true\r\n  try {\r\n    // Step 1: Create/Update the item first\r\n    const itemData = {\r\n      name: itemForm.name,\r\n      description: itemForm.description || '',\r\n      price: Math.round(parseFloat(itemForm.price) * 100),\r\n      unit_id: itemForm.unit?.id,\r\n      item_category_id: itemForm.category_id,\r\n      unit: itemForm.unit,\r\n      sku: itemForm.sku,  // Adding SKU field\r\n      allow_pos: true,\r\n      avalara_bool: false,\r\n      avalara_discount_type: {\r\n        name: \"None\",\r\n        value: \"0\"\r\n      },\r\n      avalara_sale_type: {\r\n        name: \"Retail\",\r\n        value: \"Retail\"\r\n      },\r\n      avalara_service_type: null,\r\n      avalara_service_type_name: \"\",\r\n      avalara_service_types: [],\r\n      avalara_type: null,\r\n      no_taxable: false,\r\n      retentions: null,\r\n      retentions_bool: false,\r\n      tax_inclusion: false,\r\n      taxes: [],\r\n      item_categories: [{\r\n        id: itemForm.category_id,\r\n        name: posStore.categories.find(c => c.item_category_id === itemForm.category_id)?.name || '',\r\n        is_group: 1,\r\n        is_item: 1\r\n      }],\r\n      item_groups: [],\r\n      item_section: [],\r\n      item_store: [{\r\n        id: companyStore.selectedStore,\r\n        name: companyStore.storesForDisplay.find(s => s.value === companyStore.selectedStore)?.title || '',\r\n        company_name: companyStore.currentCustomer?.name || 'xyz',\r\n        description: ''\r\n      }]\r\n    }\r\n\r\n    let itemResponse\r\n    if (editingItem.value) {\r\n      itemResponse = await posStore.updateItem(editingItem.value.id, itemData)\r\n    } else {\r\n      itemResponse = await posStore.createItem(itemData)\r\n    }\r\n\r\n    // Check if we got a valid item ID back\r\n    if (!itemResponse?.item?.id) {\r\n      throw new Error('Failed to get item ID from response')\r\n    }\r\n\r\n// Step 2: If we have an image, upload it using the item ID\r\nif (fileObject.value && previewImage.value) {\r\n  try {\r\n    const pictureData = {\r\n      picture: JSON.stringify({\r\n        name: fileObject.value.name,\r\n        data: previewImage.value, // This should now be just the base64 string without the prefix\r\n        item_id: itemResponse.item.id\r\n      })\r\n    }\r\n    \r\n    logger.debug('Attempting to upload picture:', {\r\n      itemId: itemResponse.item.id,\r\n      fileName: fileObject.value.name,\r\n      hasData: !!previewImage.value\r\n    })\r\n\r\n    const imageResponse = await posStore.uploadItemPicture(pictureData)\r\n    \r\n    if (imageResponse.success) {\r\n      window.toastr?.['success']('Image uploaded successfully')\r\n      logger.info('Image upload successful for item:', itemResponse.item.id)\r\n    } else {\r\n      throw new Error('Image upload failed')\r\n    }\r\n  } catch (imageError) {\r\n    window.toastr?.['error']('Failed to upload image: ' + (imageError.message || 'Unknown error'))\r\n    logger.error('Image upload failed:', {\r\n      error: imageError,\r\n      itemId: itemResponse.item.id,\r\n      fileName: fileObject.value.name\r\n    })\r\n  }\r\n}\r\n\r\n    // Show success message for item creation/update\r\n    window.toastr?.['success'](\r\n      editingItem.value \r\n        ? 'Item updated successfully' \r\n        : 'Item created successfully'\r\n    )\r\n\r\n    logger.info(`Item ${editingItem.value ? 'updated' : 'created'} successfully:`, {\r\n      itemId: itemResponse.item.id,\r\n      name: itemResponse.item.name\r\n    })\r\n\r\n    emit('item-saved', itemResponse)\r\n    closeDialog()\r\n\r\n  } catch (error) {\r\n    // Show error message\r\n    window.toastr?.['error'](error.message || 'Failed to save item')\r\n    logger.error('Failed to save item:', {\r\n      error,\r\n      formData: itemForm,\r\n      isEdit: !!editingItem.value\r\n    })\r\n    errorMessage.value = error.message || 'Failed to save item'\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\nfunction closeDialog() {\r\n  dialogVisible.value = false\r\n  form.value?.reset()\r\n  previewImage.value = null\r\n  errorMessage.value = null\r\n  Object.keys(itemForm).forEach(key => {\r\n    itemForm[key] = key === 'stock_level' || key === 'reorder_level' ? 0 : ''\r\n  })\r\n  emit('update:modelValue', false) // Ensure modal closes\r\n}\r\n</script>\r\n","<!-- src/views/Items.vue -->\r\n<template>\r\n  <div class=\"items-management pa-4\">\r\n    <!-- System Prerequisites Check -->\r\n    <v-alert\r\n      v-if=\"!posStore.systemReady\"\r\n      type=\"warning\"\r\n      class=\"mb-4\"\r\n    >\r\n      {{ posStore.setupMessage }}\r\n    </v-alert>\r\n\r\n    <template v-else>\r\n      <!-- Error Alert -->\r\n      <v-alert\r\n        v-if=\"error\"\r\n        type=\"error\"\r\n        class=\"mb-4\"\r\n        closable\r\n        @click:close=\"error = null\"\r\n      >\r\n        {{ error }}\r\n      </v-alert>\r\n\r\n      <!-- Search and Actions Bar -->\r\n      <div class=\"d-flex gap-2 mb-4\">\r\n        <v-text-field\r\n          v-model=\"posStore.searchQuery\"\r\n          prepend-inner-icon=\"mdi-magnify\"\r\n          label=\"Search items\"\r\n          density=\"compact\"\r\n          hide-details\r\n          class=\"flex-grow-1\"\r\n          @update:model-value=\"handleSearch\"\r\n        />\r\n        \r\n        <v-btn\r\n          color=\"success\"\r\n          prepend-icon=\"mdi-plus\"\r\n          @click=\"openItemModal()\"\r\n        >\r\n          New Item\r\n        </v-btn>\r\n        \r\n        <v-btn\r\n          v-if=\"selectedItems.length > 0\"\r\n          color=\"error\"\r\n          prepend-icon=\"mdi-delete\"\r\n          @click=\"confirmDeleteSelected\"\r\n        >\r\n          Delete ({{ selectedItems.length }})\r\n        </v-btn>\r\n      </div>\r\n\r\n      <!-- Categories -->\r\n      <v-tabs\r\n        v-model=\"selectedCategory\"\r\n        density=\"compact\"\r\n        class=\"mb-4\"\r\n        show-arrows\r\n        @update:model-value=\"handleCategoryChange\"\r\n      >\r\n        <v-tab value=\"all\">All Items</v-tab>\r\n        <v-tab\r\n          v-for=\"category in posStore.categoriesForDisplay\"\r\n          :key=\"category.id\"\r\n          :value=\"category.id\"\r\n        >\r\n          {{ category.name }}\r\n        </v-tab>\r\n      </v-tabs>\r\n\r\n      <!-- Loading State -->\r\n      <div v-if=\"posStore.loading.products\" class=\"d-flex justify-center ma-4\">\r\n        <v-progress-circular indeterminate color=\"primary\" />\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <v-alert\r\n        v-else-if=\"posStore.error\"\r\n        type=\"error\"\r\n        class=\"ma-4\"\r\n      >\r\n        {{ posStore.error }}\r\n      </v-alert>\r\n\r\n      <!-- Items Table -->\r\n      <v-data-table\r\n        v-else\r\n        v-model=\"selectedItems\"\r\n        :headers=\"headers\"\r\n        :items=\"posStore.products\"\r\n        :loading=\"posStore.loading.products\"\r\n        show-select\r\n      >\r\n        <!-- Image Column -->\r\n        <template v-slot:item.image=\"{ item }\">\r\n          <v-img\r\n            :src=\"getImageUrl(item)\"\r\n            width=\"50\"\r\n            height=\"50\"\r\n            cover\r\n            class=\"bg-grey-lighten-2\"\r\n          />\r\n        </template>\r\n\r\n        <!-- Price Column -->\r\n        <template v-slot:item.price=\"{ item }\">\r\n          ${{ formatPrice(item.price) }}\r\n        </template>\r\n\r\n        <!-- Stock Column -->\r\n        <template v-slot:item.stock=\"{ item }\">\r\n          <v-chip\r\n            :color=\"item.stock > 0 ? 'success' : 'error'\"\r\n            size=\"small\"\r\n          >\r\n            {{ item.stock }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <!-- Actions Column -->\r\n        <template v-slot:item.actions=\"{ item }\">\r\n          <v-btn\r\n            icon=\"mdi-pencil\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            variant=\"text\"\r\n            @click=\"openItemModal(item)\"\r\n          />\r\n          <v-btn\r\n            icon=\"mdi-delete\"\r\n            size=\"small\"\r\n            color=\"error\"\r\n            variant=\"text\"\r\n            @click=\"confirmDelete(item)\"\r\n          />\r\n        </template>\r\n      </v-data-table>\r\n\r\n      <!-- Pagination -->\r\n      <div \r\n        v-if=\"posStore.products.length > 0\"\r\n        class=\"d-flex justify-center mt-4\"\r\n      >\r\n        <v-pagination\r\n          v-model=\"posStore.currentPage\"\r\n          :length=\"Math.ceil(posStore.totalItems / posStore.itemsPerPage)\"\r\n          @update:model-value=\"posStore.setPage\"\r\n        />\r\n      </div>\r\n    </template>\r\n\r\n    <!-- Item Management Modal -->\r\n    <ItemManagementModal\r\n      v-model=\"showItemModal\"\r\n      :edit-item=\"editingItem\"\r\n      @item-saved=\"handleItemSaved\"\r\n      @error=\"handleError\"\r\n    />\r\n\r\n    <!-- Delete Confirmation Dialog -->\r\n    <v-dialog v-model=\"showDeleteDialog\" max-width=\"400\">\r\n      <v-card>\r\n        <v-card-title>Confirm Delete</v-card-title>\r\n        <v-card-text>\r\n          Are you sure you want to delete {{ deletingMultiple ? `${selectedItems.length} items` : 'this item' }}?\r\n          This action cannot be undone.\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer />\r\n          <v-btn\r\n            color=\"grey\"\r\n            variant=\"text\"\r\n            @click=\"showDeleteDialog = false\"\r\n          >\r\n            Cancel\r\n          </v-btn>\r\n          <v-btn\r\n            color=\"error\"\r\n            :loading=\"posStore.loading.itemOperation\"\r\n            @click=\"deleteConfirmed\"\r\n          >\r\n            Delete\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { usePosStore } from '../stores/pos-store'\r\nimport { logger } from '../utils/logger'\r\nimport ItemManagementModal from '../components/items/ItemManagementModal.vue'\r\n\r\nconst posStore = usePosStore()\r\n\r\n// Local state\r\nconst selectedCategory = ref(posStore.selectedCategory)\r\nconst error = ref(null)\r\nconst selectedItems = ref([])\r\nconst showDeleteDialog = ref(false)\r\nconst deletingMultiple = ref(false)\r\nconst showItemModal = ref(false)\r\nconst editingItem = ref(null)\r\nconst itemToDelete = ref(null)\r\n\r\n// Table headers\r\nconst headers = [\r\n  { title: 'Image', key: 'image', sortable: false },\r\n  { title: 'Name', key: 'name', sortable: true },\r\n  { title: 'SKU', key: 'sku', sortable: true },\r\n  { title: 'Price', key: 'price', sortable: true },\r\n  { title: 'Stock', key: 'stock', sortable: true },\r\n  { title: 'Actions', key: 'actions', sortable: false, align: 'end' }\r\n]\r\n\r\n// Computed\r\nconst deletingMultipleComputed = computed(() => selectedItems.value.length > 0 && !editingItem.value)\r\n\r\n// Format price from cents to dollars\r\nconst formatPrice = (price) => {\r\n  if (!price) return '0.00'\r\n  const priceInDollars = Number(price) / 100\r\n  return priceInDollars.toFixed(2)\r\n}\r\n\r\n// Get proper image URL\r\nconst getImageUrl = (item) => {\r\n  if (item.media && item.media.length > 0 && item.media[0].original_url) {\r\n    return item.media[0].original_url\r\n  }\r\n  if (item.picture) {\r\n    return item.picture\r\n  }\r\n  return '/api/placeholder/400/320'\r\n}\r\n\r\nonMounted(async () => {\r\n  logger.startGroup('Items Management: Mount')\r\n  try {\r\n    await posStore.initialize()\r\n  } catch (err) {\r\n    logger.error('Error during initialization', err)\r\n    error.value = err.message || 'Failed to initialize'\r\n  } finally {\r\n    logger.endGroup()\r\n  }\r\n})\r\n\r\nconst handleSearch = async () => {\r\n  logger.startGroup('Items Management: Search')\r\n  try {\r\n    await posStore.fetchProducts()\r\n  } catch (err) {\r\n    logger.error('Search failed', err)\r\n    error.value = err.message || 'Search failed'\r\n  } finally {\r\n    logger.endGroup()\r\n  }\r\n}\r\n\r\nconst handleCategoryChange = async (categoryId) => {\r\n  logger.startGroup('Items Management: Category Change')\r\n  try {\r\n    await posStore.setCategory(categoryId)\r\n  } catch (err) {\r\n    logger.error('Category change failed', err)\r\n    error.value = err.message || 'Failed to change category'\r\n  } finally {\r\n    logger.endGroup()\r\n  }\r\n}\r\n\r\n// Item Management Operations\r\nconst openItemModal = (item = null) => {\r\n  editingItem.value = item\r\n  showItemModal.value = true\r\n  error.value = null // Clear any previous errors\r\n}\r\n\r\nconst handleItemSaved = async (response) => {\r\n  logger.info('Item saved:', response)\r\n  showItemModal.value = false // Close modal on success\r\n  editingItem.value = null\r\n  await posStore.fetchProducts() // Refresh the list\r\n}\r\n\r\nconst handleError = (errorMessage) => {\r\n  error.value = errorMessage\r\n}\r\n\r\nconst confirmDelete = (item) => {\r\n  itemToDelete.value = item\r\n  showDeleteDialog.value = true\r\n}\r\n\r\nconst confirmDeleteSelected = () => {\r\n  itemToDelete.value = null\r\n  showDeleteDialog.value = true\r\n}\r\n\r\nconst deleteConfirmed = async () => {\r\n  try {\r\n    if (deletingMultipleComputed.value) {\r\n      await posStore.deleteMultipleItems(selectedItems.value)\r\n      selectedItems.value = []\r\n    } else {\r\n      await posStore.deleteItem(itemToDelete.value.id)\r\n    }\r\n    showDeleteDialog.value = false\r\n    itemToDelete.value = null\r\n  } catch (err) {\r\n    logger.error('Delete operation failed:', err)\r\n    error.value = err.message || 'Failed to delete item(s)'\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.items-management {\r\n  height: 100%;\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n"],"names":["errorMessage","ref","companyStore","useCompanyStore","props","__props","emit","__emit","posStore","usePosStore","form","fileInput","loading","previewImage","rules","v","itemForm","reactive","dialogVisible","computed","value","editingItem","categories","watch","newItem","key","triggerImageUpload","handleImageUpload","event","file","logger","reader","e","result","error","base64Data","pictureData","imageResponse","__temp","__restore","_withAsyncContext","_a","imageError","_b","removeImage","saveItem","valid","itemData","c","_c","s","_d","itemResponse","_e","_f","_g","_h","closeDialog","_i","selectedCategory","selectedItems","showDeleteDialog","deletingMultiple","showItemModal","itemToDelete","headers","deletingMultipleComputed","formatPrice","price","getImageUrl","item","onMounted","err","handleSearch","handleCategoryChange","categoryId","openItemModal","handleItemSaved","response","handleError","confirmDelete","confirmDeleteSelected","deleteConfirmed"],"mappings":"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"}