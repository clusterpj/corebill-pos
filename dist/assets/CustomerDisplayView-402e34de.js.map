{"version":3,"file":"CustomerDisplayView-402e34de.js","sources":["../../src/views/pos/components/PromoSlider.vue","../../src/views/pos/components/CustomerDisplay.vue","../../src/views/pos/CustomerDisplayView.vue"],"sourcesContent":["<template>\r\n  <v-card class=\"promo-slider h-100\" elevation=\"0\" rounded=\"0\">\r\n    <v-carousel\r\n      cycle\r\n      height=\"100%\"\r\n      hide-delimiter-background\r\n      show-arrows=\"hover\"\r\n      interval=\"6000\"\r\n      class=\"fill-height\"\r\n      hide-delimiters\r\n    >\r\n      <v-carousel-item\r\n        v-for=\"(promo, i) in promos\"\r\n        :key=\"i\"\r\n        :src=\"promo.image\"\r\n        cover\r\n      >\r\n        <v-sheet\r\n          class=\"promo-overlay d-flex align-center justify-center flex-column text-center\"\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n        >\r\n          <div class=\"promo-content\">\r\n            <h2 class=\"text-h3 font-weight-bold mb-4\">{{ promo.title }}</h2>\r\n            <div class=\"text-h5 mb-6\">{{ promo.description }}</div>\r\n            <v-chip\r\n              v-if=\"promo.discount\"\r\n              color=\"error\"\r\n              size=\"x-large\"\r\n              class=\"text-h5 px-8 py-4\"\r\n            >\r\n              {{ promo.discount }}\r\n            </v-chip>\r\n          </div>\r\n        </v-sheet>\r\n      </v-carousel-item>\r\n    </v-carousel>\r\n  </v-card>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { usePromoStore } from '@/stores/promo'\r\n\r\nconst promoStore = usePromoStore()\r\nconst promos = promoStore.promos\r\n</script>\r\n\r\n<style scoped>\r\n.promo-slider {\r\n  background: transparent;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.v-carousel {\r\n  height: 100vh !important;\r\n}\r\n\r\n.promo-overlay {\r\n  background: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n}\r\n\r\n.promo-content {\r\n  padding: 2rem;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  border-radius: 16px;\r\n  backdrop-filter: blur(8px);\r\n  max-width: 80%;\r\n}\r\n\r\n.v-carousel__controls {\r\n  background: linear-gradient(to top, rgba(0,0,0,0.5), transparent);\r\n}\r\n\r\n.text-h3 {\r\n  text-shadow: 2px 2px 4px rgba(0,0,0,0.5);\r\n}\r\n\r\n.text-h5 {\r\n  text-shadow: 1px 1px 2px rgba(0,0,0,0.5);\r\n}\r\n\r\n.v-chip {\r\n  font-weight: 700 !important;\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n</style>\r\n","<template>\r\n  <v-container fluid class=\"fill-height pa-0\">\r\n    <v-row class=\"fill-height ma-0\">\r\n      <!-- Cart Section -->\r\n      <v-col cols=\"12\" md=\"7\" class=\"pa-4\">\r\n        <v-fade-transition>\r\n          <v-card class=\"cart-display h-100 d-flex flex-column\" elevation=\"2\" v-show=\"!isRefreshing\">\r\n            <v-card-title class=\"text-center text-h5 py-4 flex-shrink-0\">\r\n              Current Order\r\n              <div v-if=\"currentStore\" class=\"text-caption text-primary\">\r\n                {{ currentStore.name }} (Store #{{ currentStore.id }})\r\n              </div>\r\n            </v-card-title>\r\n\r\n            <v-divider></v-divider>\r\n\r\n            <v-card-text class=\"flex-grow-1 d-flex flex-column pa-0\">\r\n              <div class=\"flex-grow-1 overflow-y-auto\">\r\n                <v-list v-if=\"cartItems && cartItems.length > 0\" class=\"order-items\">\r\n                  <v-list-item\r\n                    v-for=\"(item, index) in cartItems\"\r\n                    :key=\"index\"\r\n                    :title=\"item.name\"\r\n                    :subtitle=\"`${formatPrice(item.price)} each`\"\r\n                    class=\"py-2\"\r\n                  >\r\n                    <template v-slot:prepend>\r\n                      <v-chip size=\"small\" color=\"grey-lighten-3\" class=\"mr-2\">\r\n                        {{ item.quantity }}\r\n                      </v-chip>\r\n                    </template>\r\n                    <template v-slot:append>\r\n                      {{ formatPrice(item.price * item.quantity) }}\r\n                    </template>\r\n                  </v-list-item>\r\n                </v-list>\r\n\r\n                <v-sheet v-else class=\"d-flex align-center justify-center fill-height\">\r\n                  <div class=\"text-center\">\r\n                    <v-icon size=\"64\" color=\"grey-lighten-2\" class=\"mb-4\">mdi-cart-outline</v-icon>\r\n                    <div class=\"text-subtitle-1 text-grey\">No items in cart</div>\r\n                  </div>\r\n                </v-sheet>\r\n              </div>\r\n\r\n              <v-divider></v-divider>\r\n\r\n              <div class=\"cart-summary pa-4\">\r\n                <v-list density=\"compact\" class=\"totals\">\r\n                  <v-list-item density=\"compact\">\r\n                    <template v-slot:title>\r\n                      <div class=\"d-flex justify-space-between\">\r\n                        <span>Subtotal</span>\r\n                        <span>{{ formatPrice(cartSubtotal) }}</span>\r\n                      </div>\r\n                    </template>\r\n                  </v-list-item>\r\n\r\n                  <v-list-item v-if=\"cartDiscountValue > 0\" density=\"compact\">\r\n                    <template v-slot:title>\r\n                      <div class=\"d-flex justify-space-between\">\r\n                        <span>Discount {{ cartDiscountType === '%' ? `(${cartDiscountValue}%)` : '' }}</span>\r\n                        <span class=\"text-error\">-{{ formatPrice(cartDiscountAmount) }}</span>\r\n                      </div>\r\n                    </template>\r\n                  </v-list-item>\r\n\r\n                  <v-list-item density=\"compact\">\r\n                    <template v-slot:title>\r\n                      <div class=\"d-flex justify-space-between\">\r\n                        <span>Tax ({{ (cartTaxRate * 100).toFixed(1) }}%)</span>\r\n                        <span>{{ formatPrice(cartTaxAmount) }}</span>\r\n                      </div>\r\n                    </template>\r\n                  </v-list-item>\r\n\r\n                  <v-divider class=\"my-2\"></v-divider>\r\n\r\n                  <v-list-item density=\"compact\">\r\n                    <template v-slot:title>\r\n                      <div class=\"d-flex justify-space-between text-h5 font-weight-bold\">\r\n                        <span>Total</span>\r\n                        <span>{{ formatPrice(cartTotal) }}</span>\r\n                      </div>\r\n                    </template>\r\n                  </v-list-item>\r\n                </v-list>\r\n              </div>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-fade-transition>\r\n      </v-col>\r\n\r\n      <!-- Promo Section -->\r\n      <v-col cols=\"12\" md=\"5\" class=\"pa-0 d-flex\">\r\n        <PromoSlider class=\"fill-height w-100\" />\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, onMounted, onUnmounted, ref } from 'vue'\r\nimport { useCartStore } from '@/stores/cart-store'\r\nimport { useCompanyStore } from '@/stores/company'\r\nimport { storeToRefs } from 'pinia'\r\nimport { logger } from '@/utils/logger'\r\nimport { cartSync } from '@/services/cartSync'\r\nimport PromoSlider from './PromoSlider.vue'\r\n\r\nlogger.info('CustomerDisplay component initializing...')\r\n\r\nconst cartStore = useCartStore()\r\nconst companyStore = useCompanyStore()\r\nconst isRefreshing = ref(false)\r\nlet refreshInterval: number | null = null\r\nlet updateTimeout: number | null = null\r\n\r\n// Get current store from company store\r\nconst currentStore = computed(() => {\r\n  const store = companyStore.stores.find(s => s.id === companyStore.selectedStore)\r\n  logger.debug('Current store computed:', store)\r\n  return store\r\n})\r\n\r\n// Use storeToRefs for reactive cart properties\r\nconst { \r\n  items: cartItems,\r\n  discountType: cartDiscountType,\r\n  discountValue: cartDiscountValue,\r\n  taxRate: cartTaxRate,\r\n  subtotal: cartSubtotal,\r\n  taxAmount: cartTaxAmount,\r\n  discountAmount: cartDiscountAmount,\r\n  total: cartTotal\r\n} = storeToRefs(cartStore)\r\n\r\n// Format price helper\r\nconst formatPrice = (cents: number): string => {\r\n  const formatted = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2\r\n  }).format((cents || 0) / 100)\r\n  return formatted\r\n}\r\n\r\n// Handle cart updates\r\nlet unsubscribeFromCartSync: (() => void) | null = null\r\n\r\n// Refresh data with transition\r\nconst refreshData = async () => {\r\n  if (isRefreshing.value) return\r\n\r\n  isRefreshing.value = true\r\n  \r\n  // Shorter fade out\r\n  await new Promise(resolve => setTimeout(resolve, 50))\r\n  \r\n  // Update data\r\n  cartStore.initializeFromStorage()\r\n  \r\n  // Almost immediate show of new content\r\n  await new Promise(resolve => setTimeout(resolve, 20))\r\n  \r\n  isRefreshing.value = false\r\n}\r\n\r\n// Start periodic refresh\r\nconst startAutoRefresh = () => {\r\n  if (refreshInterval) return\r\n  \r\n  // Refresh every second\r\n  refreshInterval = window.setInterval(() => {\r\n    refreshData()\r\n  }, 1000)\r\n  \r\n  logger.info('Auto-refresh started')\r\n}\r\n\r\n// Stop periodic refresh\r\nconst stopAutoRefresh = () => {\r\n  if (refreshInterval) {\r\n    window.clearInterval(refreshInterval)\r\n    refreshInterval = null\r\n  }\r\n  \r\n  if (updateTimeout) {\r\n    window.clearTimeout(updateTimeout)\r\n    updateTimeout = null\r\n  }\r\n  \r\n  logger.info('Auto-refresh stopped')\r\n}\r\n\r\nonMounted(async () => {\r\n  logger.info('CustomerDisplay mounted, initializing cart sync...')\r\n  \r\n  // Initialize from storage first\r\n  cartStore.initializeFromStorage()\r\n  \r\n  // Subscribe to cart updates\r\n  unsubscribeFromCartSync = cartSync.subscribeToUpdates((newState) => {\r\n    logger.info('Received cart update:', newState)\r\n    cartStore.$patch(newState)\r\n  })\r\n\r\n  // Start auto-refresh\r\n  startAutoRefresh()\r\n\r\n  // Attempt to enter fullscreen mode\r\n  try {\r\n    if (document.documentElement.requestFullscreen) {\r\n      await document.documentElement.requestFullscreen()\r\n      logger.info('✅ Entered fullscreen mode successfully')\r\n    }\r\n  } catch (error) {\r\n    logger.warn('⚠️ Failed to enter fullscreen mode:', error)\r\n  }\r\n\r\n  logger.info('CustomerDisplay initialized:', {\r\n    store: currentStore.value,\r\n    cartItems: cartItems.value?.length || 0,\r\n    cartTotal: cartTotal.value || 0\r\n  })\r\n})\r\n\r\nonUnmounted(() => {\r\n  // Clean up subscription\r\n  if (unsubscribeFromCartSync) {\r\n    unsubscribeFromCartSync()\r\n  }\r\n  \r\n  // Stop auto-refresh\r\n  stopAutoRefresh()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n:deep(html),\r\n:deep(body),\r\n:deep(#app) {\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n  width: 100vw !important;\r\n  height: 100vh !important;\r\n  position: fixed !important;\r\n  top: 0 !important;\r\n  left: 0 !important;\r\n  background: transparent !important;\r\n}\r\n\r\n:deep(.v-application__wrap) {\r\n  min-height: 100vh !important;\r\n  height: 100vh !important;\r\n  overflow: hidden !important;\r\n  background: transparent !important;\r\n}\r\n\r\n:deep(.v-container) {\r\n  padding: 0 !important;\r\n  margin: 0 !important;\r\n  max-width: 100vw !important;\r\n  max-height: 100vh !important;\r\n}\r\n\r\n:deep(.v-row) {\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n  height: 100vh !important;\r\n}\r\n\r\n:deep(.v-col) {\r\n  padding: 0 !important;\r\n  margin: 0 !important;\r\n}\r\n\r\n:deep(.v-application__wrap) {\r\n  min-height: 100vh !important;\r\n  height: 100vh !important;\r\n  overflow: hidden !important;\r\n}\r\n\r\n.customer-display-layout {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.cart-display {\r\n  will-change: opacity;\r\n  backface-visibility: hidden;\r\n  transform: translateZ(0);\r\n  height: 100%;\r\n  max-height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.order-items {\r\n  will-change: opacity;\r\n}\r\n\r\n.cart-summary {\r\n  background: #f5f5f5;\r\n  position: sticky;\r\n  bottom: 0;\r\n  z-index: 2;\r\n}\r\n\r\n.v-container {\r\n  max-width: 100vw;\r\n  max-height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.v-row {\r\n  min-height: 100vh;\r\n}\r\n\r\n.v-col {\r\n  overflow: hidden;\r\n}\r\n\r\n.totals {\r\n  background: transparent !important;\r\n}\r\n\r\n.v-fade-transition {\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.v-fade-transition-enter-active,\r\n.v-fade-transition-leave-active {\r\n  transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.v-fade-transition-enter-from,\r\n.v-fade-transition-leave-to {\r\n  opacity: 0.98;\r\n}\r\n\r\n.v-fade-transition-enter-to,\r\n.v-fade-transition-leave-from {\r\n  opacity: 1;\r\n}\r\n\r\n/* Add hardware acceleration */\r\n* {\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n/* Custom scrollbar */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 4px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: #888;\r\n  border-radius: 4px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #555;\r\n}\r\n</style>\r\n","<template>\r\n  <v-layout class=\"customer-display-layout\">\r\n    <template v-if=\"isInitialized\">\r\n      <customer-display />\r\n    </template>\r\n    <template v-else>\r\n      <v-overlay\r\n        :model-value=\"true\"\r\n        class=\"align-center justify-center\"\r\n      >\r\n        <v-progress-circular\r\n          size=\"64\"\r\n          color=\"primary\"\r\n          indeterminate\r\n        />\r\n      </v-overlay>\r\n    </template>\r\n  </v-layout>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useCompanyStore } from '@/stores/company'\r\nimport CustomerDisplay from './components/CustomerDisplay.vue'\r\nimport { logger } from '@/utils/logger'\r\n\r\nconst router = useRouter()\r\nconst companyStore = useCompanyStore()\r\nconst isInitialized = ref(false)\r\n\r\nasync function initializeDisplay() {\r\n  try {\r\n    logger.startGroup('Customer Display: Initializing')\r\n    \r\n    // Try to initialize from stored data first\r\n    await companyStore.initializeStore()\r\n    \r\n    // Check if store is properly configured\r\n    if (!companyStore.isConfigured || !companyStore.selectedStore) {\r\n      logger.warn('Store not properly configured, redirecting to cashier selection', {\r\n        isConfigured: companyStore.isConfigured,\r\n        selectedStore: companyStore.selectedStore,\r\n        selectedCustomer: companyStore.selectedCustomer,\r\n        selectedCashier: companyStore.selectedCashier\r\n      })\r\n      router.push('/select-cashier')\r\n      return\r\n    }\r\n\r\n    // Double check store data is loaded\r\n    if (companyStore.stores.length === 0) {\r\n      logger.info('Fetching stores data...')\r\n      await companyStore.fetchStores()\r\n    }\r\n\r\n    isInitialized.value = true\r\n    logger.info('Customer display initialized successfully', {\r\n      store: companyStore.currentStore,\r\n      storeId: companyStore.selectedStore\r\n    })\r\n  } catch (error) {\r\n    logger.error('Failed to initialize customer display:', error)\r\n    router.push('/select-cashier')\r\n  } finally {\r\n    logger.endGroup()\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await initializeDisplay()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.customer-display-layout {\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"],"names":["promos","usePromoStore","logger","cartStore","useCartStore","companyStore","useCompanyStore","isRefreshing","ref","refreshInterval","currentStore","computed","store","s","cartItems","cartDiscountType","cartDiscountValue","cartTaxRate","cartSubtotal","cartTaxAmount","cartDiscountAmount","cartTotal","storeToRefs","formatPrice","cents","unsubscribeFromCartSync","refreshData","resolve","startAutoRefresh","stopAutoRefresh","onMounted","cartSync","newState","error","_a","onUnmounted","router","useRouter","isInitialized","initializeDisplay"],"mappings":"4hBA4CA,MAAMA,EADaC,IACO,qqCCkE1BC,EAAO,KAAK,2CAA2C,EAEvD,MAAMC,EAAYC,IACZC,EAAeC,IACfC,EAAeC,EAAI,EAAK,EAC9B,IAAIC,EAAiC,KAI/B,MAAAC,EAAeC,GAAS,IAAM,CAC5B,MAAAC,EAAQP,EAAa,OAAO,QAAUQ,EAAE,KAAOR,EAAa,aAAa,EACxE,OAAAH,EAAA,MAAM,0BAA2BU,CAAK,EACtCA,CAAA,CACR,EAGK,CACJ,MAAOE,EACP,aAAcC,EACd,cAAeC,EACf,QAASC,EACT,SAAUC,EACV,UAAWC,EACX,eAAgBC,EAChB,MAAOC,CAAA,EACLC,EAAYnB,CAAS,EAGnBoB,EAAeC,GACD,IAAI,KAAK,aAAa,QAAS,CAC/C,MAAO,WACP,SAAU,MACV,sBAAuB,CACxB,CAAA,EAAE,QAAQA,GAAS,GAAK,GAAG,EAK9B,IAAIC,EAA+C,KAGnD,MAAMC,EAAc,SAAY,CAC1BnB,EAAa,QAEjBA,EAAa,MAAQ,GAGrB,MAAM,IAAI,QAAQoB,GAAW,WAAWA,EAAS,EAAE,CAAC,EAGpDxB,EAAU,sBAAsB,EAGhC,MAAM,IAAI,QAAQwB,GAAW,WAAWA,EAAS,EAAE,CAAC,EAEpDpB,EAAa,MAAQ,GAAA,EAIjBqB,EAAmB,IAAM,CACzBnB,IAGcA,EAAA,OAAO,YAAY,IAAM,CAC7BiB,KACX,GAAI,EAEPxB,EAAO,KAAK,sBAAsB,EAAA,EAI9B2B,EAAkB,IAAM,CACxBpB,IACF,OAAO,cAAcA,CAAe,EAClBA,EAAA,MAQpBP,EAAO,KAAK,sBAAsB,CAAA,EAGpC,OAAA4B,EAAU,SAAY,OACpB5B,EAAO,KAAK,oDAAoD,EAGhEC,EAAU,sBAAsB,EAGNsB,EAAAM,EAAS,mBAAoBC,GAAa,CAC3D9B,EAAA,KAAK,wBAAyB8B,CAAQ,EAC7C7B,EAAU,OAAO6B,CAAQ,CAAA,CAC1B,EAGgBJ,IAGb,GAAA,CACE,SAAS,gBAAgB,oBACrB,MAAA,SAAS,gBAAgB,oBAC/B1B,EAAO,KAAK,wCAAwC,SAE/C+B,EAAO,CACP/B,EAAA,KAAK,sCAAuC+B,CAAK,CAC1D,CAEA/B,EAAO,KAAK,+BAAgC,CAC1C,MAAOQ,EAAa,MACpB,YAAWwB,EAAApB,EAAU,QAAV,YAAAoB,EAAiB,SAAU,EACtC,UAAWb,EAAU,OAAS,CAAA,CAC/B,CAAA,CACF,EAEDc,GAAY,IAAM,CAEZV,GACsBA,IAIVI,GAAA,CACjB,6pEChND,MAAMO,EAASC,KACThC,EAAeC,IACfgC,EAAgB9B,EAAI,EAAK,EAE/B,eAAe+B,GAAoB,CAC7B,GAAA,CAOF,GANArC,EAAO,WAAW,gCAAgC,EAGlD,MAAMG,EAAa,kBAGf,CAACA,EAAa,cAAgB,CAACA,EAAa,cAAe,CAC7DH,EAAO,KAAK,kEAAmE,CAC7E,aAAcG,EAAa,aAC3B,cAAeA,EAAa,cAC5B,iBAAkBA,EAAa,iBAC/B,gBAAiBA,EAAa,eAAA,CAC/B,EACD+B,EAAO,KAAK,iBAAiB,EAC7B,MACF,CAGI/B,EAAa,OAAO,SAAW,IACjCH,EAAO,KAAK,yBAAyB,EACrC,MAAMG,EAAa,eAGrBiC,EAAc,MAAQ,GACtBpC,EAAO,KAAK,4CAA6C,CACvD,MAAOG,EAAa,aACpB,QAASA,EAAa,aAAA,CACvB,QACM4B,EAAO,CACP/B,EAAA,MAAM,yCAA0C+B,CAAK,EAC5DG,EAAO,KAAK,iBAAiB,CAAA,QAC7B,CACAlC,EAAO,SAAS,CAClB,CACF,CAEA,OAAA4B,EAAU,SAAY,CACpB,MAAMS,EAAkB,CAAA,CACzB"}