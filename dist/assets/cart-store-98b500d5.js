var H=Object.defineProperty;var M=(e,t,o)=>t in e?H(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o;var x=(e,t,o)=>(M(e,typeof t!="symbol"?t+"":t,o),o);import{n as r,S as u,R as p,o as q,a5 as U}from"./index-9f2fee20.js";class s{static toCents(t){if(!t)return 0;if(console.debug("[PriceUtils.toCents] Input:",{amount:t,type:typeof t,isInteger:Number.isInteger(t)}),Number.isInteger(t)&&t<1e8)return console.debug("[PriceUtils.toCents] Already in cents:",t),Math.round(t);if(Number.isInteger(t)&&t>=1e8){const o=Math.round(t*100);return console.debug("[PriceUtils.toCents] Converting large dollar amount:",{dollars:t,cents:o}),o}if(typeof t=="string"){const o=t.replace(/[$,\s]/g,"");t=parseFloat(o)}if(isNaN(t))throw new Error(`Cannot convert ${t} to cents`);return Math.round(t*100)}static toDollars(t){if(!t)return 0;if(typeof t=="string"&&(t=parseInt(t.replace(/[^0-9.-]/g,""),10)),isNaN(t))throw new Error(`Cannot convert ${t} to dollars`);return Number((t/100).toFixed(2))}static format(t,o="USD"){const n=this.toCents(t),i=this.toDollars(n);return new Intl.NumberFormat("en-US",{style:"currency",currency:o,minimumFractionDigits:2,maximumFractionDigits:2}).format(i)}static formatInvoiceAmount(t){return t?this.isInDollars(t)?this.format(this.toCents(t)):this.format(t):this.format(0)}static isInDollars(t){return t?(typeof t=="string"&&(t=parseFloat(t)),!!(t%1!==0||Number.isInteger(t)&&t>0&&t<100)):!1}static ensureCents(t){return t?(typeof t=="string"&&(t=parseFloat(t.replace(/[^0-9.-]/g,""))),t%1!==0?Math.round(t*100):Math.round(t)):0}static normalizePrice(t){return t?(typeof t=="string"&&(t=parseFloat(t.replace(/[^0-9.-]/g,""))),t%1!==0?Math.round(t*100):Math.round(t)):0}static parse(t){if(!t)return 0;typeof t=="string"&&(t=t.replace(/[$,\s]/g,""));const o=parseFloat(t);return this.normalizePrice(o)}static isValid(t){return typeof t=="string"&&(t=this.parse(t)),Number.isFinite(t)&&t>=0}static calculateTotal(t){return Array.isArray(t)?t.reduce((o,n)=>{const i=this.normalizePrice(n.price),a=Number(n.quantity)||1;return o+i*a},0):0}}var V=(e=>(e.PAID="PAID",e.UNPAID="UNPAID",e))(V||{}),P=(e=>(e.DINE_IN="DINE IN",e.TO_GO="TO-GO",e.DELIVERY="DELIVERY",e.PICKUP="PICKUP",e))(P||{}),z=(e=>(e.PENDING="pending",e.IN_PROGRESS="in_progress",e.COMPLETED="completed",e.CANCELLED="cancelled",e))(z||{});const L=()=>({items:[],discountType:"fixed",discountValue:0,taxRate:.08,loading:!1,error:null,notes:"",selectedTables:[],holdInvoiceId:null,holdOrderDescription:null,type:null,editingInvoiceId:null,editingInvoiceNumber:null,editingInvoiceStatus:null}),w={setNotes(e,t){e.notes=t},setSelectedTables(e,t){e.selectedTables=t},setHoldInvoiceId(e,t){e.holdInvoiceId=t,t||(e.holdOrderDescription=null)},setHoldOrderDescription(e,t){e.holdOrderDescription=t},setDiscount(e,{type:t,value:o}){e.discountType=t,e.discountValue=o},setType(e,t){if(t&&!Object.values(P).includes(t))throw new Error(`Invalid order type: ${t}`);e.type=t},clearCart(e){e.items=[],e.discountType="fixed",e.discountValue=0,e.notes="",e.selectedTables=[],e.holdInvoiceId=null,e.holdOrderDescription=null,e.type=null,e.editingInvoiceId=null}},$={subtotal:e=>e.items.reduce((t,o)=>{const i=s.normalizePrice(o.price)*o.quantity;return t+i},0),discountAmount:e=>e.discountType==="%"?Math.round(e.items.reduce((t,o)=>{const n=s.normalizePrice(o.price);return t+n*o.quantity},0)*(e.discountValue/100)):s.toCents(e.discountValue),taxableAmount:e=>{const t=e.items.reduce((n,i)=>{const a=s.normalizePrice(i.price);return n+a*i.quantity},0),o=e.discountType==="%"?Math.round(t*(e.discountValue/100)):s.toCents(e.discountValue);return t-o},taxAmount:e=>{const t=$.taxableAmount(e);return Math.round(t*e.taxRate)},total:e=>{const t=e.items.reduce((a,d)=>{const f=s.normalizePrice(d.price);return a+f*d.quantity},0),o=e.discountType==="%"?Math.round(t*(e.discountValue/100)):s.toCents(e.discountValue),n=t-o,i=Math.round(n*e.taxRate);return Math.round(n+i)},itemCount:e=>e.items.reduce((t,o)=>t+o.quantity,0),isEmpty:e=>e.items.length===0,isHoldOrder:e=>e.holdInvoiceId!==null,orderType:e=>e.type||null,isValidOrderType:e=>e.type&&Object.values(P).includes(e.type),isEditingInvoice:e=>e.editingInvoiceId!==null,canUpdateInvoice:e=>e.editingInvoiceId!==null&&["DRAFT","SENT"].includes(e.editingInvoiceStatus)},Q=["allow_invoice_form_pos","pdf_format_pos","default_email","tax_per_item","discount_per_item","retention_active","invoice_auto_generate","invoice_issuance_period","payment_auto_generate","allow_partial_pay","footer_text_value","footer_url_value","footer_url_name","autoprint_pdf_pos","current_year","activate_pay_button"];async function F(e){var t,o;r.startGroup(`POS API: Get Next ${e} Number`);try{const n=u("nextNumber");r.info(`Fetching next ${e} number from endpoint:`,n);const i=await p.get(n,{params:{key:e}});if(r.debug(`Next ${e} number response:`,i.data),!((t=i.data)!=null&&t.nextNumber)||!((o=i.data)!=null&&o.prefix))throw new Error(`Invalid next ${e} number response format`);return{number:`${i.data.prefix}${i.data.nextNumber}`,nextNumber:i.data.nextNumber,prefix:i.data.prefix}}catch(n){throw r.error(`Failed to get next ${e} number`,n),new Error(`Failed to get next ${e} number: ${n.message}`)}finally{r.endGroup()}}const R={async getCompanySettings(){r.startGroup("POS API: Get Company Settings");try{const e=u("pos.settings");r.info("Fetching company settings from endpoint:",e);const t={settings:Q},o=await p.get(e,{params:t});return r.debug("Company settings response:",o.data),o.data}catch(e){throw r.error("Failed to fetch company settings",e),e}finally{r.endGroup()}},async getEmployees(){r.startGroup("POS API: Get Employees");try{const e=u("pos.employees");r.info("Fetching employees from endpoint:",e);const t=await p.get(e);if(r.http("GET",e,{},t),!t.data)throw new Error("Invalid response format: missing data");return{success:!0,employees:t.data}}catch(e){throw r.error("Failed to fetch employees",e),e}finally{r.endGroup()}},async getCashiers(){r.startGroup("POS API: Get Cashiers");try{const e=u("pos.cashiers");r.info("Fetching cashiers from endpoint:",e);const t=await p.get(e);if(r.http("GET",e,{},t),!t.data)throw new Error("Invalid response format: missing data");return{success:!0,cashiers:t.data}}catch(e){throw r.error("Failed to fetch cashiers",e),e}finally{r.endGroup()}},async getItems(e={}){r.startGroup("POS API: Get Items");try{const t=u("pos.items");r.info("Fetching items from endpoint:",t),r.debug("Request parameters",e);const o=await p.get(t,{params:e});if(r.http("GET",t,{params:e},o),!o.data)throw new Error("Invalid response format: missing data");return o.data}catch(t){throw r.error("Failed to fetch items",{error:t,endpoint:u("pos.items"),params:e}),t}finally{r.endGroup()}},async createItem(e){r.startGroup("POS API: Create Item");try{const t=u("pos.items");r.info("Creating item at endpoint:",t),r.debug("Item data:",e);const o=await p.post(t,e);if(r.http("POST",t,{data:e},o),!o.data)throw new Error("Invalid response format: missing data");return o.data}catch(t){throw r.error("Failed to create item",{error:t,endpoint:u("pos.items"),itemData:e}),t}finally{r.endGroup()}},async updateItem(e,t){r.startGroup("POS API: Update Item");try{const o=`${u("pos.items")}/${e}`;r.info("Updating item at endpoint:",o),r.debug("Item data:",t);const n=await p.put(o,t);if(r.http("PUT",o,{data:t},n),!n.data)throw new Error("Invalid response format: missing data");return n.data}catch(o){throw r.error("Failed to update item",{error:o,endpoint:u("pos.items"),itemId:e,itemData:t}),o}finally{r.endGroup()}},async getItemCategories(){r.startGroup("POS API: Get Item Categories");try{const e=u("pos.categories");r.info("Fetching item categories from endpoint:",e);const t=await p.get(e);if(r.http("GET",e,{},t),!t.data)throw new Error("Invalid response format: missing data");if(t.data.success===!0){const o=t.data.data||[];return r.info(`Categories fetched successfully. Count: ${o.length}`),r.debug("Categories:",o),{success:!0,data:o}}else return r.warn("Unexpected API response structure",t.data),{success:!1,data:[],error:"Invalid API response format"}}catch(e){throw r.error("Failed to fetch categories",{error:e,endpoint:u("pos.categories")}),e}finally{r.endGroup()}},async getStores(){r.startGroup("POS API: Get Stores");try{const e=u("pos.store");r.info("Fetching stores from endpoint:",e);const t={limit:1e4,orderByField:"name",orderBy:"asc"},o=await p.get(e,{params:t});if(r.http("GET",e,{params:t},o),!o.data)throw new Error("Invalid response format: missing data");return{success:!0,stores:o.data}}catch(e){throw r.error("Failed to fetch stores",{error:e,endpoint:u("pos.store")}),e}finally{r.endGroup()}},invoice:{async getNextNumber(){const e=await F("invoice");return{invoice_number:e.number,nextNumber:e.nextNumber,prefix:e.prefix}},async create(e){r.startGroup("POS API: Create Invoice");try{const t=u("pos.invoice.create");r.info("Creating invoice at endpoint:",t),r.debug("Invoice data:",e);const o=await p.post(t,e);return r.debug("Invoice creation response:",o.data),o.data}catch(t){throw r.error("Failed to create invoice",t),t}finally{r.endGroup()}},async getById(e){r.startGroup("POS API: Get Invoice");try{const t=`${u("pos.invoice.get")}/${e}`;r.info("Fetching invoice from endpoint:",t);const o=await p.get(t);return r.debug("Invoice response:",o.data),o.data}catch(t){throw r.error("Failed to get invoice",t),t}finally{r.endGroup()}},async getAll(e={}){r.startGroup("POS API: Get All Invoices");try{const t=u("pos.invoice.getAll");r.info("Fetching invoices from endpoint:",t);const o=await p.get(t,{params:e});return r.debug("Invoices response:",o.data),{success:!0,data:o.data.invoices||[]}}catch(t){throw r.error("Failed to fetch invoices",t),t}finally{r.endGroup()}},async update(e,t){r.startGroup("POS API: Update Invoice");try{const o=`invoices/${e}`;r.info("Updating invoice at endpoint:",o);const n={...t,id:Number(e),is_edited:1,status:"DRAFT",is_invoice_pos:1,is_pdf_pos:!0,banType:!0,avalara_bool:!1,package_bool:0,save_as_draft:0,not_charge_automatically:0};r.debug("Formatted invoice update data:",n);const i={...n,id:Number(e),is_edited:1,status:"DRAFT",is_invoice_pos:1,is_pdf_pos:!0,banType:!0,avalara_bool:!1,package_bool:0,save_as_draft:0,not_charge_automatically:0,items:n.items.map(d=>({...d,price:Math.round(Number(d.price*100)),sub_total:Math.round(Number(d.sub_total*100)),total:Math.round(Number(d.total*100)),tax:Math.round(Number(d.tax*100))}))},a=await p.put(o,i);return r.debug("Invoice update response:",a.data),a.data}catch(o){throw r.error("Failed to update invoice",o),o}finally{r.endGroup()}}},payment:{async getMethods(){r.startGroup("POS API: Get Payment Methods");try{const e=u("pos.payment.methods");r.info("Fetching payment methods from endpoint:",e);const t=await p.get(e);return r.debug("Payment methods response:",t.data),t.data}catch(e){throw r.error("Failed to get payment methods",e),e}finally{r.endGroup()}},async getNextNumber(){const e=await F("payment");return{payment_number:e.number,nextNumber:e.nextNumber,prefix:e.prefix}},async create(e){r.startGroup("POS API: Create Payment");try{const t=u("pos.payment.create");r.info("Creating payment at endpoint:",t),r.debug("Payment data:",e);const o=await p.post(t,e);return r.debug("Payment creation response:",o.data),o.data}catch(t){throw r.error("Failed to create payment",t),t}finally{r.endGroup()}},async getById(e){r.startGroup("POS API: Get Payment");try{const t=`${u("pos.payment.get")}/${e}`;r.info("Fetching payment from endpoint:",t);const o=await p.get(t);return r.debug("Payment response:",o.data),o.data}catch(t){throw r.error("Failed to get payment",t),t}finally{r.endGroup()}}},holdInvoice:{async create(e){r.startGroup("POS API: Create Hold Invoice");try{const t=u("pos.holdInvoices");r.info("Creating hold invoice at endpoint:",t),r.debug("Hold invoice data:",e);const o=await p.post(t,e);return r.debug("Hold invoice response:",o.data),o.data}catch(t){throw r.error("Failed to create hold invoice",t),t}finally{r.endGroup()}},async update(e,t){r.startGroup("POS API: Update Hold Invoice");try{const o=u("pos.holdInvoices");r.info(`Updating hold invoice with description: ${e}`),r.debug("Hold invoice update data:",t);const n=await p.post(o,{...t,description:e,is_hold_invoice:!0});return r.debug("Hold invoice update response:",n.data),{success:!0,data:n.data}}catch(o){return r.error("Failed to update hold invoice",o),{success:!1,error:o.message,message:"Failed to update hold invoice"}}finally{r.endGroup()}},async getAll(){r.startGroup("POS API: Get All Hold Invoices");try{const e=u("pos.holdInvoices"),t=await p.get(e);return r.debug("Hold invoices response:",t.data),{success:!0,data:{hold_invoices:t.data.hold_invoices}}}catch(e){throw r.error("Failed to fetch hold invoices",e),e}finally{r.endGroup()}},async getById(e){r.startGroup("POS API: Get Hold Invoice");try{const t=`${u("pos.holdInvoices")}/${e}`,o=await p.get(t);return r.debug("Hold invoice response:",o.data),o.data}catch(t){throw r.error("Failed to fetch hold invoice",t),t}finally{r.endGroup()}},async delete(e){var t,o;r.startGroup("POS API: Delete Hold Invoice");try{if(!e)throw new Error("Hold invoice ID is required");const n=u("pos.holdInvoiceDelete");r.info("Deleting hold invoice at endpoint:",n),r.debug("Delete hold invoice ID:",e);const i=await p.post(n,{id:e});if(r.debug("Delete response:",i.data),!((t=i.data)!=null&&t.success))throw new Error(((o=i.data)==null?void 0:o.message)||"Failed to delete hold invoice");return{success:!0,data:i.data}}catch(n){return r.error("Failed to delete hold invoice",n),{success:!1,error:n.message,message:"Failed to delete hold invoice"}}finally{r.endGroup()}}}},X=()=>R,B=R,C={addItem(e,t,o=1){r.startGroup("Cart Store: Adding Item");try{r.info("Adding item to cart:",{product:{id:t.id,name:t.name,price:t.price,fromHeldOrder:t.fromHeldOrder,formatted_price:s.format(t.price),section_id:t.section_id,section_type:t.section_type,section_name:t.section_name},quantity:o});const n=t.fromHeldOrder?t.price:s.ensureCents(t.price);r.info("Price validation:",{originalPrice:t.price,fromHeldOrder:t.fromHeldOrder,isInDollars:s.isInDollars(t.price),normalizedPrice:n,formatted:s.format(n)});const i=e.items.find(a=>a.id===t.id);if(i){const a=i.quantity;i.quantity+=o,i.total=i.price*i.quantity,i.sub_total=i.total,r.info("Updated existing item:",{id:i.id,name:i.name,oldQuantity:a,newQuantity:i.quantity,price:i.price,total:i.total,formatted_total:s.format(i.total)})}else{const a={...t,price:n,quantity:o,total:n*o,sub_total:n*o,discount_type:"fixed",discount:0,discount_val:0,item_id:t.id,section_id:t.section_id,section_type:t.section_type,section_name:t.section_name};e.items.push(a),r.info("Added new item:",{id:a.id,name:a.name,price:a.price,formatted_price:s.format(a.price),quantity:a.quantity,total:a.total,formatted_total:s.format(a.total),section_id:a.section_id,section_type:a.section_type,section_name:a.section_name})}}catch(n){throw r.error("Failed to add item to cart:",n),n}finally{r.endGroup()}},updateItemQuantity(e,{itemId:t,quantity:o,index:n=null}){r.startGroup("Cart Store: Updating Item Quantity");try{r.info("Updating item quantity:",{itemId:t,quantity:o,index:n});let i;if(n!==null?i=e.items[n]:i=e.items.find(a=>a.id===t),i){const a=i.quantity,d=i.total;o>0?(i.quantity=o,i.total=i.price*o,i.sub_total=i.total,r.info("Item quantity updated:",{id:i.id,name:i.name,oldQuantity:a,newQuantity:o,oldTotal:d,newTotal:i.total,formatted_total:s.format(i.total)})):(r.info("Removing item due to zero quantity:",{id:i.id,name:i.name}),this.removeItem(e,{itemId:t,index:n}))}else r.warn("Item not found for quantity update:",{itemId:t,index:n})}catch(i){throw r.error("Failed to update item quantity:",i),i}finally{r.endGroup()}},splitItem(e,t,o){r.startGroup("Cart Store: Splitting Item");try{r.info("Splitting item:",{index:t,splitQuantity:o});const n=e.items[t];if(!n||o>=n.quantity){r.error("Invalid split operation:",{originalItem:n?{id:n.id,name:n.name,quantity:n.quantity}:null,splitQuantity:o});return}const i=n.quantity,a=i-o;n.quantity=a,n.total=n.price*a,n.sub_total=n.total;const d={...n,quantity:o,total:n.price*o,sub_total:n.price*o};e.items.splice(t+1,0,d),r.info("Split completed:",{originalItem:{id:n.id,name:n.name,originalQuantity:i,remainingQuantity:n.quantity,total:n.total,formatted_total:s.format(n.total)},newItem:{id:d.id,name:d.name,quantity:d.quantity,total:d.total,formatted_total:s.format(d.total)}})}catch(n){throw r.error("Failed to split item:",n),n}finally{r.endGroup()}},removeItem(e,{itemId:t,index:o=null}){r.startGroup("Cart Store: Removing Item");try{if(r.info("Removing item from cart:",{itemId:t,index:o}),o!==null){const n=e.items[o];r.info("Removing item by index:",{index:o,item:n?{id:n.id,name:n.name,quantity:n.quantity,total:n.total}:null}),e.items.splice(o,1)}else{const n=e.items.find(i=>i.id===t);r.info("Removing item by ID:",{itemId:t,item:n?{id:n.id,name:n.name,quantity:n.quantity,total:n.total}:null}),e.items=e.items.filter(i=>i.id!==t)}}catch(n){throw r.error("Failed to remove item:",n),n}finally{r.endGroup()}},setDiscount(e,{type:t,value:o}){r.startGroup("Cart Store: Setting Discount");try{r.info("Setting discount:",{type:t,value:o}),e.discountType=t,e.discountValue=o;const n=e.items.reduce((a,d)=>a+d.total,0),i=t==="%"?Math.round(n*(o/100)):s.normalizePrice(o);r.info("Discount applied:",{type:t,value:o,subtotal:n,formatted_subtotal:s.format(n),discountAmount:i,formatted_discount:s.format(i),finalTotal:n-i,formatted_final:s.format(n-i)})}catch(n){throw r.error("Failed to set discount:",n),n}finally{r.endGroup()}},setNotes(e,t){r.startGroup("Cart Store: Setting Notes");try{r.info("Setting notes:",{notes:t}),e.notes=t}catch(o){throw r.error("Failed to set notes:",o),o}finally{r.endGroup()}},setType(e,t){r.startGroup("Cart Store: Setting Type");try{r.info("Setting order type:",t),e.type=t}catch(o){throw r.error("Failed to set order type:",o),o}finally{r.endGroup()}},setSelectedTables(e,t){r.startGroup("Cart Store: Setting Selected Tables");try{r.info("Setting selected tables:",{tables:t}),e.selectedTables=t}catch(o){throw r.error("Failed to set selected tables:",o),o}finally{r.endGroup()}},setHoldInvoiceId(e,t){r.startGroup("Cart Store: Setting Hold Invoice ID");try{r.info("Setting hold invoice ID:",t),e.holdInvoiceId=t,t||(e.holdOrderDescription=null)}catch(o){throw r.error("Failed to set hold invoice ID:",o),o}finally{r.endGroup()}},setHoldOrderDescription(e,t){r.startGroup("Cart Store: Setting Hold Order Description");try{r.info("Setting hold order description:",t),e.holdOrderDescription=t}catch(o){throw r.error("Failed to set hold order description:",o),o}finally{r.endGroup()}},clearCart(e){r.startGroup("Cart Store: Clearing Cart");try{r.info("Clearing cart"),e.items=[],e.discountType="fixed",e.discountValue=0,e.notes="",e.selectedTables=[],e.holdInvoiceId=null,e.holdOrderDescription=null,e.type=null}catch(t){throw r.error("Failed to clear cart:",t),t}finally{r.endGroup()}},loadInvoice(e,t){var o,n,i,a,d,f,y;r.startGroup("Cart Store: Loading Invoice");try{this.clearCart(e),e.editingInvoiceId=t.id,e.editingInvoiceNumber=t.invoice_number,e.editingInvoiceStatus=t.status,e.customer={id:((o=t.customer)==null?void 0:o.id)||t.user_id,name:((n=t.contact)==null?void 0:n.name)||((i=t.customer)==null?void 0:i.name)||t.name,email:((a=t.contact)==null?void 0:a.email)||((d=t.customer)==null?void 0:d.email)||t.email,phone:((f=t.contact)==null?void 0:f.phone)||((y=t.customer)==null?void 0:y.phone)||t.phone},e.contact=t.contact||null,r.info("Loading invoice data:",{id:t.id,invoice_number:t.invoice_number,customer:e.customer,contact:e.contact,items:t.items.map(c=>({id:c.item_id,price:c.price,quantity:c.quantity,total:c.total}))}),e.items=t.items.map(c=>{const I=c.price>1e3?c.price/100:c.price,b=parseInt(c.quantity),v=I*b;return r.info("Processing invoice item:",{id:c.item_id,name:c.name,price:I,formatted_price:s.format(I),quantity:b,total:v,formatted_total:s.format(v)}),{id:c.item_id,name:c.name,description:c.description||"",price:I,quantity:b,unit_name:c.unit_name||"units",tax:c.tax||0,total:v,sub_total:v,discount_type:c.discount_type||"fixed",discount:c.discount||0,discount_val:c.discount_val||0,fromHeldOrder:!0}}),e.notes=t.notes||"",e.type=t.type||null,e.discountType=t.discount_type||"fixed",e.discountValue=t.discount_val||0,r.info("Invoice loaded into cart:",{itemCount:e.items.length,type:e.type,discount:{type:e.discountType,value:e.discountValue,formatted:s.format(e.discountValue)},items:e.items.map(c=>({id:c.id,name:c.name,price:c.price,formatted_price:s.format(c.price),quantity:c.quantity,total:c.total,formatted_total:s.format(c.total)}))})}catch(c){throw r.error("Failed to load invoice into cart:",c),c}finally{r.endGroup()}},async updateInvoice(e){var o,n,i,a,d,f;r.startGroup("Cart Store: Updating Invoice");const t=q();try{if(!e.editingInvoiceId)throw new Error("No invoice being edited");if(!e.items||e.items.length===0)throw new Error("Cannot update invoice: Cart is empty");const y=new Date,c=new Date(y);c.setDate(c.getDate()+7);const I=e.items.reduce((m,G)=>{const D=s.toCents(G.price),T=Math.round(Number(G.quantity));return m+D*T},0),b=e.discountType==="%"?Math.round(I*(e.discountValue/100)):s.normalizePrice(e.discountValue),v=I-b,g=Math.round(v*e.taxRate),l=v+g,h=e.customer||{},N=e.contact||{},S={invoice_number:e.editingInvoiceNumber,invoice_date:y.toISOString().split("T")[0],due_date:c.toISOString().split("T")[0],sub_total:I,total:l,tax:g,due_amount:l,items:e.items.map(m=>{const G=s.normalizePrice(m.price),D=Math.round(Number(m.quantity)),T=G*D,A=Math.round(T*e.taxRate);return{item_id:Number(m.id),name:m.name,description:m.description||"",price:G,quantity:D,unit_name:m.unit_name||"units",sub_total:T,total:T+A,tax:A,discount:"0",discount_val:0,discount_type:"fixed",retention_amount:0,retention_concept:"NO_RETENTION",retention_percentage:0,retentions_id:null}}),status:e.editingInvoiceStatus||"DRAFT",type:e.type,discount_type:e.discountType||"fixed",discount:e.discountValue.toString(),discount_val:b,discount_per_item:"NO",notes:e.notes||"",is_invoice_pos:1,is_pdf_pos:!0,avalara_bool:!1,banType:!0,package_bool:!1,print_pdf:!1,save_as_draft:!1,send_email:!1,not_charge_automatically:!1,is_edited:1,user_id:h.id||((o=t.selectedCustomer)==null?void 0:o.id)||1,customer_id:h.id,customer_name:h.name,customer_email:h.email,contact:N,store_id:((n=t.selectedStore)==null?void 0:n.id)||1,cash_register_id:((i=t.selectedCashier)==null?void 0:i.id)||1,company_id:((a=t.company)==null?void 0:a.id)||1,invoice_template_id:1,invoice_pbx_modify:0,tables_selected:[],packages:[],taxes:[],tip:"0",tip_type:"fixed",tip_val:0,retention:"NO",retention_total:0,late_fee_amount:0,late_fee_taxes:0,pbx_service_price:0,sent:0,viewed:0,tax_per_item:"NO",retention_active:"NO",retention_percentage:0,retention_concept:null,retention_amount:0,package_bool:0,save_as_draft:0,not_charge_automatically:0};r.debug("Updating invoice with data:",S);try{const m=await B.invoice.update(e.editingInvoiceId,S);if(!(m!=null&&m.success))throw new Error((m==null?void 0:m.message)||"Failed to update invoice");return e.editingInvoiceId=null,e.editingInvoiceNumber=null,e.editingInvoiceStatus=null,(d=window.toastr)==null||d.success("Invoice updated successfully"),m}catch(m){throw(f=window.toastr)==null||f.error(m.message||"Failed to update invoice"),m}}catch(y){throw r.error("Failed to update invoice:",y),y}finally{r.endGroup()}}},Z=e=>{var t,o,n,i;try{if(!e)return"";const a=JSON.parse(e);return a.customerNotes?a.customerNotes:(o=(t=a.orderInfo)==null?void 0:t.customer)!=null&&o.notes?a.orderInfo.customer.notes:(i=(n=a.orderInfo)==null?void 0:n.customer)!=null&&i.instructions?a.orderInfo.customer.instructions:typeof a=="string"?a:""}catch{return typeof e=="string"?e:""}},J=()=>new Date().toISOString().split("T")[0],Y=(e=7)=>new Date(Date.now()+e*24*60*60*1e3).toISOString().split("T")[0],O={prepareInvoiceData(e,t,{storeId:o,cashRegisterId:n,referenceNumber:i}){var a,d;r.startGroup("Cart Store: Prepare Invoice Data");try{const f=q(),y=f.currentCustomer;if(!(y!=null&&y.id))throw new Error("Creator ID not found in current customer");(!o||!n)&&r.warn("Missing store or cashier ID:",{storeId:o,cashRegisterId:n});const c=J(),I=Y(),b=e.type||P.DINE_IN,v=e.items.map(l=>{r.debug("Processing item price:",{itemId:l.id,itemName:l.name,originalPrice:l.price,isInDollars:s.isInDollars(l.price)});const h=s.ensureCents(l.price),N=parseInt(l.quantity),S=h*N;return r.debug("Price conversion result:",{itemId:l.id,originalPrice:l.price,convertedPrice:h,quantity:N,total:S}),{item_id:Number(l.id),name:l.name,description:l.description||"",price:h,quantity:N,unit_name:l.unit_name||"units",sub_total:S,total:S,discount:"0",discount_val:0,discount_type:"fixed",tax:s.ensureCents(l.tax||0),retention_amount:0,retention_concept:null,retention_percentage:null,retentions_id:null}});r.debug("Final items array:",v.map(l=>({id:l.item_id,name:l.name,price:l.price,formattedPrice:s.format(l.price),total:l.total,formattedTotal:s.format(l.total)})));const g={print_pdf:!1,is_invoice_pos:1,is_pdf_pos:!0,avalara_bool:!1,send_email:!1,save_as_draft:!1,not_charge_automatically:!1,package_bool:!1,invoice_date:c,due_date:I,invoice_number:i||"-",user_id:Number(y.id),total:s.ensureCents(t.total),due_amount:s.ensureCents(t.total),sub_total:s.ensureCents(t.subtotal),tax:s.ensureCents(t.taxAmount),discount_type:e.discountType,discount:e.discountValue.toString(),discount_val:s.ensureCents(t.discountAmount),discount_per_item:"NO",items:v,invoice_template_id:1,banType:!0,invoice_pbx_modify:0,packages:[],cash_register_id:Number(n)||1,store_id:Number(o)||1,company_id:Number((a=f.company)==null?void 0:a.id)||1,taxes:{},notes:e.notes,contact:{},description:e.holdOrderDescription||i,retention_total:0,retention:"NO",status:"SENT",paid_status:"UNPAID",tax_per_item:"NO",send_sms:e.type===P.DELIVERY&&e.sendSms?1:0,late_fee_amount:0,late_fee_taxes:0,pbx_service_price:0,sent:0,viewed:0,is_prepared_data:!0,type:b};if(e.holdInvoiceId&&(g.hold_invoice_id=Number(e.holdInvoiceId),g.is_hold_invoice=!0),b===P.DINE_IN)if(((d=e.selectedTables)==null?void 0:d.length)>0){const l=e.selectedTables.map(h=>({id:h.id,table_id:h.id,name:h.name,quantity:h.quantity,in_use:1}));g.tables_selected=l,g.hold_tables=l}else g.tables_selected=[],g.hold_tables=[];return r.info("Invoice data prepared:",g),g}catch(f){throw r.error("Failed to prepare invoice data:",f),f}finally{r.endGroup()}},prepareHoldInvoiceData(e,t,{storeId:o,cashRegisterId:n,referenceNumber:i}){const a=this.prepareInvoiceData(e,t,{storeId:o,cashRegisterId:n,referenceNumber:i});return{...a,is_hold_invoice:!0,hold_invoice_id:null,tables_selected:a.tables_selected||[],hold_tables:a.tables_selected||[]}}},E="current-cart-state",j="pos-cart-sync";class k{constructor(){x(this,"channel");this.channel=new BroadcastChannel(j),r.info("Cart sync service initialized")}saveCartState(t){try{if(!t){r.warn("Attempted to save null cart state");return}const o=JSON.parse(JSON.stringify(t)),i={items:Array.isArray(o.items)?o.items.map(a=>({id:a.id||0,name:a.name||"",price:a.price||0,quantity:a.quantity||1})):[],discountType:o.discountType||"fixed",discountValue:Number(o.discountValue)||0,taxRate:Number(o.taxRate)||0,total:Number(o.total)||0,subtotal:Number(o.subtotal)||0,notes:o.notes||"",type:o.type||null,holdInvoiceId:o.holdInvoiceId||null,holdOrderDescription:o.holdOrderDescription||null,selectedTables:Array.isArray(o.selectedTables)?o.selectedTables:[],timestamp:Date.now()};localStorage.setItem(E,JSON.stringify(i)),this.channel.postMessage({type:"CART_UPDATED",payload:i}),r.debug("Cart state saved and broadcasted:",i)}catch(o){r.error("Error saving cart state:",{error:o instanceof Error?o.message:o,cartState:JSON.stringify(t,null,2),stack:o instanceof Error?o.stack:void 0})}}loadCartState(){try{const t=localStorage.getItem(E);if(t){const o=JSON.parse(t);return o.items=Array.isArray(o.items)?o.items:[],r.debug("Loaded cart state:",o),o}}catch(t){r.error("Error loading cart state:",t)}return{items:[],discountType:null,discountValue:0,taxRate:0,total:0,subtotal:0}}subscribeToUpdates(t){const o=n=>{n.data.type==="CART_UPDATED"&&(r.debug("Received cart update:",n.data.payload),t(n.data.payload))};return this.channel.addEventListener("message",o),()=>{this.channel.removeEventListener("message",o),this.channel.close()}}}const _=new k,tt=U("cart",{state:L,getters:$,actions:{initializeFromStorage(){const e=_.loadCartState();e&&(this.$patch(e),r.info("Cart initialized from storage:",e))},addItem(e,t=1){try{if(!e||!e.id){r.warn("Invalid product data:",e);return}C.addItem(this,e,t);const o={...this.$state,items:this.items.map(n=>({id:n.id,name:n.name,price:n.price,quantity:n.quantity}))};_.saveCartState(o)}catch(o){r.error("Error in addItem:",{error:o,product:e,quantity:t,currentState:this.$state})}},updateItemQuantity(e,t,o=null){C.updateItemQuantity(this,{itemId:e,quantity:t,index:o}),_.saveCartState(this.$state)},removeItem(e,t=null){C.removeItem(this,{itemId:e,index:t}),_.saveCartState(this.$state)},splitItem(e,t){C.splitItem(this,e,t),_.saveCartState(this.$state)},setDiscount(e,t){w.setDiscount(this,{type:e,value:t}),_.saveCartState(this.$state)},setNotes(e){w.setNotes(this,e),_.saveCartState(this.$state)},setType(e){w.setType(this,e),_.saveCartState(this.$state)},setSelectedTables(e){w.setSelectedTables(this,e),_.saveCartState(this.$state)},setHoldInvoiceId(e){w.setHoldInvoiceId(this,e),_.saveCartState(this.$state)},setHoldOrderDescription(e){w.setHoldOrderDescription(this,e),_.saveCartState(this.$state)},clearCart(){try{w.clearCart(this);const e={items:this.items||[],discountType:this.discountType,discountValue:this.discountValue||0,taxRate:this.taxRate||0,total:this.total||0,subtotal:this.subtotal||0};_.saveCartState(e)}catch(e){r.error("Error in clearCart:",e)}},loadInvoice(e){C.loadInvoice(this,e),_.saveCartState(this.$state)},async updateInvoice(){return C.updateInvoice(this)},prepareInvoiceData(e,t,o){return O.prepareInvoiceData(this,this,{storeId:e,cashRegisterId:t,referenceNumber:o})},prepareHoldInvoiceData(e,t,o){return O.prepareHoldInvoiceData(this,this,{storeId:e,cashRegisterId:t,referenceNumber:o})}}});export{P as O,s as P,V as a,B as b,_ as c,z as d,X as e,R as o,Z as p,tt as u};
//# sourceMappingURL=cart-store-98b500d5.js.map
