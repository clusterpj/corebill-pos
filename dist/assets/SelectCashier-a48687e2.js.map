{"version":3,"file":"SelectCashier-a48687e2.js","sources":["../../src/views/auth/SelectCashier.vue"],"sourcesContent":["<!-- src/views/auth/SelectCashier.vue -->\r\n<template>\r\n  <div class=\"select-cashier-page\">\r\n    <v-container fluid class=\"fill-height pa-0\">\r\n      <v-row align=\"center\" justify=\"center\" no-gutters class=\"fill-height\">\r\n        <v-col cols=\"12\" sm=\"8\" md=\"6\" lg=\"4\" xl=\"3\" class=\"pa-4\">\r\n          <v-card class=\"select-cashier-card\" elevation=\"2\" rounded=\"lg\">\r\n            <!-- Header -->\r\n            <div class=\"select-cashier-header\">\r\n              <div class=\"d-flex flex-column align-center pt-8 pb-6\">\r\n                <v-avatar\r\n                  color=\"primary\"\r\n                  size=\"64\"\r\n                  class=\"mb-6\"\r\n                >\r\n                  <v-icon\r\n                    icon=\"mdi-cash-register\"\r\n                    size=\"32\"\r\n                    color=\"white\"\r\n                  />\r\n                </v-avatar>\r\n                <h1 class=\"text-h4 font-weight-bold mb-1 text-primary\">\r\n                  Welcome Back\r\n                </h1>\r\n                <p class=\"text-subtitle-1 text-primary\">\r\n                  Select your workspace to continue\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <v-card-text class=\"px-6 pt-8 pb-4\">\r\n              <!-- Store Selection -->\r\n              <v-select\r\n                v-model=\"selectedStore\"\r\n                :items=\"stores\"\r\n                item-title=\"name\"\r\n                item-value=\"id\"\r\n                label=\"Select Store\"\r\n                :loading=\"loading\"\r\n                required\r\n                variant=\"outlined\"\r\n                bg-color=\"surface\"\r\n                class=\"mb-4\"\r\n                :disabled=\"loading\"\r\n                :error-messages=\"storeError\"\r\n                @update:model-value=\"handleStoreChange\"\r\n                prepend-inner-icon=\"mdi-store\"\r\n                :menu-props=\"{ maxHeight: '300' }\"\r\n              >\r\n                <template v-slot:item=\"{ props, item }\">\r\n                  <v-list-item v-bind=\"props\">\r\n                    <template v-slot:prepend>\r\n                      <v-icon icon=\"mdi-store\" color=\"primary\" class=\"mr-2\" />\r\n                    </template>\r\n                    <v-list-item-title>{{ item.raw.name }}</v-list-item-title>\r\n                    <v-list-item-subtitle v-if=\"item.raw.description\">\r\n                      {{ item.raw.description }}\r\n                    </v-list-item-subtitle>\r\n                  </v-list-item>\r\n                </template>\r\n                <template v-slot:append>\r\n                  <v-fade-transition leave-absolute>\r\n                    <v-icon v-if=\"selectedStore\" icon=\"mdi-check-circle\" color=\"success\" />\r\n                  </v-fade-transition>\r\n                </template>\r\n              </v-select>\r\n\r\n              <!-- Cashier Selection -->\r\n              <v-select\r\n                v-model=\"selectedCashier\"\r\n                :items=\"filteredCashiers\"\r\n                item-title=\"name\"\r\n                item-value=\"id\"\r\n                label=\"Select Register\"\r\n                :loading=\"loading\"\r\n                required\r\n                variant=\"outlined\"\r\n                bg-color=\"surface\"\r\n                :disabled=\"loading || !selectedStore\"\r\n                :error-messages=\"cashierError\"\r\n                prepend-inner-icon=\"mdi-register\"\r\n                :menu-props=\"{ maxHeight: '300' }\"\r\n              >\r\n                <template v-slot:item=\"{ props, item }\">\r\n                  <v-list-item v-bind=\"props\">\r\n                    <template v-slot:prepend>\r\n                      <v-icon icon=\"mdi-register\" color=\"primary\" class=\"mr-2\" />\r\n                    </template>\r\n                    <v-list-item-title>{{ item.raw.name }}</v-list-item-title>\r\n                    <v-list-item-subtitle>\r\n                      {{ item.raw.store_name }}\r\n                    </v-list-item-subtitle>\r\n                  </v-list-item>\r\n                </template>\r\n                <template v-slot:append>\r\n                  <v-fade-transition leave-absolute>\r\n                    <v-icon v-if=\"selectedCashier\" icon=\"mdi-check-circle\" color=\"success\" />\r\n                  </v-fade-transition>\r\n                </template>\r\n              </v-select>\r\n\r\n              <v-expand-transition>\r\n                <v-alert\r\n                  v-if=\"error\"\r\n                  type=\"error\"\r\n                  variant=\"tonal\"\r\n                  class=\"mt-4\"\r\n                  closable\r\n                  density=\"compact\"\r\n                  @click:close=\"error = null\"\r\n                >\r\n                  <template v-slot:prepend>\r\n                    <v-icon icon=\"mdi-alert-circle\" />\r\n                  </template>\r\n                  {{ error }}\r\n                </v-alert>\r\n              </v-expand-transition>\r\n            </v-card-text>\r\n\r\n            <v-divider />\r\n\r\n            <v-card-actions class=\"pa-4\">\r\n              <v-btn\r\n                color=\"error\"\r\n                variant=\"text\"\r\n                :disabled=\"loading\"\r\n                @click=\"handleLogout\"\r\n                density=\"comfortable\"\r\n              >\r\n                Sign Out\r\n              </v-btn>\r\n              <v-spacer />\r\n              <v-btn\r\n                color=\"primary\"\r\n                :loading=\"loading\"\r\n                :disabled=\"!isValid\"\r\n                @click=\"handleSelection\"\r\n                min-width=\"120\"\r\n              >\r\n                Continue\r\n              </v-btn>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport { useCompanyStore } from '@/stores/company'\r\nimport { logger } from '@/utils/logger'\r\n\r\nconst router = useRouter()\r\nconst authStore = useAuthStore()\r\nconst companyStore = useCompanyStore()\r\n\r\nconst loading = ref(false)\r\nconst error = ref(null)\r\nconst wasValidated = ref(false)\r\nconst storeError = ref('')\r\nconst cashierError = ref('')\r\nconst selectedStore = ref(null)\r\nconst selectedCashier = ref(null)\r\n\r\n// Computed properties\r\nconst stores = computed(() => {\r\n  if (!Array.isArray(authStore.availableCashiers)) return []\r\n  \r\n  const uniqueStores = new Map()\r\n  authStore.availableCashiers.forEach(cashier => {\r\n    if (!uniqueStores.has(cashier.store_id)) {\r\n      uniqueStores.set(cashier.store_id, {\r\n        id: cashier.store_id,\r\n        name: cashier.store_name || 'Unknown Store',\r\n        description: cashier.description || ''\r\n      })\r\n    }\r\n  })\r\n  return Array.from(uniqueStores.values())\r\n})\r\n\r\n// Filter cashiers by selected store\r\nconst filteredCashiers = computed(() => {\r\n  if (!selectedStore.value || !Array.isArray(authStore.availableCashiers)) return []\r\n  return authStore.availableCashiers.filter(cashier => \r\n    cashier.store_id === selectedStore.value\r\n  )\r\n})\r\n\r\nconst isValid = computed(() => {\r\n  return selectedStore.value && selectedCashier.value\r\n})\r\n\r\nfunction handleStoreChange(storeId) {\r\n  selectedStore.value = storeId\r\n  selectedCashier.value = null // Reset cashier when store changes\r\n  storeError.value = ''\r\n  cashierError.value = ''\r\n  error.value = null\r\n  wasValidated.value = false\r\n}\r\n\r\nasync function handleSelection() {\r\n  wasValidated.value = true\r\n  if (!isValid.value) {\r\n    if (!selectedStore.value) storeError.value = 'Please select a store'\r\n    if (!selectedCashier.value) cashierError.value = 'Please select a cash register'\r\n    return\r\n  }\r\n  \r\n  loading.value = true\r\n  try {\r\n    const cashier = filteredCashiers.value.find(c => c.id === selectedCashier.value)\r\n    if (!cashier) {\r\n      throw new Error('Selected cash register not found')\r\n    }\r\n    \r\n    // Initialize company store with selected cashier\r\n    await companyStore.initializeFromCashier(cashier)\r\n    \r\n    // Navigate to POS\r\n    router.push('/pos')\r\n  } catch (err) {\r\n    error.value = 'Failed to select cash register. Please try again.'\r\n    logger.error('Failed to select cashier:', err)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nfunction handleLogout() {\r\n  authStore.logout()\r\n}\r\n\r\n// Load cashiers on mount\r\nonMounted(async () => {\r\n  loading.value = true\r\n  try {\r\n    await authStore.loadAvailableCashiers()\r\n    if (!authStore.hasCashiers) {\r\n      error.value = 'No cash registers are available. Please contact your administrator.'\r\n    }\r\n  } catch (err) {\r\n    error.value = 'Failed to load cash registers. Please try again.'\r\n    logger.error('Failed to load cashiers:', err)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.select-cashier-page {\r\n  min-height: 100vh;\r\n  background: rgb(var(--v-theme-surface));\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.select-cashier-card {\r\n  width: 100%;\r\n  max-width: 100%;\r\n  background: white;\r\n}\r\n\r\n.select-cashier-header {\r\n  background: rgb(var(--v-theme-primary-lighten-5, 237, 245, 255));\r\n}\r\n\r\n:deep(.v-field) {\r\n  border-radius: 4px;\r\n}\r\n\r\n:deep(.v-list-item) {\r\n  min-height: 48px;\r\n}\r\n\r\n:deep(.v-list-item:not(:last-child)) {\r\n  border-bottom: 1px solid rgba(var(--v-border-color), 0.08);\r\n}\r\n\r\n:deep(.v-btn) {\r\n  text-transform: none;\r\n  font-weight: 500;\r\n}\r\n</style>\r\n"],"names":["router","useRouter","authStore","useAuthStore","companyStore","useCompanyStore","loading","ref","error","wasValidated","storeError","cashierError","selectedStore","selectedCashier","stores","computed","uniqueStores","cashier","filteredCashiers","isValid","handleStoreChange","storeId","handleSelection","c","err","logger","handleLogout","onMounted"],"mappings":"ufA4JA,MAAMA,EAASC,EAAW,EACpBC,EAAYC,EAAc,EAC1BC,EAAeC,EAAiB,EAEhCC,EAAUC,EAAI,EAAK,EACnBC,EAAQD,EAAI,IAAI,EAChBE,EAAeF,EAAI,EAAK,EACxBG,EAAaH,EAAI,EAAE,EACnBI,EAAeJ,EAAI,EAAE,EACrBK,EAAgBL,EAAI,IAAI,EACxBM,EAAkBN,EAAI,IAAI,EAG1BO,EAASC,EAAS,IAAM,CAC5B,GAAI,CAAC,MAAM,QAAQb,EAAU,iBAAiB,EAAG,MAAO,CAAE,EAE1D,MAAMc,EAAe,IAAI,IACzB,OAAAd,EAAU,kBAAkB,QAAQe,GAAW,CACxCD,EAAa,IAAIC,EAAQ,QAAQ,GACpCD,EAAa,IAAIC,EAAQ,SAAU,CACjC,GAAIA,EAAQ,SACZ,KAAMA,EAAQ,YAAc,gBAC5B,YAAaA,EAAQ,aAAe,EAC5C,CAAO,CAEP,CAAG,EACM,MAAM,KAAKD,EAAa,OAAM,CAAE,CACzC,CAAC,EAGKE,EAAmBH,EAAS,IAC5B,CAACH,EAAc,OAAS,CAAC,MAAM,QAAQV,EAAU,iBAAiB,EAAU,CAAE,EAC3EA,EAAU,kBAAkB,OAAOe,GACxCA,EAAQ,WAAaL,EAAc,KACpC,CACF,EAEKO,EAAUJ,EAAS,IAChBH,EAAc,OAASC,EAAgB,KAC/C,EAED,SAASO,EAAkBC,EAAS,CAClCT,EAAc,MAAQS,EACtBR,EAAgB,MAAQ,KACxBH,EAAW,MAAQ,GACnBC,EAAa,MAAQ,GACrBH,EAAM,MAAQ,KACdC,EAAa,MAAQ,EACvB,CAEA,eAAea,GAAkB,CAE/B,GADAb,EAAa,MAAQ,GACjB,CAACU,EAAQ,MAAO,CACbP,EAAc,QAAOF,EAAW,MAAQ,yBACxCG,EAAgB,QAAOF,EAAa,MAAQ,iCACjD,MACD,CAEDL,EAAQ,MAAQ,GAChB,GAAI,CACF,MAAMW,EAAUC,EAAiB,MAAM,KAAKK,GAAKA,EAAE,KAAOV,EAAgB,KAAK,EAC/E,GAAI,CAACI,EACH,MAAM,IAAI,MAAM,kCAAkC,EAIpD,MAAMb,EAAa,sBAAsBa,CAAO,EAGhDjB,EAAO,KAAK,MAAM,CACnB,OAAQwB,EAAK,CACZhB,EAAM,MAAQ,oDACdiB,EAAO,MAAM,4BAA6BD,CAAG,CACjD,QAAY,CACRlB,EAAQ,MAAQ,EACjB,CACH,CAEA,SAASoB,GAAe,CACtBxB,EAAU,OAAQ,CACpB,CAGA,OAAAyB,GAAU,SAAY,CACpBrB,EAAQ,MAAQ,GAChB,GAAI,CACF,MAAMJ,EAAU,sBAAuB,EAClCA,EAAU,cACbM,EAAM,MAAQ,sEAEjB,OAAQgB,EAAK,CACZhB,EAAM,MAAQ,mDACdiB,EAAO,MAAM,2BAA4BD,CAAG,CAChD,QAAY,CACRlB,EAAQ,MAAQ,EACjB,CACH,CAAC"}