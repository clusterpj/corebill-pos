{"version":3,"file":"PosView-c6e4f4ec.js","sources":["../../src/utils/windowManager.js","../../src/views/pos/components/cart/CartItemList.vue","../../src/views/pos/composables/useCartDiscount.js","../../src/views/pos/components/cart/CartSummary.vue","../../src/views/pos/components/cart/EditItemDialog.vue","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/services/api/pos-operations/utils.js","../../src/services/api/pos-operations/config.js","../../src/services/api/pos-operations/invoice.js","../../src/services/api/pos-operations/payment.js","../../src/services/api/pos-operations/order.js","../../src/services/api/pos-operations/index.js","../../src/views/pos/composables/useOrderType.js","../../src/views/pos/components/cart/OrderNotes.vue","../../src/views/pos/components/cart/composables/useCart.js","../../src/views/pos/components/PosCart.vue","../../src/views/pos/components/products/ProductSearch.vue","../../src/views/pos/components/products/CategoryTabs.vue","../../src/views/pos/components/products/ProductGrid.vue","../../src/views/pos/components/products/GridSettings.vue","../../src/views/pos/components/PosProducts.vue","../../src/views/pos/composables/usePayment.js","../../src/views/pos/composables/useTableManagement.js","../../src/views/pos/components/held-orders/utils/formatters.js","../../src/views/pos/components/held-orders/composables/useHeldOrders.js","../../src/views/pos/components/held-orders/composables/useInvoices.js","../../src/views/pos/components/held-orders/components/HeldOrdersTable.vue","../../src/views/pos/components/held-orders/utils/validators.js","../../src/views/pos/components/held-orders/utils/invoiceConverter.js","../../src/components/common/PdfViewerDialog.vue","../../src/views/pos/components/dialogs/PaymentDialog.vue","../../src/views/pos/components/dialogs/PaymentInvoiceDialog.vue","../../src/views/pos/components/held-orders/components/OrderInvoicesTable.vue","../../src/views/pos/components/held-orders/HeldOrdersModal.vue","../../src/views/pos/components/order-types/DineInModal.vue","../../src/views/pos/components/order-types/ToGoModal.vue","../../src/services/api/states.ts","../../src/components/common/StateDropdown.vue","../../node_modules/lodash/isObject.js","../../node_modules/lodash/_freeGlobal.js","../../node_modules/lodash/_root.js","../../node_modules/lodash/now.js","../../node_modules/lodash/_trimmedEndIndex.js","../../node_modules/lodash/_baseTrim.js","../../node_modules/lodash/_Symbol.js","../../node_modules/lodash/_getRawTag.js","../../node_modules/lodash/_objectToString.js","../../node_modules/lodash/_baseGetTag.js","../../node_modules/lodash/isObjectLike.js","../../node_modules/lodash/isSymbol.js","../../node_modules/lodash/toNumber.js","../../node_modules/lodash/debounce.js","../../src/views/pos/composables/useCustomerSearch.js","../../src/views/pos/components/customer/CreateCustomerDialog.vue","../../src/views/pos/components/dialogs/DeliveryPaymentDialog.vue","../../src/services/section-order.service.ts","../../src/stores/section-orders.store.ts","../../src/stores/kitchen.js","../../src/views/pos/components/order-types/DeliveryModal.vue","../../src/views/pos/components/order-types/PickupModal.vue","../../src/views/pos/components/dialogs/RetailPaymentDialog.vue","../../src/views/pos/components/PosFooter.vue","../../src/views/pos/components/dialogs/ReferenceDialog.vue","../../src/views/pos/composables/useOrderManagement.js","../../src/views/pos/composables/useErrorHandling.js","../../src/views/pos/PosView.vue"],"sourcesContent":["export class WindowManager {\r\n  static async openCustomerDisplay() {\r\n    try {\r\n      let left = 0;\r\n      let top = 0;\r\n      let width = 1024;\r\n      let height = 768;\r\n\r\n      // Try to get screen info if API is available\r\n      if (window.screen && typeof window.screen.getScreens === 'function') {\r\n        const screens = await window.screen.getScreens();\r\n        const secondaryScreen = screens[1];\r\n        \r\n        if (secondaryScreen) {\r\n          left = secondaryScreen.availLeft || secondaryScreen.left || 0;\r\n          top = secondaryScreen.availTop || secondaryScreen.top || 0;\r\n          width = secondaryScreen.availWidth || secondaryScreen.width || 1024;\r\n          height = secondaryScreen.availHeight || secondaryScreen.height || 768;\r\n        }\r\n      } else if (window.screen) {\r\n        // Fallback to basic screen properties\r\n        width = window.screen.width;\r\n        height = window.screen.height;\r\n        // Position on the right side by default\r\n        left = width;\r\n      }\r\n\r\n      // Open customer display window\r\n      const customerWindow = window.open(\r\n        '/customer-display',\r\n        'customerDisplay',\r\n        `width=${width},height=${height},left=${left},top=${top},menubar=no,toolbar=no,location=no,status=no,fullscreen=yes`\r\n      );\r\n\r\n      if (customerWindow) {\r\n        customerWindow.moveTo(left, top);\r\n        customerWindow.resizeTo(width, height);\r\n      }\r\n\r\n      return customerWindow;\r\n    } catch (error) {\r\n      console.error('Error opening customer display:', error);\r\n      // Try basic window open as fallback\r\n      return window.open(\r\n        '/customer-display',\r\n        'customerDisplay',\r\n        'menubar=no,toolbar=no,location=no,status=no,fullscreen=yes'\r\n      );\r\n    }\r\n  }\r\n}\r\n","<!-- src/views/pos/components/cart/CartItemList.vue -->\r\n<template>\r\n  <div class=\"cart-items\" :class=\"$attrs.class\">\r\n    <v-list class=\"cart-list pa-0\" density=\"compact\">\r\n      <v-list-item\r\n        v-for=\"(item, index) in items\"\r\n        :key=\"index\"\r\n        class=\"cart-item py-1\"\r\n        :class=\"{ 'border-b': index !== items.length - 1 }\"\r\n      >\r\n        <div class=\"d-flex align-center w-100 gap-2\">\r\n          <!-- Quantity Badge -->\r\n          <div class=\"quantity-badge\">\r\n            {{ item.quantity }}\r\n          </div>\r\n\r\n          <!-- Item Info -->\r\n          <div class=\"item-info flex-grow-1 min-width-0\">\r\n            <div class=\"item-name text-body-2 font-weight-medium text-truncate\">\r\n              {{ item.name }}\r\n            </div>\r\n            <div class=\"item-price text-caption text-grey-darken-1\">\r\n              {{ formatPrice(item.price) }} each\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Total and Actions -->\r\n          <div class=\"d-flex align-center gap-1\">\r\n            <span class=\"item-total text-body-2 font-weight-medium\">\r\n              {{ formatPrice(item.price * item.quantity) }}\r\n            </span>\r\n            \r\n            <div class=\"action-buttons d-flex\">\r\n              <v-btn\r\n                icon=\"mdi-minus\"\r\n                size=\"small\"\r\n                variant=\"tonal\"\r\n                density=\"comfortable\" \r\n                color=\"primary\"\r\n                :disabled=\"item.quantity <= 1\"\r\n                @click=\"handleQuantityUpdate(item.id, Math.max(0, item.quantity - 1), index)\"\r\n                class=\"touch-btn\"\r\n              />\r\n              <v-btn\r\n                icon=\"mdi-plus\"\r\n                size=\"small\"\r\n                variant=\"tonal\"\r\n                density=\"comfortable\"\r\n                color=\"primary\"\r\n                @click=\"handleQuantityUpdate(item.id, item.quantity + 1, index)\"\r\n                class=\"touch-btn\"\r\n              />\r\n              <v-btn\r\n                icon=\"mdi-delete\"\r\n                size=\"small\"\r\n                variant=\"tonal\"\r\n                density=\"comfortable\"\r\n                color=\"error\"\r\n                @click=\"handleRemoveItem(item.id, index)\"\r\n                class=\"touch-btn\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </v-list-item>\r\n    </v-list>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, watch } from 'vue'\r\nimport { logger } from '@/utils/logger'\r\nimport { PriceUtils } from '@/utils/price'\r\n\r\nconst props = defineProps({\r\n  items: {\r\n    type: Array,\r\n    required: true\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['edit', 'remove', 'updateQuantity'])\r\n\r\n// Log initial cart state\r\nconsole.log('CartItemList - Initial cart state:', {\r\n  itemCount: props.items.length,\r\n  items: props.items.map(item => ({\r\n    id: item.id,\r\n    name: item.name,\r\n    price: item.price,\r\n    quantity: item.quantity,\r\n    total: item.price * item.quantity\r\n  }))\r\n})\r\n\r\n// Watch for cart changes\r\nwatch(() => props.items, (newItems, oldItems) => {\r\n  console.log('CartItemList - Cart items changed:', {\r\n    oldCount: oldItems?.length || 0,\r\n    newCount: newItems.length,\r\n    items: newItems.map(item => ({\r\n      id: item.id,\r\n      name: item.name,\r\n      price: item.price,\r\n      formatted_price: PriceUtils.format(item.price),\r\n      quantity: item.quantity,\r\n      total: item.price * item.quantity,\r\n      formatted_total: PriceUtils.format(item.price * item.quantity)\r\n    }))\r\n  })\r\n}, { deep: true })\r\n\r\n// Format price for display\r\nconst formatPrice = (cents) => {\r\n  console.log('CartItemList - Formatting price:', { \r\n    inputCents: cents,\r\n    isDollarAmount: PriceUtils.isInDollars(cents)\r\n  })\r\n\r\n  return PriceUtils.format(cents)\r\n}\r\n\r\n// Computed total for all items\r\nconst cartTotal = computed(() => {\r\n  const total = props.items.reduce((sum, item) => {\r\n    const itemTotal = item.price * item.quantity\r\n    console.log('CartItemList - Calculating item total:', {\r\n      itemId: item.id,\r\n      price: item.price,\r\n      quantity: item.quantity,\r\n      itemTotal\r\n    })\r\n    return sum + itemTotal\r\n  }, 0)\r\n  \r\n  console.log('CartItemList - Cart total calculated:', {\r\n    itemCount: props.items.length,\r\n    total,\r\n    formattedTotal: PriceUtils.format(total)\r\n  })\r\n  return total\r\n})\r\n\r\n// Handlers with logging\r\nconst handleQuantityUpdate = (itemId, newQuantity, index) => {\r\n  console.log('CartItemList - Updating quantity:', {\r\n    itemId,\r\n    index,\r\n    oldQuantity: props.items[index].quantity,\r\n    newQuantity,\r\n    price: props.items[index].price,\r\n    oldTotal: props.items[index].price * props.items[index].quantity,\r\n    newTotal: props.items[index].price * newQuantity\r\n  })\r\n  emit('updateQuantity', itemId, newQuantity, index)\r\n}\r\n\r\nconst handleRemoveItem = (itemId, index) => {\r\n  console.log('CartItemList - Removing item:', {\r\n    itemId,\r\n    index,\r\n    item: props.items[index]\r\n  })\r\n  emit('remove', itemId, index)\r\n}\r\n\r\nconst handleEditItem = (itemId, index) => {\r\n  console.log('CartItemList - Editing item:', {\r\n    itemId,\r\n    index,\r\n    item: props.items[index]\r\n  })\r\n  emit('edit', itemId, index)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.cart-items {\r\n  flex: 1;\r\n  min-height: 0;\r\n  overflow-y: auto;\r\n  position: relative;\r\n}\r\n\r\n.cart-list {\r\n  background: transparent;\r\n}\r\n\r\n.cart-item {\r\n  padding: 4px 4px;\r\n  transition: all 0.2s ease;\r\n  border-radius: 4px;\r\n}\r\n\r\n.cart-item:hover {\r\n  background-color: rgb(250, 250, 250);\r\n}\r\n\r\n.border-b {\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\r\n}\r\n\r\n.quantity-badge {\r\n  background: rgba(var(--v-theme-primary), 0.1);\r\n  color: rgb(var(--v-theme-primary));\r\n  min-width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.item-info {\r\n  line-height: 1.2;\r\n}\r\n\r\n.item-name {\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.gap-1 {\r\n  gap: 4px;\r\n}\r\n\r\n.gap-2 {\r\n  gap: 8px;\r\n}\r\n\r\n.min-width-0 {\r\n  min-width: 0;\r\n}\r\n\r\n.text-truncate {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n/* Touch Optimizations */\r\n.touch-btn {\r\n  margin: 0 2px;\r\n  min-width: 36px !important;\r\n  width: 36px;\r\n  height: 36px !important;\r\n}\r\n\r\n.touch-btn:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n/* Mobile Optimizations */\r\n@media (max-width: 600px) {\r\n  .cart-item {\r\n    padding: 4px;\r\n  }\r\n  \r\n  .quantity-badge {\r\n    min-width: 28px;\r\n    height: 28px;\r\n    font-size: 0.875rem;\r\n  }\r\n  \r\n  .action-buttons {\r\n    gap: 4px;\r\n  }\r\n}\r\n</style>\r\n","// src/views/pos/composables/useCartDiscount.js\r\nimport { ref, watch } from 'vue'\r\nimport { useCartStore } from '../../../stores/cart-store'\r\n\r\nexport function useCartDiscount() {\r\n  const cartStore = useCartStore()\r\n  const discountType = ref(cartStore.$state.discountType)\r\n  const discountValue = ref(cartStore.$state.discountValue)\r\n\r\n  // Watch for store changes\r\n  watch(() => cartStore.$state.discountType, (newType) => {\r\n    discountType.value = newType\r\n  })\r\n\r\n  watch(() => cartStore.$state.discountValue, (newValue) => {\r\n    discountValue.value = newValue\r\n  })\r\n\r\n  const updateDiscount = () => {\r\n    // Convert $ to 'fixed' for API compatibility\r\n    const type = discountType.value === '$' ? 'fixed' : discountType.value\r\n    \r\n    // If type is fixed (dollar amount), use raw value\r\n    // If type is %, use percentage value directly\r\n    const value = Number(discountValue.value) || 0\r\n    \r\n    cartStore.setDiscount(type, value)\r\n  }\r\n\r\n  return {\r\n    discountType,\r\n    discountValue,\r\n    updateDiscount\r\n  }\r\n}\r\n","<!-- src/views/pos/components/cart/CartSummary.vue -->\r\n<template>\r\n  <div class=\"order-summary\">\r\n    <!-- Subtotal Row -->\r\n    <div class=\"summary-row\">\r\n      <span class=\"label\">Subtotal</span>\r\n      <span class=\"amount\">${{ formatPrice(subtotal) }}</span>\r\n    </div>\r\n    \r\n    <!-- Discount Controls -->\r\n    <div class=\"discount-section\">\r\n      <div class=\"discount-header\">\r\n        <span class=\"label\">Discount</span>\r\n        <v-chip\r\n          v-if=\"discountValue > 0\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          variant=\"flat\"\r\n          class=\"discount-badge\"\r\n        >\r\n          Applied\r\n        </v-chip>\r\n      </div>\r\n      \r\n      <div class=\"discount-controls\">\r\n        <v-select\r\n          v-model=\"discountType\"\r\n          :items=\"[\r\n            { title: 'Percentage', value: '%' },\r\n            { title: 'Fixed', value: 'fixed' }\r\n          ]\"\r\n          item-title=\"title\"\r\n          item-value=\"value\"\r\n          density=\"compact\"\r\n          hide-details\r\n          variant=\"outlined\"\r\n          class=\"discount-type-select\"\r\n          @update:model-value=\"updateDiscount\"\r\n        >\r\n          <template #selection=\"{ item }\">\r\n            {{ item.value === '%' ? '%' : '$' }}\r\n          </template>\r\n        </v-select>\r\n        \r\n        <v-text-field\r\n          v-model=\"discountValue\"\r\n          :prefix=\"discountType === 'fixed' ? '$' : ''\"\r\n          :suffix=\"discountType === '%' ? '%' : ''\"\r\n          density=\"compact\"\r\n          hide-details\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          class=\"discount-value-input\"\r\n          @update:model-value=\"updateDiscount\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Discount Amount Row -->\r\n    <div v-if=\"discountAmount > 0\" class=\"summary-row discount-amount\">\r\n      <span class=\"label\">Discount Applied</span>\r\n      <span class=\"amount success-text\">-${{ formatPrice(discountAmount) }}</span>\r\n    </div>\r\n\r\n    <!-- Tax Row -->\r\n    <div class=\"summary-row\">\r\n      <span class=\"label\">Tax ({{ (taxRate * 100).toFixed(1) }}%)</span>\r\n      <span class=\"amount\">${{ formatPrice(taxAmount) }}</span>\r\n    </div>\r\n\r\n    <v-divider class=\"my-4\" />\r\n\r\n    <!-- Total Row -->\r\n    <div class=\"summary-row total\">\r\n      <span class=\"label\">Total</span>\r\n      <span class=\"amount\">${{ formatPrice(total) }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useCartDiscount } from '../../composables/useCartDiscount'\r\n\r\nconst props = defineProps({\r\n  subtotal: Number,\r\n  discountAmount: Number,\r\n  taxRate: Number,\r\n  taxAmount: Number,\r\n  total: Number\r\n})\r\n\r\nconst { discountType, discountValue, updateDiscount } = useCartDiscount()\r\n\r\n// Format price for display, converting from cents to dollars if needed\r\nconst formatPrice = (amount) => {\r\n  // Convert the amount to a fixed decimal string\r\n  return Number(amount / 100).toFixed(2)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.order-summary {\r\n  padding: 4px;\r\n}\r\n\r\n.summary-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.summary-row .label {\r\n  color: rgba(0, 0, 0, 0.7);\r\n  font-weight: 500;\r\n}\r\n\r\n.summary-row .amount {\r\n  font-weight: 600;\r\n}\r\n\r\n.summary-row.total {\r\n  font-size: 1.25rem;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.summary-row.total .label {\r\n  color: rgba(0, 0, 0, 0.87);\r\n  font-weight: 600;\r\n}\r\n\r\n.summary-row.total .amount {\r\n  font-weight: 700;\r\n  color: var(--v-primary-base);\r\n}\r\n\r\n.discount-section {\r\n  background-color: rgb(250, 250, 250);\r\n  border-radius: 8px;\r\n  padding: 8px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.discount-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.discount-badge {\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.discount-controls {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.discount-type-select {\r\n  width: 100px;\r\n}\r\n\r\n.discount-value-input {\r\n  width: 120px;\r\n}\r\n\r\n.discount-type-select :deep(.v-field__input),\r\n.discount-value-input :deep(.v-field__input) {\r\n  padding: 8px 12px;\r\n}\r\n\r\n.success-text {\r\n  color: rgb(var(--v-theme-success));\r\n}\r\n\r\n.discount-amount {\r\n  background-color: rgb(var(--v-theme-success), 0.1);\r\n  padding: 8px 12px;\r\n  border-radius: 6px;\r\n  margin: 12px 0;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .discount-controls {\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .discount-type-select,\r\n  .discount-value-input {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <v-dialog v-model=\"showDialog\" max-width=\"500\">\r\n    <v-card>\r\n      <v-card-title class=\"d-flex justify-space-between align-center\">\r\n        {{ item?.name }}\r\n        <v-chip>Qty: {{ item?.quantity || 0 }}</v-chip>\r\n      </v-card-title>\r\n\r\n      <v-card-text>\r\n        <!-- Split Item Option -->\r\n        <div class=\"mb-4\">\r\n          <div class=\"text-subtitle-2 mb-2\">Split Item</div>\r\n          <div class=\"d-flex align-center gap-2\">\r\n            <v-text-field\r\n              v-model=\"splitQuantity\"\r\n              type=\"number\"\r\n              label=\"Quantity to split\"\r\n              :min=\"1\"\r\n              :max=\"item?.quantity - 1\"\r\n              density=\"compact\"\r\n              hide-details\r\n              style=\"max-width: 120px\"\r\n            />\r\n            <v-btn\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              :disabled=\"!canSplit\"\r\n              @click=\"handleSplit\"\r\n            >\r\n              Split\r\n            </v-btn>\r\n          </div>\r\n        </div>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <v-spacer />\r\n        <v-btn\r\n          color=\"grey\"\r\n          variant=\"text\"\r\n          @click=\"close\"\r\n        >\r\n          Cancel\r\n        </v-btn>\r\n        <v-btn\r\n          color=\"primary\"\r\n          @click=\"close\"\r\n        >\r\n          Save\r\n        </v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport { useCartStore } from '../../../../stores/cart-store'\r\n\r\nconst props = defineProps({\r\n  modelValue: {\r\n    type: Boolean,\r\n    required: true\r\n  },\r\n  item: {\r\n    type: Object,\r\n    default: null\r\n  },\r\n  index: {\r\n    type: Number,\r\n    default: null\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue'])\r\n\r\nconst cartStore = useCartStore()\r\nconst splitQuantity = ref(1)\r\n\r\nconst showDialog = computed({\r\n  get: () => props.modelValue,\r\n  set: (value) => emit('update:modelValue', value)\r\n})\r\n\r\nconst canSplit = computed(() => {\r\n  return props.item &&\r\n         splitQuantity.value > 0 &&\r\n         splitQuantity.value < props.item.quantity\r\n})\r\n\r\nconst handleSplit = () => {\r\n  if (canSplit.value) {\r\n    cartStore.splitItem(\r\n      props.index,\r\n      Number(splitQuantity.value)\r\n    )\r\n    close()\r\n  }\r\n}\r\n\r\nconst close = () => {\r\n  showDialog.value = false\r\n  splitQuantity.value = 1\r\n}\r\n</script>\r\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3N0cmluZ2lmeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFFBQVEsTUFBTSxlQUFlLENBQUM7QUFNckMsTUFBTSxTQUFTLEdBQWEsRUFBRSxDQUFDO0FBRS9CLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUM3QixTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwRCxDQUFDO0FBRUQsTUFBTSxVQUFVLGVBQWUsQ0FBQyxHQUFlLEVBQUUsTUFBTSxHQUFHLENBQUM7SUFNekQsT0FBTyxDQUNMLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzFCLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzFCLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzFCLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzFCLEdBQUc7UUFDSCxTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMxQixTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMxQixHQUFHO1FBQ0gsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDMUIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDMUIsR0FBRztRQUNILFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzFCLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzFCLEdBQUc7UUFDSCxTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztRQUMzQixTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztRQUMzQixTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztRQUMzQixTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztRQUMzQixTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztRQUMzQixTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUM1QixDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ2xCLENBQUM7QUFFRCxTQUFTLFNBQVMsQ0FBQyxHQUFlLEVBQUUsTUFBTSxHQUFHLENBQUM7SUFDNUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQU8xQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDcEIsTUFBTSxTQUFTLENBQUMsNkJBQTZCLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQsZUFBZSxTQUFTLENBQUMifQ==","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm5nLWJyb3dzZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcm5nLWJyb3dzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsSUFBSSxlQUEwRCxDQUFDO0FBRS9ELE1BQU0sS0FBSyxHQUFHLElBQUksVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBRWpDLE1BQU0sQ0FBQyxPQUFPLFVBQVUsR0FBRztJQUV6QixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDckIsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDN0QsTUFBTSxJQUFJLEtBQUssQ0FDYiwwR0FBMEcsQ0FDM0csQ0FBQztRQUNKLENBQUM7UUFFRCxlQUFlLEdBQUcsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELE9BQU8sZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2hDLENBQUMifQ==","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLWJyb3dzZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbmF0aXZlLWJyb3dzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxVQUFVLEdBQ2QsT0FBTyxNQUFNLEtBQUssV0FBVyxJQUFJLE1BQU0sQ0FBQyxVQUFVLElBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFFdkYsZUFBZSxFQUFFLFVBQVUsRUFBRSxDQUFDIn0=","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random || (options.rng || rng)();\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdjQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxNQUFNLE1BQU0sYUFBYSxDQUFDO0FBQ2pDLE9BQU8sR0FBRyxNQUFNLFVBQVUsQ0FBQztBQUMzQixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFJakQsU0FBUyxFQUFFLENBQUMsT0FBeUIsRUFBRSxHQUFnQixFQUFFLE1BQWU7SUFDdEUsSUFBSSxNQUFNLENBQUMsVUFBVSxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDMUMsT0FBTyxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELE9BQU8sR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO0lBRXhCLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxFQUFFLENBQUM7SUFHdEQsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQztJQUNsQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBR2xDLElBQUksR0FBRyxFQUFFLENBQUM7UUFDUixNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsQ0FBQztRQUVyQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDNUIsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDNUIsQ0FBQztRQUVELE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQztJQUVELE9BQU8sZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQy9CLENBQUM7QUFFRCxlQUFlLEVBQUUsQ0FBQyJ9","import { logger } from '../../../utils/logger'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { PaidStatus, OrderType } from '@/types/enums'\r\n\r\n/**\r\n * Validates a hold order structure and its data\r\n */\r\nexport const validateHoldOrder = (order) => {\r\n  if (!order || !order.id) {\r\n    throw new Error('Invalid hold order data')\r\n  }\r\n  if (order.status === 'inactive') {\r\n    throw new Error('Hold order is not active')\r\n  }\r\n  if (!order.hold_items || !order.hold_items.length) {\r\n    throw new Error('Hold order has no items')\r\n  }\r\n\r\n  // Set default values for backwards compatibility\r\n  if (!order.paid_status) {\r\n    order.paid_status = PaidStatus.UNPAID\r\n    logger.debug('Setting default paid_status:', order.paid_status)\r\n  }\r\n\r\n  if (!order.type) {\r\n    order.type = OrderType.DINE_IN\r\n    logger.debug('Setting default type:', order.type)\r\n  }\r\n\r\n  // Validate paid_status if present\r\n  if (order.paid_status && !Object.values(PaidStatus).includes(order.paid_status)) {\r\n    throw new Error('Invalid paid status. Must be either PAID or UNPAID')\r\n  }\r\n\r\n  // Validate order type if present\r\n  if (order.type && !Object.values(OrderType).includes(order.type)) {\r\n    throw new Error('Invalid order type. Must be one of: DINE IN, TO-GO, DELIVERY, PICKUP')\r\n  }\r\n\r\n  // Validate total matches items\r\n  const calculatedTotal = order.hold_items.reduce((sum, item) => {\r\n    return sum + (Number(item.price) * Number(item.quantity))\r\n  }, 0)\r\n  if (calculatedTotal !== order.total) {\r\n    throw new Error('Hold order total mismatch')\r\n  }\r\n}\r\n\r\n/**\r\n * Transforms API response data to include required parameters\r\n */\r\nexport const transformHoldInvoiceResponse = (data) => {\r\n  if (!data) return data\r\n\r\n  // Handle paginated response\r\n  if (data.hold_invoices?.data) {\r\n    data.hold_invoices.data = data.hold_invoices.data.map(invoice => ({\r\n      ...invoice,\r\n      paid_status: invoice.paid_status || PaidStatus.UNPAID,\r\n      type: invoice.type || OrderType.DINE_IN\r\n    }))\r\n    return data\r\n  }\r\n\r\n  // Handle single invoice response\r\n  if (data.id) {\r\n    return {\r\n      ...data,\r\n      paid_status: data.paid_status || PaidStatus.UNPAID,\r\n      type: data.type || OrderType.DINE_IN\r\n    }\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n/**\r\n * Generates a unique idempotency key for API requests\r\n */\r\nexport const generateIdempotencyKey = () => {\r\n  return `pos_${Date.now()}_${uuidv4()}`\r\n}\r\n\r\n/**\r\n * Standardized API error handler\r\n */\r\nexport const handleApiError = (error) => {\r\n  const errorResponse = {\r\n    success: false,\r\n    message: error.message,\r\n    errors: {}\r\n  }\r\n\r\n  if (error.response) {\r\n    switch (error.response.status) {\r\n      case 400:\r\n        errorResponse.message = 'Invalid request parameters'\r\n        break\r\n      case 401:\r\n        errorResponse.message = 'Authentication required'\r\n        break\r\n      case 404:\r\n        errorResponse.message = 'Resource not found'\r\n        break\r\n      case 422:\r\n        errorResponse.message = 'Validation failed'\r\n        errorResponse.errors = error.response.data.errors || {}\r\n        break\r\n      case 500:\r\n        errorResponse.message = 'Internal server error'\r\n        break\r\n      default:\r\n        errorResponse.message = 'An unexpected error occurred'\r\n    }\r\n    errorResponse.statusCode = error.response.status\r\n  }\r\n\r\n  logger.error('API Error:', {\r\n    message: errorResponse.message,\r\n    status: error.response?.status,\r\n    errors: errorResponse.errors,\r\n    originalError: error.message\r\n  })\r\n\r\n  throw errorResponse\r\n}\r\n","import apiClient from '../client'\r\nimport { logger } from '../../../utils/logger'\r\nimport { getApiEndpoint } from '../config'\r\nimport { handleApiError } from './utils'\r\n\r\nexport const configOperations = {\r\n  async getCompanySettings() {\r\n    logger.startGroup('POS Operations: Get Company Settings')\r\n    try {\r\n      const settings = [\r\n        'invoice_auto_generate',\r\n        'invoice_issuance_period',\r\n        'payment_auto_generate',\r\n        'allow_invoice_form_pos',\r\n        'allow_partial_pay',\r\n        'pdf_format_pos'\r\n      ]\r\n\r\n      logger.debug('Requesting company settings with params:', { settings })\r\n\r\n      const response = await apiClient.get('company/settings', {\r\n        params: { 'settings[]': settings }\r\n      })\r\n\r\n      logger.debug('Company settings response:', response.data)\r\n      logger.info('Company settings fetched successfully')\r\n      return {\r\n        success: true,\r\n        data: response.data\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  },\r\n\r\n  async getNextNumber(type) {\r\n    logger.startGroup(`POS Operations: Get Next ${type} Number`)\r\n    try {\r\n      logger.debug(`Requesting next ${type} number`)\r\n      const response = await apiClient.get('next-number', {\r\n        params: { key: type }\r\n      })\r\n      \r\n      if (!response.data.nextNumber || !response.data.prefix) {\r\n        throw new Error('Invalid next number response')\r\n      }\r\n\r\n      logger.debug(`Next ${type} number response:`, response.data)\r\n      logger.info(`Next ${type} number fetched successfully`)\r\n      \r\n      return {\r\n        nextNumber: response.data.nextNumber,\r\n        prefix: response.data.prefix\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  },\r\n\r\n  async getTables(cashRegisterId) {\r\n    logger.startGroup('POS Operations: Get Tables')\r\n    try {\r\n      if (!cashRegisterId) {\r\n        throw new Error('Cash register ID is required')\r\n      }\r\n\r\n      logger.debug('Requesting tables for cash register:', cashRegisterId)\r\n      const companyId = localStorage.getItem('companyId')\r\n      const endpoint = `${getApiEndpoint('pos.tables')}/${cashRegisterId}`\r\n      \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          company: companyId\r\n        }\r\n      }\r\n\r\n      logger.debug('Tables request config:', { endpoint, config })\r\n      const response = await apiClient.get(endpoint, config)\r\n      \r\n      // Validate response structure\r\n      if (!response.data) {\r\n        throw new Error('Invalid response structure')\r\n      }\r\n\r\n      // Ensure we have a data array, even if empty\r\n      const tables = Array.isArray(response.data) ? response.data : \r\n                    (response.data.data && Array.isArray(response.data.data)) ? response.data.data : \r\n                    []\r\n\r\n      logger.debug('Tables response processed:', {\r\n        rawResponse: response.data,\r\n        processedTables: tables,\r\n        tableCount: tables.length\r\n      })\r\n\r\n      return {\r\n        success: true,\r\n        data: tables.map(table => ({\r\n          id: table.id,\r\n          name: table.name || `Table ${table.id}`,\r\n          is_occupied: !!table.is_occupied,\r\n          quantity: table.quantity || 0,\r\n          items: table.items || 0\r\n        }))\r\n      }\r\n    } catch (error) {\r\n      logger.error('Failed to fetch tables', {\r\n        error: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status,\r\n        cashRegisterId\r\n      })\r\n      return {\r\n        success: false,\r\n        error: error.message,\r\n        data: []\r\n      }\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  }\r\n}\r\n\r\nexport default configOperations\r\n","import apiClient from '../client'\r\nimport { logger } from '../../../utils/logger'\r\nimport api from '../pos-api'\r\nimport { handleApiError, validateHoldOrder, transformHoldInvoiceResponse } from './utils'\r\nimport { PaidStatus, OrderType } from '../../../types/order'\r\n\r\nexport const invoiceOperations = {\r\n  async getHoldInvoices() {\r\n    logger.startGroup('POS Operations: Get Hold Invoices')\r\n    try {\r\n      logger.debug('Requesting hold invoices')\r\n      const response = await api.holdInvoice.getAll()\r\n      \r\n      if (!response.data) {\r\n        throw new Error('Invalid hold invoices response')\r\n      }\r\n\r\n      // Transform response to include required parameters\r\n      const transformedData = transformHoldInvoiceResponse(response.data)\r\n\r\n      // Validate each hold invoice\r\n      if (transformedData.hold_invoices?.data) {\r\n        transformedData.hold_invoices.data.forEach(invoice => {\r\n          try {\r\n            validateHoldOrder(invoice)\r\n          } catch (error) {\r\n            logger.warn(`Invalid hold order ${invoice.id}:`, error.message)\r\n          }\r\n        })\r\n      }\r\n\r\n      logger.debug('Hold invoices response:', transformedData)\r\n      logger.info('Hold invoices fetched successfully')\r\n      return {\r\n        success: true,\r\n        ...transformedData\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  },\r\n\r\n  async getHoldInvoice(id) {\r\n    logger.startGroup('POS Operations: Get Hold Invoice')\r\n    try {\r\n      if (!id) {\r\n        logger.error('Invalid hold invoice ID:', id)\r\n        throw new Error('Hold invoice ID is required')\r\n      }\r\n\r\n      logger.debug('Requesting hold invoice:', id)\r\n      const response = await api.holdInvoice.getById(id)\r\n      \r\n      if (!response?.data) {\r\n        logger.error('Empty response from hold invoice API:', response)\r\n        throw new Error('Empty response from hold invoice API')\r\n      }\r\n\r\n      // Handle nested response structures\r\n      const invoiceData = response.data?.data || response.data?.hold_invoice || response.data\r\n      \r\n      if (!invoiceData || (!invoiceData.id && !invoiceData.hold_invoice_id)) {\r\n        logger.error('Invalid hold invoice response structure:', response.data)\r\n        throw new Error('Invalid hold invoice response structure')\r\n      }\r\n\r\n      // Transform and validate response\r\n      const transformedData = transformHoldInvoiceResponse(invoiceData)\r\n      \r\n      // Ensure critical fields are present\r\n      if (!transformedData.id && !transformedData.hold_invoice_id) {\r\n        logger.error('Missing required ID fields after transform:', transformedData)\r\n        throw new Error('Missing required invoice ID fields')\r\n      }\r\n\r\n      logger.debug('Hold invoice response:', transformedData)\r\n      logger.info('Hold invoice fetched successfully')\r\n      return transformedData\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  },\r\n\r\n  async updateHoldInvoice(id, invoiceData) {\r\n    logger.startGroup('POS Operations: Update Hold Invoice')\r\n    try {\r\n      logger.debug('Updating hold invoice:', { id, data: invoiceData })\r\n\r\n      // Set default values if not provided\r\n      const updatedData = {\r\n        ...invoiceData,\r\n        paid_status: invoiceData.paid_status || PaidStatus.UNPAID,\r\n        type: invoiceData.type || OrderType.DINE_IN,\r\n        is_hold_invoice: true\r\n      }\r\n\r\n      // Validate parameters if present\r\n      if (updatedData.paid_status && !Object.values(PaidStatus).includes(updatedData.paid_status)) {\r\n        throw new Error('Invalid paid_status. Must be either PAID or UNPAID')\r\n      }\r\n\r\n      if (updatedData.type && !Object.values(OrderType).includes(updatedData.type)) {\r\n        throw new Error('Invalid type. Must be one of: DINE IN, TO-GO, DELIVERY, PICKUP')\r\n      }\r\n\r\n      const response = await api.holdInvoice.update(id, updatedData)\r\n\r\n      logger.debug('Hold invoice update response:', response)\r\n      logger.info('Hold invoice updated successfully:', {\r\n        invoiceId: id,\r\n        total: updatedData.total,\r\n        paid_status: updatedData.paid_status,\r\n        type: updatedData.type\r\n      })\r\n\r\n      return {\r\n        success: true,\r\n        data: transformHoldInvoiceResponse(response.data)\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  },\r\n\r\n  async createInvoice(invoiceData) {\r\n    logger.startGroup('POS Operations: Create Invoice')\r\n    try {\r\n      logger.debug('Creating invoice with data:', invoiceData)\r\n\r\n      // Set default values if not provided\r\n      const updatedData = {\r\n        ...invoiceData,\r\n        paid_status: invoiceData.paid_status || PaidStatus.UNPAID,\r\n        type: invoiceData.type || OrderType.DINE_IN\r\n      }\r\n\r\n      // Validate parameters if present\r\n      if (updatedData.paid_status && !Object.values(PaidStatus).includes(updatedData.paid_status)) {\r\n        throw new Error('Invalid paid_status. Must be either PAID or UNPAID')\r\n      }\r\n\r\n      if (updatedData.type && !Object.values(OrderType).includes(updatedData.type)) {\r\n        throw new Error('Invalid type. Must be one of: DINE IN, TO-GO, DELIVERY, PICKUP')\r\n      }\r\n\r\n      // Skip hold invoice validation if we're creating from prepared data\r\n      if (updatedData.hold_invoice_id && !updatedData.is_prepared_data) {\r\n        const holdOrder = await this.getHoldInvoice(updatedData.hold_invoice_id)\r\n        if (!holdOrder) {\r\n          throw new Error('Failed to fetch hold invoice')\r\n        }\r\n        validateHoldOrder(holdOrder)\r\n      }\r\n\r\n      const response = await apiClient.post('invoices', updatedData)\r\n\r\n      logger.debug('Invoice creation response:', response.data)\r\n      logger.info('Invoice created successfully:', {\r\n        invoiceId: response.data.invoice?.id,\r\n        total: response.data.invoice?.total,\r\n        paid_status: updatedData.paid_status,\r\n        type: updatedData.type\r\n      })\r\n      \r\n      return {\r\n        success: true,\r\n        ...transformHoldInvoiceResponse(response.data)\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  },\r\n\r\n  async getInvoice(id) {\r\n    logger.startGroup('POS Operations: Get Invoice')\r\n    try {\r\n      logger.debug('Requesting invoice:', id)\r\n      const response = await apiClient.get(`invoices/${id}`)\r\n      \r\n      if (!response.data?.invoice) {\r\n        throw new Error('Invalid invoice response')\r\n      }\r\n\r\n      logger.debug('Invoice response:', response.data)\r\n      logger.info('Invoice fetched successfully')\r\n      return {\r\n        success: true,\r\n        ...transformHoldInvoiceResponse(response.data.invoice)\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  }\r\n}\r\n\r\nexport default invoiceOperations\r\n","import apiClient from '../client'\r\nimport { logger } from '../../../utils/logger'\r\nimport { handleApiError, generateIdempotencyKey } from './utils'\r\n\r\nexport const paymentOperations = {\r\n  async getPaymentMethods() {\r\n    logger.startGroup('POS Operations: Get Payment Methods')\r\n    try {\r\n      logger.debug('Requesting payment methods')\r\n      const response = await apiClient.post('payments/multiple/get-payment-methods')\r\n      \r\n      if (!response.data?.payment_methods) {\r\n        throw new Error('Invalid payment methods response')\r\n      }\r\n\r\n      logger.debug('Payment methods response:', response.data)\r\n      logger.info('Payment methods fetched successfully')\r\n      return {\r\n        success: true,\r\n        data: response.data.payment_methods\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  },\r\n\r\n  async createPayment(paymentData) {\r\n    logger.startGroup('POS Operations: Create Payment')\r\n    try {\r\n      logger.debug('Creating payment with data:', paymentData)\r\n\r\n      const idempotencyKey = generateIdempotencyKey()\r\n      logger.debug('Generated idempotency key:', idempotencyKey)\r\n\r\n      const response = await apiClient.post('payments/multiple/create', paymentData, {\r\n        headers: {\r\n          'Idempotency-Key': idempotencyKey\r\n        }\r\n      })\r\n\r\n      logger.debug('Payment creation response:', response.data)\r\n      logger.info('Payment created successfully:', {\r\n        paymentId: response.data.payment?.id,\r\n        amount: response.data.payment?.amount\r\n      })\r\n      \r\n      return {\r\n        success: true,\r\n        ...response.data\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  }\r\n}\r\n\r\nexport default paymentOperations\r\n","import apiClient from '../client'\r\nimport { logger } from '../../../utils/logger'\r\nimport { handleApiError } from './utils'\r\n\r\nexport const orderOperations = {\r\n  async getOrders() {\r\n    logger.startGroup('POS Operations: Get Orders')\r\n    try {\r\n      logger.debug('Requesting orders')\r\n      const response = await apiClient.get('orders')\r\n      \r\n      if (!response.data) {\r\n        throw new Error('Invalid orders response')\r\n      }\r\n\r\n      logger.debug('Orders response:', response.data)\r\n      logger.info('Orders fetched successfully')\r\n      return {\r\n        success: true,\r\n        data: Array.isArray(response.data) ? response.data : response.data.data || []\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  },\r\n\r\n  async getOrderById(orderId) {\r\n    logger.startGroup('POS Operations: Get Order By ID')\r\n    try {\r\n      logger.debug('Requesting order:', orderId)\r\n      const response = await apiClient.get(`orders/${orderId}`)\r\n      \r\n      if (!response.data) {\r\n        throw new Error('Invalid order response')\r\n      }\r\n\r\n      logger.debug('Order response:', response.data)\r\n      logger.info('Order fetched successfully')\r\n      return {\r\n        success: true,\r\n        data: response.data\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  },\r\n\r\n  async updateOrderStatus(orderId, statusData) {\r\n    logger.startGroup('POS Operations: Update Order Status')\r\n    try {\r\n      logger.debug('Updating order status:', { orderId, statusData })\r\n\r\n      const response = await apiClient.patch(`orders/${orderId}/status`, statusData)\r\n\r\n      logger.debug('Order status update response:', response.data)\r\n      logger.info('Order status updated successfully:', {\r\n        orderId,\r\n        newStatus: statusData.status\r\n      })\r\n\r\n      return {\r\n        success: true,\r\n        data: response.data\r\n      }\r\n    } catch (error) {\r\n      return handleApiError(error)\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  }\r\n}\r\n\r\nexport default orderOperations\r\n","import { configOperations } from './config'\r\nimport { invoiceOperations } from './invoice'\r\nimport { paymentOperations } from './payment'\r\nimport { orderOperations } from './order'\r\n\r\n// Combine all operations into a single object\r\nconst operations = {\r\n  ...configOperations,\r\n  ...invoiceOperations,\r\n  ...paymentOperations,\r\n  ...orderOperations\r\n}\r\n\r\n// Export both the composable-style function and the direct operations object\r\n// to maintain backward compatibility\r\nexport const usePosOperations = () => operations\r\nexport const posOperations = operations\r\nexport default operations\r\n","import { ref, computed, watch } from 'vue'\nimport { useCartStore } from '../../../stores/cart-store'\nimport { usePosStore } from '../../../stores/pos-store'\nimport { logger } from '../../../utils/logger'\nimport { posOperations } from '../../../services/api/pos-operations'\nimport { OrderType } from '../../../types/order'\n\n// Use the OrderType enum from types\nexport const ORDER_TYPES = OrderType\n\nexport function useOrderType() {\n  logger.info('[useOrderType] Initializing order type composable')\n  \n  const cartStore = useCartStore()\n  const posStore = usePosStore()\n  \n  // State\n  const orderType = ref(null)\n  const customerInfo = ref({\n    name: '',\n    phone: '',\n    instructions: ''\n  })\n  const customerNotes = ref('')\n  const loading = ref(false)\n  const error = ref(null)\n\n  // Initialize from cart store\n  if (cartStore.type) {\n    logger.debug('[useOrderType] Initializing from cart store type:', cartStore.type)\n    orderType.value = cartStore.type\n  }\n\n  // Initialize customer notes from cart store notes\n  if (cartStore.notes) {\n    try {\n      logger.debug('[useOrderType] Parsing cart store notes')\n      const notesObj = JSON.parse(cartStore.notes)\n      if (notesObj.customerNotes) {\n        customerNotes.value = notesObj.customerNotes\n        logger.debug('[useOrderType] Customer notes initialized:', customerNotes.value)\n      }\n      if (notesObj.orderInfo?.customer) {\n        customerInfo.value = {\n          ...customerInfo.value,\n          ...notesObj.orderInfo.customer\n        }\n        logger.debug('[useOrderType] Customer info initialized:', customerInfo.value)\n      }\n    } catch (e) {\n      logger.warn('[useOrderType] Failed to initialize from cart notes:', e)\n    }\n  }\n\n  // Watch for changes in customer notes and sync with cart store\n  watch(customerNotes, (newNotes) => {\n    try {\n      logger.debug('[useOrderType] Customer notes changed:', newNotes)\n      const notesObj = {\n        customerNotes: newNotes,\n        orderInfo: {\n          customer: customerInfo.value\n        },\n        timestamp: new Date().toISOString()\n      }\n      cartStore.setNotes(JSON.stringify(notesObj))\n    } catch (e) {\n      logger.error('[useOrderType] Failed to sync notes with cart store:', e)\n    }\n  })\n\n  // Computed\n  const isValid = computed(() => {\n    if (!orderType.value) {\n      logger.debug('[useOrderType] Validation failed: No order type set')\n      return false\n    }\n\n    const { name, phone, address } = customerInfo.value\n    \n    switch (orderType.value) {\n      case ORDER_TYPES.DINE_IN:\n        logger.debug('[useOrderType] Validating DINE_IN order')\n        return true // Table selection handled separately\n      case ORDER_TYPES.TO_GO:\n        logger.debug('[useOrderType] Validating TO_GO order:', { name, phone })\n        return name.trim() && phone.trim()\n      case ORDER_TYPES.DELIVERY:\n        logger.debug('[useOrderType] Validating DELIVERY order:', { name, phone, address })\n        return name.trim() && phone.trim() && address.trim()\n      case ORDER_TYPES.PICKUP:\n        logger.debug('[useOrderType] Validating PICKUP order:', { name, phone })\n        return name.trim() && phone.trim()\n      default:\n        logger.warn('[useOrderType] Invalid order type:', orderType.value)\n        return false\n    }\n  })\n\n  const requiresCustomerInfo = computed(() => {\n    return orderType.value && orderType.value !== ORDER_TYPES.DINE_IN\n  })\n\n  const canCreateOrder = computed(() => {\n    const canCreate = !cartStore.isEmpty && posStore.systemReady\n    logger.debug('[useOrderType] Can create order:', { \n      canCreate,\n      cartEmpty: cartStore.isEmpty,\n      systemReady: posStore.systemReady\n    })\n    return canCreate\n  })\n\n  const currentOrderType = computed(() => {\n    try {\n      // First check if type is set directly\n      if (cartStore.type) {\n        logger.debug('[useOrderType] Order type found in cart store:', cartStore.type)\n        orderType.value = cartStore.type // Keep local state in sync\n        return cartStore.type\n      }\n\n      // If we have a held invoice, try to determine type from the name\n      if (cartStore.holdInvoiceId) {\n        logger.debug('[useOrderType] Determining type from held invoice:', cartStore.holdInvoiceName)\n        // Check if any order type prefix exists in the invoice name\n        const invoiceName = cartStore.holdInvoiceName || ''\n        for (const type of Object.values(ORDER_TYPES)) {\n          if (invoiceName.startsWith(type)) {\n            logger.debug('[useOrderType] Type determined from invoice name:', type)\n            orderType.value = type // Keep local state in sync\n            cartStore.setType(type)\n            return type\n          }\n        }\n      }\n\n      // If no type found, default to TO_GO for held orders\n      if (cartStore.holdInvoiceId) {\n        logger.debug('[useOrderType] No type found for held order, defaulting to TO_GO')\n        orderType.value = ORDER_TYPES.TO_GO // Keep local state in sync\n        cartStore.setType(ORDER_TYPES.TO_GO)\n        return ORDER_TYPES.TO_GO\n      }\n\n      logger.debug('[useOrderType] No order type found')\n      return orderType.value || null\n    } catch (e) {\n      logger.error('[useOrderType] Error determining current order type:', e)\n      return orderType.value || null\n    }\n  })\n\n  // Helper function to update customer notes\n  const updateCustomerNotes = (customer, notes = '') => {\n    logger.debug('[useOrderType] Updating customer notes:', { customer, notes })\n    const orderData = {\n      orderInfo: {\n        customer: { ...customer }\n      },\n      customerNotes: notes\n    }\n    cartStore.setNotes(JSON.stringify(orderData))\n  }\n\n  // Methods\n  const setOrderType = (type) => {\n    logger.info('[useOrderType] Setting order type:', type)\n    \n    if (!Object.values(ORDER_TYPES).includes(type)) {\n      logger.error('[useOrderType] Invalid order type:', type)\n      throw new Error('Invalid order type')\n    }\n    \n    orderType.value = type\n    cartStore.setType(type)\n\n    // Reset customer info when changing order type\n    customerInfo.value = {\n      name: '',\n      phone: '',\n      address: '',\n      pickupTime: '',\n      instructions: ''\n    }\n    error.value = null\n\n    // Initialize notes structure with empty notes\n    const orderData = {\n      orderInfo: {\n        customer: { ...customerInfo.value }\n      },\n      customerNotes: ''\n    }\n    cartStore.setNotes(JSON.stringify(orderData))\n    customerNotes.value = '' // Reset local notes state\n    logger.debug('[useOrderType] Order type set, state reset')\n  }\n\n  const setCustomerInfo = (info) => {\n    logger.debug('[useOrderType] Setting customer info:', info)\n    customerInfo.value = {\n      ...customerInfo.value,\n      ...info\n    }\n    // Update notes with new customer info\n    updateCustomerNotes(customerInfo.value, customerNotes.value)\n  }\n\n  const setCustomerNotes = (notes) => {\n    logger.debug('[useOrderType] Setting customer notes:', notes)\n    customerNotes.value = notes\n    // Update notes while preserving customer info\n    updateCustomerNotes(customerInfo.value, notes)\n  }\n\n  const processOrder = async (options = {}) => {\n    logger.info('[useOrderType] Starting order processing', {\n      orderType: orderType.value,\n      customerInfo: customerInfo.value,\n      isValid: isValid.value,\n      canCreateOrder: canCreateOrder.value\n    })\n\n    if (!isValid.value) {\n      logger.warn('[useOrderType] Invalid order information')\n      throw new Error('Invalid order information')\n    }\n\n    if (!canCreateOrder.value) {\n      logger.warn('[useOrderType] Cannot create order', {\n        cartEmpty: cartStore.isEmpty,\n        systemReady: posStore.systemReady\n      })\n      throw new Error('Cannot create order: Cart is empty or system is not ready')\n    }\n\n    loading.value = true\n    error.value = null\n\n    try {\n      // Update customer notes\n      updateCustomerNotes(customerInfo.value, customerNotes.value)\n\n      // For dine-in, tables are handled separately\n      if (orderType.value === ORDER_TYPES.DINE_IN) {\n        logger.info('[useOrderType] Processing DINE_IN order')\n        return { success: true }\n      }\n\n      // For TO_GO orders, create a hold invoice ready for immediate conversion\n      if (orderType.value === ORDER_TYPES.TO_GO) {\n        if (!options.storeId || !options.cashierId) {\n          throw new Error('Store and cashier IDs are required for TO-GO orders')\n        }\n\n        // Update customer info with provided data\n        if (options.customerInfo) {\n          customerInfo.value = {\n            name: options.customerInfo.name,\n            phone: options.customerInfo.phone,\n            instructions: options.customerInfo.instructions\n          }\n        }\n\n        const orderName = options.orderName || `${orderType.value}_${customerInfo.value.name}`\n        logger.info('[useOrderType] Processing TO_GO order:', { \n          orderName,\n          storeId: options.storeId,\n          cashierId: options.cashierId,\n          customerInfo: customerInfo.value\n        })\n\n        const holdOrderData = cartStore.prepareHoldInvoiceData(\n          options.storeId,\n          options.cashierId,\n          orderName\n        )\n\n        // Ensure only relevant customer info is included\n        const orderInfo = {\n          customer: {\n            name: customerInfo.value.name,\n            phone: customerInfo.value.phone,\n            instructions: customerInfo.value.instructions\n          }\n        }\n        \n        holdOrderData.notes = JSON.stringify({ orderInfo })\n\n        // Add flags for immediate conversion\n        holdOrderData.is_prepared_data = true\n        holdOrderData.is_invoice_pos = 1\n        holdOrderData.is_hold_invoice = true\n        \n        logger.debug('[useOrderType] TO_GO hold order data prepared:', holdOrderData)\n        const holdResult = await posStore.holdOrder(holdOrderData)\n\n        logger.info('[useOrderType] TO_GO order created successfully:', holdResult.data)\n        return {\n          success: true,\n          data: holdResult.data\n        }\n      }\n\n      // For other types (DELIVERY, PICKUP), create regular hold invoice\n      const orderData = cartStore.prepareHoldInvoiceData(\n        posStore.selectedStore,\n        posStore.selectedCashier,\n        `${orderType.value}_${customerInfo.value.name}`\n      )\n\n      logger.debug('[useOrderType] Processing regular order:', orderData)\n      const result = await posStore.holdOrder(orderData)\n      \n      if (!result?.success) {\n        logger.error('[useOrderType] Failed to process order:', result)\n        throw new Error(result?.message || 'Failed to process order')\n      }\n\n      // Even if data is missing, if success is true, consider it successful\n      logger.info('[useOrderType] Order processed successfully:', result)\n      return {\n        success: true,\n        data: result.data || result\n      }\n\n    } catch (err) {\n      logger.error('[useOrderType] Order processing failed:', {\n        error: err,\n        orderType: orderType.value,\n        customerInfo: customerInfo.value\n      })\n      error.value = err.message || 'Failed to process order'\n      throw err\n    } finally {\n      loading.value = false\n      logger.debug('[useOrderType] Order processing completed')\n    }\n  }\n\n  const reset = () => {\n    logger.debug('[useOrderType] Resetting state')\n    orderType.value = null\n    cartStore.setType(null)\n    customerInfo.value = {\n      name: '',\n      phone: '',\n      address: '',\n      pickupTime: '',\n      instructions: ''\n    }\n    customerNotes.value = ''\n    error.value = null\n  }\n\n  return {\n    // State\n    orderType,\n    customerInfo,\n    customerNotes,\n    loading,\n    error,\n\n    // Computed\n    isValid,\n    requiresCustomerInfo,\n    canCreateOrder,\n    currentOrderType,\n\n    // Methods\n    setOrderType,\n    setCustomerInfo,\n    setCustomerNotes,\n    processOrder,\n    reset,\n\n    // Constants\n    ORDER_TYPES\n  }\n}\n","<template>\n  <div class=\"order-notes px-4 py-2\">\n    <v-text-field\n      v-model=\"localNotes\"\n      label=\"Order Notes\"\n      placeholder=\"Add notes for this order...\"\n      variant=\"outlined\"\n      density=\"comfortable\"\n      hide-details\n      clearable\n      @update:model-value=\"updateNotes\"\n    >\n      <template v-slot:prepend-inner>\n        <v-icon size=\"small\" color=\"grey\">mdi-note-text-outline</v-icon>\n      </template>\n    </v-text-field>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch, onMounted } from 'vue'\nimport { useOrderType } from '../../composables/useOrderType'\nimport { useCartStore } from '../../../../stores/cart-store'\nimport { parseOrderNotes } from '../../../../stores/cart/helpers'\nimport { logger } from '../../../../utils/logger'\n\nconst cartStore = useCartStore()\nconst { customerNotes, setCustomerNotes } = useOrderType()\n\nconst localNotes = ref('')\n\n// Function to save notes to cart store\nconst saveNotesToCart = (notes) => {\n  try {\n    const notesObj = {\n      customerNotes: notes,\n      timestamp: new Date().toISOString()\n    }\n    cartStore.setNotes(JSON.stringify(notesObj))\n    logger.debug('Notes saved to cart store:', { notes })\n  } catch (error) {\n    logger.error('Failed to save notes to cart:', error)\n  }\n}\n\n// Function to update notes\nconst updateNotes = (value) => {\n  setCustomerNotes(value)\n  saveNotesToCart(value)\n}\n\n// Initialize notes from cart store\nonMounted(() => {\n  try {\n    if (cartStore.notes) {\n      const notes = parseOrderNotes(cartStore.notes)\n      if (notes) {\n        localNotes.value = notes\n        setCustomerNotes(notes)\n        logger.debug('Notes initialized from cart store:', { notes })\n      }\n    }\n  } catch (error) {\n    logger.error('Failed to initialize notes:', error)\n  }\n})\n\n// Watch for external changes to customerNotes\nwatch(() => customerNotes.value, (newNotes) => {\n  if (newNotes !== localNotes.value) {\n    localNotes.value = newNotes\n    saveNotesToCart(newNotes)\n    logger.debug('Notes updated from customer notes:', { newNotes })\n  }\n})\n\n// Watch for changes to cart store notes\nwatch(() => cartStore.notes, (newNotes) => {\n  try {\n    const notes = parseOrderNotes(newNotes)\n    if (notes !== localNotes.value) {\n      localNotes.value = notes\n      logger.debug('Notes updated from cart store:', { notes })\n    }\n  } catch (error) {\n    logger.error('Failed to parse cart store notes:', error)\n  }\n})\n</script>\n\n<style scoped>\n.order-notes {\n  background-color: white;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n}\n</style>\n","import { ref } from 'vue'\r\nimport { useCartStore } from '../../../../../stores/cart-store'\r\nimport { usePosStore } from '../../../../../stores/pos-store'\r\nimport { logger } from '../../../../../utils/logger'\r\n\r\nexport function useCart() {\r\n  const cartStore = useCartStore()\r\n  const posStore = usePosStore()\r\n  const updating = ref(false)\r\n\r\n  const clearOrder = () => {\r\n    try {\r\n      logger.debug('Clearing order, current state:', {\r\n        items: cartStore.items?.length,\r\n        total: cartStore.total\r\n      })\r\n      cartStore.clearCart()\r\n    } catch (error) {\r\n      logger.error('Error clearing order:', error)\r\n      window.toastr?.['error']('Failed to clear order')\r\n    }\r\n  }\r\n\r\n  const updateQuantity = (itemId, quantity, index) => {\r\n    cartStore.updateItemQuantity(itemId, quantity, index)\r\n  }\r\n\r\n  const removeItem = (itemId, index) => {\r\n    cartStore.removeItem(itemId, index)\r\n  }\r\n\r\n  // Preserve the exact update functionality as specified\r\n  const updateOrder = async () => {\r\n    try {\r\n      const description = cartStore.holdOrderDescription\r\n      logger.debug('Attempting to update order:', {\r\n        description,\r\n        hasDescription: !!description,\r\n        cartState: {\r\n          items: cartStore.items?.length,\r\n          total: cartStore.total,\r\n          holdInvoiceId: cartStore.holdInvoiceId\r\n        }\r\n      })\r\n\r\n      if (!description) {\r\n        throw new Error('No order description found')\r\n      }\r\n\r\n      updating.value = true\r\n\r\n      // Prepare the order data from the current cart state\r\n      const orderData = cartStore.prepareHoldInvoiceData(\r\n        posStore.selectedStore,\r\n        posStore.selectedCashier,\r\n        description\r\n      )\r\n\r\n      // Update the hold invoice using description as identifier\r\n      const response = await posStore.updateHoldInvoice(description, orderData)\r\n\r\n      if (response.success) {\r\n        window.toastr?.['success']('Order updated successfully')\r\n        // Clear the hold invoice ID after successful update\r\n        cartStore.setHoldInvoiceId(null)\r\n        // Clear the cart after successful update\r\n        cartStore.clearCart()\r\n      } else {\r\n        throw new Error(response.message || 'Failed to update order')\r\n      }\r\n    } catch (error) {\r\n      logger.error('Failed to update order:', error)\r\n      window.toastr?.['error'](error.message || 'Failed to update order')\r\n    } finally {\r\n      updating.value = false\r\n    }\r\n  }\r\n\r\n  return {\r\n    cartStore,\r\n    updating,\r\n    clearOrder,\r\n    updateQuantity,\r\n    removeItem,\r\n    updateOrder\r\n  }\r\n}\r\n","<!-- src/views/pos/components/PosCart.vue -->\r\n<template>\r\n  <div class=\"pos-cart-container\" style=\"max-width: none;\">\r\n    <v-card class=\"cart-header\" flat>\r\n      <v-toolbar\r\n        density=\"comfortable\"\r\n        color=\"primary\"\r\n        class=\"rounded-t-lg\"\r\n      >\r\n        <v-toolbar-title class=\"text-h6 font-weight-medium\">\r\n          {{ cartStore.isEditingInvoice ? 'Edit Invoice' : 'Current Order' }}\r\n        </v-toolbar-title>\r\n        \r\n        <v-spacer></v-spacer>\r\n\r\n        <v-btn\r\n          v-if=\"cartStore.canUpdateInvoice\"\r\n          color=\"white\"\r\n          variant=\"text\"\r\n          :loading=\"updating\"\r\n          @click=\"handleUpdateInvoice\"\r\n          prepend-icon=\"mdi-content-save\"\r\n          class=\"text-none\"\r\n        >\r\n          Update Invoice\r\n        </v-btn>\r\n        \r\n        <v-btn\r\n          v-else-if=\"cartStore.isHoldOrder\"\r\n          color=\"white\"\r\n          variant=\"text\"\r\n          :loading=\"updating\"\r\n          @click=\"updateOrder\"\r\n          prepend-icon=\"mdi-content-save\"\r\n          class=\"text-none\"\r\n        >\r\n          Update\r\n        </v-btn>\r\n        \r\n        <v-btn\r\n          color=\"white\"\r\n          variant=\"text\"\r\n          :disabled=\"cartStore.isEmpty\"\r\n          @click=\"clearOrder\"\r\n          prepend-icon=\"mdi-delete-outline\"\r\n          class=\"text-none ml-2\"\r\n        >\r\n          Clear\r\n        </v-btn>\r\n      </v-toolbar>\r\n\r\n      <div v-if=\"cartStore.isHoldOrder\" class=\"px-4 py-2 bg-warning-lighten-4\">\r\n        <div class=\"d-flex align-center\">\r\n          <v-icon\r\n            icon=\"mdi-clock-outline\"\r\n            color=\"warning\"\r\n            class=\"mr-2\"\r\n          />\r\n          <span class=\"text-warning text-body-2 font-weight-medium\">\r\n            Held Order: {{ cartStore.holdOrderDescription || 'No Description' }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </v-card>\r\n\r\n    <v-card\r\n      class=\"cart-scrollable-content mx-2 mt-2\"\r\n      variant=\"flat\"\r\n      :class=\"{ 'empty-cart': cartStore.isEmpty }\"\r\n    >\r\n      <template v-if=\"cartStore.isEmpty\">\r\n        <div class=\"empty-state pa-8 text-center\">\r\n          <v-icon\r\n            icon=\"mdi-cart-outline\"\r\n            size=\"64\"\r\n            color=\"grey-lighten-1\"\r\n            class=\"mb-4\"\r\n          />\r\n          <h3 class=\"text-h6 font-weight-medium text-grey-darken-1\">Cart is Empty</h3>\r\n          <p class=\"text-body-2 text-grey-darken-1 mt-2\">\r\n            Add items from the product list to get started.\r\n          </p>\r\n        </div>\r\n      </template>\r\n\r\n      <template v-else>\r\n        <cart-item-list\r\n          :items=\"cartStore.items\"\r\n          @edit=\"editItem\"\r\n          @remove=\"removeItem\"\r\n          @update-quantity=\"updateQuantity\"\r\n          class=\"cart-items-list\"\r\n        />\r\n      </template>\r\n    </v-card>\r\n\r\n    <!-- Order Notes -->\r\n    <v-card\r\n      v-if=\"!cartStore.isEmpty\"\r\n      class=\"mx-2 mt-2\"\r\n      variant=\"flat\"\r\n    >\r\n      <order-notes />\r\n    </v-card>\r\n\r\n    <!-- Order Summary -->\r\n    <v-card\r\n      class=\"cart-summary-wrapper mx-2 mt-2 mb-2\"\r\n      elevation=\"2\"\r\n      rounded=\"lg\"\r\n    >\r\n      <v-card-text class=\"pa-4\">\r\n        <cart-summary\r\n          :subtotal=\"cartStore.subtotal\"\r\n          :discount-amount=\"cartStore.discountAmount\"\r\n          :tax-rate=\"cartStore.taxRate\"\r\n          :tax-amount=\"cartStore.taxAmount\"\r\n          :total=\"cartStore.total\"\r\n        />\r\n      </v-card-text>\r\n    </v-card>\r\n\r\n    <!-- Edit Item Dialog -->\r\n    <edit-item-dialog\r\n      v-model=\"showEditDialog\"\r\n      :item=\"editingItem\"\r\n      :index=\"editingIndex\"\r\n      max-width=\"500\"\r\n      transition=\"dialog-bottom-transition\"\r\n      persistent\r\n    >\r\n      <template #default>\r\n        <v-card>\r\n          <v-card-title class=\"text-h6 pa-4\">\r\n            Edit Item\r\n            <v-btn\r\n              icon=\"mdi-close\"\r\n              variant=\"text\"\r\n              size=\"small\"\r\n              @click=\"showEditDialog = false\"\r\n              class=\"float-right\"\r\n            />\r\n          </v-card-title>\r\n          <v-card-text class=\"pa-4\">\r\n            <!-- Edit form content here -->\r\n          </v-card-text>\r\n          <v-card-actions class=\"pa-4\">\r\n            <v-spacer />\r\n            <v-btn\r\n              color=\"grey-darken-1\"\r\n              variant=\"text\"\r\n              @click=\"showEditDialog = false\"\r\n              class=\"text-none\"\r\n            >\r\n              Cancel\r\n            </v-btn>\r\n            <v-btn\r\n              color=\"primary\"\r\n              @click=\"saveChanges\"\r\n              class=\"text-none\"\r\n              :loading=\"saving\"\r\n            >\r\n              Save Changes\r\n            </v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </template>\r\n    </edit-item-dialog>\r\n\r\n    <!-- Loading Overlay -->\r\n    <v-overlay\r\n      :model-value=\"cartStore.loading\"\r\n      class=\"align-center justify-center\"\r\n    >\r\n      <v-progress-circular\r\n        size=\"64\"\r\n        color=\"primary\"\r\n        indeterminate\r\n      />\r\n    </v-overlay>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport CartItemList from './cart/CartItemList.vue'\r\nimport CartSummary from './cart/CartSummary.vue'\r\nimport { logger } from '../../../utils/logger'\r\nimport EditItemDialog from './cart/EditItemDialog.vue'\r\nimport OrderNotes from './cart/OrderNotes.vue'\r\nimport { useCart } from './cart/composables/useCart'\r\n\r\nconst { cartStore, updating, clearOrder, updateQuantity, removeItem, updateOrder, splitItem } = useCart()\r\n\r\nconst handleUpdateInvoice = async () => {\r\n  try {\r\n    if (!cartStore.items || cartStore.items.length === 0) {\r\n      window.toastr?.error('Cannot update invoice: Cart is empty')\r\n      return\r\n    }\r\n    \r\n    // Preserve original customer and company information\r\n    const originalInvoice = cartStore.currentInvoice || {}\r\n    const updateData = {\r\n      ...cartStore.currentInvoice,\r\n      contact_id: originalInvoice.contact_id || originalInvoice.customer_id,\r\n      company_id: originalInvoice.company_id,\r\n      first_name: originalInvoice.first_name,\r\n      last_name: originalInvoice.last_name,\r\n      email: originalInvoice.email,\r\n      phone: originalInvoice.phone\r\n    }\r\n\r\n    // Defensive checks\r\n    if (!updateData.company_id) {\r\n      console.warn('No company_id found in original invoice')\r\n      updateData.company_id = cartStore.currentCompanyId // Fallback to current company\r\n    }\r\n\r\n    if (!updateData.contact_id) {\r\n      console.warn('No contact_id found in original invoice')\r\n    }\r\n\r\n    await cartStore.updateInvoice(updateData)\r\n    clearOrder()\r\n  } catch (error) {\r\n    console.error('Failed to update invoice:', error)\r\n    window.toastr?.error('Failed to update invoice: ' + (error.message || 'Unknown error'))\r\n  }\r\n}\r\n\r\n\r\n// Local state for edit dialog\r\nconst showEditDialog = ref(false)\r\nconst editingItem = ref(null)\r\nconst editingIndex = ref(null)\r\n\r\n// Methods\r\nconst editItem = (item, index) => {\r\n  editingItem.value = { ...item }\r\n  editingIndex.value = index\r\n  showEditDialog.value = true\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pos-cart-container {\r\n  height: 100% !important;\r\n  min-height: 100% !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: rgb(245, 245, 245);\r\n  overflow: hidden;\r\n  width: 100% !important;\r\n  padding: 0.5rem;\r\n  position: relative;\r\n  contain: strict;\r\n}\r\n\r\n.cart-header {\r\n  flex-shrink: 0;\r\n  z-index: 2;\r\n  border-radius: 8px 8px 0 0;\r\n}\r\n\r\n.cart-scrollable-content {\r\n  flex: 1;\r\n  min-height: 0;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 8px;\r\n  background-color: white;\r\n}\r\n\r\n.empty-cart {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: white;\r\n  border: 2px dashed rgba(0, 0, 0, 0.12);\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-items-list {\r\n  padding: 0.25rem;\r\n}\r\n\r\n.cart-summary-wrapper {\r\n  flex-shrink: 0;\r\n  background-color: white;\r\n  margin-top: auto;\r\n  z-index: 2;\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n}\r\n\r\n/* Mobile Optimizations */\r\n@media (max-width: 600px) {\r\n  .pos-cart-container {\r\n    height: calc(50vh - 32px); /* Account for footer height */\r\n    min-height: 300px;\r\n    max-height: calc(100vh - 64px);\r\n  }\r\n\r\n  .cart-scrollable-content {\r\n    height: calc(100% - 100px); /* Adjust for mobile header + summary */\r\n    min-height: 200px;\r\n  }\r\n}\r\n\r\n/* Tablet and Desktop */\r\n@media (min-width: 601px) {\r\n  .pos-cart-container {\r\n    height: calc(100vh - 64px); /* Account for main padding and footer */\r\n  }\r\n}\r\n</style>\r\n","<!-- src/views/pos/components/products/ProductSearch.vue -->\r\n<template>\r\n  <div class=\"search-wrapper\">\r\n    <v-fade-transition>\r\n      <v-text-field\r\n        v-model=\"searchQuery\"\r\n        :placeholder=\"isMobile ? 'Search...' : 'Search products...'\"\r\n        :label=\"isMobile ? null : 'Search Products'\"\r\n        density=\"comfortable\"\r\n        variant=\"outlined\"\r\n        hide-details\r\n        class=\"search-field\"\r\n        bg-color=\"white\"\r\n        :class=\"{ 'is-mobile': isMobile }\"\r\n        :loading=\"isLoading\"\r\n        clearable\r\n        @update:model-value=\"handleSearch\"\r\n        @click:clear=\"clearSearch\"\r\n        @keyup.enter=\"handleEnter\"\r\n      >\r\n        <template v-slot:prepend-inner>\r\n          <v-icon\r\n            color=\"primary\"\r\n            :class=\"{ 'search-icon-animated': isLoading }\"\r\n          >\r\n            mdi-magnify\r\n          </v-icon>\r\n        </template>\r\n      </v-text-field>\r\n    </v-fade-transition>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport { useDisplay } from 'vuetify'\r\nimport { logger } from '@/utils/logger'\r\n\r\nconst searchQuery = ref('')\r\nconst isLoading = ref(false)\r\nconst { mobile } = useDisplay()\r\n\r\nconst isMobile = computed(() => mobile.value)\r\n\r\nconst emit = defineEmits(['search', 'quickAdd'])\r\n\r\n// Regular expressions for SKU patterns\r\nconst SKU_PATTERNS = {\r\n  // Common SKU patterns - adjust these based on your actual SKU format\r\n  NUMERIC: /^\\d{4,}$/, // 4 or more digits\r\n  ALPHANUMERIC: /^[A-Z]\\d{3,}$/, // Letter followed by 3+ numbers\r\n  DASHED: /^[A-Z0-9]+-[A-Z0-9]+$/, // Two alphanumeric parts with dash\r\n}\r\n\r\n// Debounced search with loading state\r\nlet searchTimeout\r\nlet skuBuffer = ''\r\nlet skuBufferTimeout\r\n\r\nconst isValidSKU = (value) => {\r\n  // Early exit for short inputs\r\n  if (!value || value.length < 4) return false\r\n  \r\n  // Convert to uppercase for consistent matching\r\n  const upperValue = value.toUpperCase()\r\n  \r\n  // Check against each SKU pattern\r\n  return Object.values(SKU_PATTERNS).some(pattern => pattern.test(upperValue))\r\n}\r\n\r\nconst handleSearch = (value) => {\r\n  if (!value) {\r\n    clearSearch()\r\n    return\r\n  }\r\n\r\n  isLoading.value = true\r\n  clearTimeout(searchTimeout)\r\n  clearTimeout(skuBufferTimeout)\r\n  \r\n  // Update SKU buffer\r\n  skuBuffer = value\r\n  \r\n  // Check if input matches SKU pattern\r\n  if (isValidSKU(value)) {\r\n    logger.debug('Potential SKU detected:', { value })\r\n    // For SKU-like input, give more time to complete typing\r\n    skuBufferTimeout = setTimeout(() => {\r\n      logger.info('Processing SKU:', { sku: skuBuffer })\r\n      emit('quickAdd', skuBuffer)\r\n      clearSearch()\r\n    }, 1000) // Wait 1 second after last keystroke\r\n  } else {\r\n    // For regular search, use shorter debounce\r\n    searchTimeout = setTimeout(() => {\r\n      logger.debug('Processing search:', { query: value })\r\n      emit('search', value)\r\n      isLoading.value = false\r\n    }, 300)\r\n  }\r\n}\r\n\r\nconst clearSearch = () => {\r\n  searchQuery.value = ''\r\n  skuBuffer = ''\r\n  clearTimeout(searchTimeout)\r\n  clearTimeout(skuBufferTimeout)\r\n  emit('search', '')\r\n  isLoading.value = false\r\n}\r\n\r\nconst handleEnter = () => {\r\n  const value = searchQuery.value.trim()\r\n  if (!value) return\r\n  \r\n  clearTimeout(skuBufferTimeout) // Clear any pending SKU timeout\r\n  \r\n  if (isValidSKU(value)) {\r\n    logger.info('Manual SKU entry:', { sku: value })\r\n    emit('quickAdd', value)\r\n  } else {\r\n    logger.info('Manual search entry:', { query: value })\r\n    emit('search', value)\r\n  }\r\n  clearSearch()\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.search-wrapper {\r\n  width: 100%;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.search-field {\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.search-field:hover :deep(.v-field) {\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.search-field :deep(.v-field) {\r\n  transition: box-shadow 0.3s ease;\r\n  border-radius: 12px;\r\n}\r\n\r\n.search-field :deep(.v-field__outline) {\r\n  --v-field-border-width: 1.5px;\r\n}\r\n\r\n.search-field :deep(.v-field--focused) {\r\n  box-shadow: 0 3px 12px rgba(0,0,0,0.12);\r\n}\r\n\r\n.search-field.is-mobile :deep(.v-field__input) {\r\n  font-size: 14px;\r\n  min-height: 44px;\r\n}\r\n\r\n.search-icon-animated {\r\n  animation: pulse 1.5s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% { opacity: 1; }\r\n  50% { opacity: 0.5; }\r\n  100% { opacity: 1; }\r\n}\r\n\r\n/* Responsive Adjustments */\r\n@media (max-width: 600px) {\r\n  .search-wrapper {\r\n    max-width: 100%;\r\n  }\r\n  \r\n  .search-field :deep(.v-field) {\r\n    border-radius: 8px;\r\n  }\r\n}\r\n</style>\r\n","<!-- src/views/pos/components/products/CategoryTabs.vue -->\r\n<template>\r\n  <div class=\"category-tabs-wrapper\">\r\n    <v-tabs\r\n      v-model=\"selectedTab\"\r\n      density=\"comfortable\"\r\n      show-arrows\r\n      slider-color=\"primary\"\r\n      selected-class=\"v-tab--selected\"\r\n      class=\"category-tabs\"\r\n      bg-color=\"white\"\r\n      @update:model-value=\"$emit('change', selectedTab)\"\r\n    >\r\n        <v-tab\r\n          v-for=\"category in categories\"\r\n          :key=\"category.id\"\r\n          :value=\"category.id\"\r\n          class=\"category-tab\"\r\n          :ripple=\"false\"\r\n        >\r\n          <v-icon\r\n            v-if=\"category.icon\"\r\n            start\r\n            :icon=\"category.icon\"\r\n            size=\"18\"\r\n            class=\"me-1\"\r\n          />\r\n          {{ category.name }}\r\n        </v-tab>\r\n    </v-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n\r\ndefineProps({\r\n  categories: {\r\n    type: Array,\r\n    required: true\r\n  }\r\n})\r\n\r\nconst selectedTab = ref('all')\r\n\r\ndefineEmits(['change'])\r\n</script>\r\n\r\n<style scoped>\r\n.category-tabs-wrapper {\r\n  position: relative;\r\n}\r\n\r\n.category-tabs {\r\n  border-radius: 8px;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.category-tab {\r\n  min-width: 100px;\r\n  padding: 0 16px;\r\n  font-weight: 500;\r\n  text-transform: none;\r\n  letter-spacing: normal;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.category-tab:hover {\r\n  background: rgba(var(--v-theme-primary), 0.04);\r\n}\r\n\r\n:deep(.v-tab--selected) {\r\n  color: rgb(var(--v-theme-primary)) !important;\r\n  background: rgba(var(--v-theme-primary), 0.08);\r\n  font-weight: 600;\r\n}\r\n\r\n:deep(.v-tabs__slider-wrapper) {\r\n  height: 3px !important;\r\n}\r\n\r\n/* Mobile Optimizations */\r\n@media (max-width: 600px) {\r\n  .category-tab {\r\n    min-width: 80px;\r\n    padding: 0 12px;\r\n    font-size: 0.875rem;\r\n  }\r\n  \r\n  :deep(.v-btn__content) {\r\n    gap: 4px;\r\n  }\r\n}\r\n</style>\r\n","<!-- src/views/pos/components/products/ProductGrid.vue -->\r\n<template>\r\n  <div class=\"product-grid-container\">\r\n    <div class=\"product-grid-scroll\">\r\n      <div class=\"product-grid ma-0\">\r\n        <div\r\n          v-for=\"item in displayedProducts\"\r\n          :key=\"item.id\"\r\n          class=\"product-grid-item\"\r\n        >\r\n          <v-card\r\n            elevation=\"0\"\r\n            class=\"product-card\"\r\n            :class=\"[gridSettings.layout, 'rounded-lg']\"\r\n            @click=\"handleProductSelect(item)\"\r\n          >\r\n            <template v-if=\"gridSettings.layout !== 'list'\">\r\n              <v-img\r\n                :src=\"getImageUrl(item)\"\r\n                :height=\"getImageHeight\"\r\n                cover\r\n                class=\"bg-grey-lighten-2\"\r\n              >\r\n                <template v-slot:placeholder>\r\n                  <div class=\"d-flex align-center justify-center fill-height\">\r\n                    <v-progress-circular\r\n                      color=\"grey-lighten-4\"\r\n                      indeterminate\r\n                      size=\"20\"\r\n                    />\r\n                  </div>\r\n                </template>\r\n              </v-img>\r\n                \r\n              <div class=\"product-info\">\r\n                <div class=\"product-title px-3 pt-3\">{{ item.name }}</div>\r\n                <div class=\"d-flex align-center justify-space-between px-3 pb-3\">\r\n                  <span class=\"text-primary price-text\">{{ formatPrice(item.sale_price || item.price) }}</span>\r\n                  <v-btn\r\n                    density=\"comfortable\"\r\n                    variant=\"tonal\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    icon=\"mdi-plus\"\r\n                    class=\"add-btn\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </template>\r\n\r\n            <template v-else>\r\n              <div class=\"d-flex align-center pa-3\">\r\n                <div class=\"flex-grow-1\">\r\n                  <div class=\"product-title mb-1\">{{ item.name }}</div>\r\n                  <div class=\"text-primary price-text\">{{ formatPrice(item.sale_price || item.price) }}</div>\r\n                </div>\r\n                <v-btn\r\n                  density=\"comfortable\"\r\n                  variant=\"tonal\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  icon=\"mdi-plus\"\r\n                  class=\"add-btn ms-2\"\r\n                />\r\n              </div>\r\n            </template>\r\n          </v-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Pagination -->\r\n    <div v-if=\"props.gridSettings.rows !== -1\" class=\"pagination-wrapper\">\r\n      <v-pagination\r\n        v-model=\"currentPage\"\r\n        :length=\"totalPages\"\r\n        :total-visible=\"7\"\r\n        density=\"compact\"\r\n        @update:model-value=\"handlePageChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from 'vue'\r\nimport { logger } from '@/utils/logger'\r\nimport { PriceUtils } from '@/utils/price'\r\n\r\nconst props = defineProps({\r\n  products: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  gridSettings: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['select'])\r\n\r\n// Pagination state\r\nconst currentPage = ref(1)\r\nconst itemsPerPage = computed(() => {\r\n  if (props.gridSettings.rows === -1) return props.products.length\r\n  return props.gridSettings.rows * props.gridSettings.columns\r\n})\r\n\r\n// Computed properties for grid display\r\nconst displayedProducts = computed(() => {\r\n  const start = (currentPage.value - 1) * itemsPerPage.value\r\n  const end = start + itemsPerPage.value\r\n  return props.products.slice(start, end)\r\n})\r\n\r\nconst totalPages = computed(() => {\r\n  if (props.gridSettings.rows === -1) return 1\r\n  return Math.ceil(props.products.length / itemsPerPage.value)\r\n})\r\n\r\n// Reset pagination when products change\r\nwatch(() => props.products, () => {\r\n  currentPage.value = 1\r\n}, { immediate: true })\r\n\r\n// Event handlers\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page\r\n  logger.debug('ProductGrid - Page changed:', { page, totalItems: props.products.length })\r\n}\r\n\r\nconst handleProductSelect = (item) => {\r\n  logger.debug('ProductGrid - Product selected:', { \r\n    id: item.id, \r\n    name: item.name,\r\n    price: item.price \r\n  })\r\n  emit('select', item)\r\n}\r\n\r\nconst formatPrice = (price) => PriceUtils.format(price)\r\n\r\nconst getImageUrl = (item) => {\r\n  return item.image_url || '/placeholder-product.png'\r\n}\r\n\r\nconst getImageHeight = computed(() => {\r\n  switch (props.gridSettings.layout) {\r\n    case 'compact':\r\n      return 120\r\n    case 'comfortable':\r\n      return 160\r\n    default:\r\n      return 140\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.product-grid-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100% !important;\r\n  min-height: 100% !important;\r\n  width: 100% !important;\r\n  overflow: hidden;\r\n}\r\n\r\n.product-grid-scroll {\r\n  flex: 1;\r\n  min-height: 0;\r\n  overflow-y: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .product-grid-container {\r\n    height: calc(100% - 16px);\r\n  }\r\n  \r\n  .pagination-wrapper {\r\n    padding: 4px;\r\n  }\r\n}\r\n\r\n.product-grid-scroll {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  min-height: 0;\r\n  padding-bottom: 60px; /* Ensure space for footer */\r\n}\r\n\r\n.product-grid {\r\n  padding: 2px;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(v-bind('gridSettings.columns'), 1fr);\r\n  gap: 8px;\r\n  align-content: flex-start;\r\n}\r\n\r\n.product-grid-item {\r\n  padding: 2px;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.product-card {\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid rgba(0, 0, 0, 0.08);\r\n  background: white;\r\n}\r\n\r\n.product-card:hover {\r\n  border-color: rgba(var(--v-theme-primary), 0.5);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08) !important;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.product-card.comfortable {\r\n  height: v-bind(getCardHeight);\r\n}\r\n\r\n.product-card.compact {\r\n  height: v-bind(getCardHeight);\r\n}\r\n\r\n.product-card.list {\r\n  height: auto;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.product-card.list .product-title {\r\n  height: auto;\r\n  font-size: 0.95rem;\r\n  -webkit-line-clamp: 1;\r\n  line-clamp: 1;\r\n  display: -webkit-box;\r\n  display: box;\r\n  -webkit-box-orient: vertical;\r\n  box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.add-btn {\r\n  opacity: 0.9;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.product-card:hover .add-btn {\r\n  opacity: 1;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.add-btn:hover {\r\n  transform: scale(1.1) !important;\r\n}\r\n\r\n.product-info {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.product-title {\r\n  font-size: 0.85rem;\r\n  line-height: 1.2;\r\n  height: 2.4em;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  white-space: normal;\r\n}\r\n\r\n.comfortable .product-title {\r\n  font-size: 1rem;\r\n}\r\n\r\n.price-text {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.comfortable .price-text {\r\n  font-size: 1.4rem;\r\n}\r\n\r\n.pagination-wrapper {\r\n  padding: 8px;\r\n  background: white;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\r\n  position: sticky;\r\n  bottom: 0;\r\n  z-index: 1;\r\n}\r\n\r\n/* Mobile & Tablet Optimizations */\r\n@media (max-width: 960px) {\r\n  .product-card.comfortable {\r\n    height: 240px;\r\n  }\r\n  \r\n  .product-card.compact {\r\n    height: 180px;\r\n  }\r\n  \r\n  .comfortable .product-title {\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .comfortable .price-text {\r\n    font-size: 1.3rem;\r\n  }\r\n}\r\n</style>\r\n","<!-- src/views/pos/components/products/GridSettings.vue -->\r\n<template>\r\n  <div class=\"grid-settings pa-4\">\r\n    <v-card flat class=\"mb-6\">\r\n      <v-card-text class=\"text-body-1\">\r\n        Customize how products are displayed in your POS grid. Adjust the layout, number of items per row, and number of rows to optimize for your screen size and workflow.\r\n      </v-card-text>\r\n    </v-card>\r\n    <v-slide-x-transition>\r\n      <div class=\"d-flex align-center\">\r\n        <v-tooltip\r\n          location=\"top\"\r\n          text=\"Set how many product cards appear in each row of the grid\"\r\n        >\r\n          <template v-slot:activator=\"{ props }\">\r\n            <v-select\r\n              v-bind=\"props\"\r\n              v-model=\"localColumns\"\r\n              :items=\"columnOptions\"\r\n              label=\"Items per row\"\r\n              density=\"compact\"\r\n              hide-details\r\n              variant=\"outlined\"\r\n              class=\"grid-select elevation-1\"\r\n              @update:model-value=\"updateColumns\"\r\n              bg-color=\"white\"\r\n              :menu-props=\"{ maxHeight: 200 }\"\r\n            >\r\n              <template v-slot:prepend-inner>\r\n                <v-icon size=\"small\" color=\"primary\">mdi-view-grid-outline</v-icon>\r\n              </template>\r\n            </v-select>\r\n          </template>\r\n        </v-tooltip>\r\n\r\n        <v-tooltip\r\n          location=\"top\"\r\n          text=\"Set how many rows of products to display before pagination\"\r\n        >\r\n          <template v-slot:activator=\"{ props }\">\r\n            <v-select\r\n              v-bind=\"props\"\r\n              v-model=\"localRows\"\r\n              :items=\"rowOptions\"\r\n              label=\"Rows\"\r\n              density=\"compact\"\r\n              hide-details\r\n              variant=\"outlined\"\r\n              class=\"grid-select me-3 mb-2 elevation-1\"\r\n              @update:model-value=\"updateRows\"\r\n              bg-color=\"white\"\r\n              :menu-props=\"{ maxHeight: 200 }\"\r\n            >\r\n              <template v-slot:prepend-inner>\r\n                <v-icon size=\"small\" color=\"primary\">mdi-view-sequential</v-icon>\r\n              </template>\r\n            </v-select>\r\n          </template>\r\n        </v-tooltip>\r\n\r\n        <v-tooltip\r\n          location=\"top\"\r\n          text=\"Choose how products are displayed: Large (spacious), Compact (smaller cards), or List view\"\r\n        >\r\n          <template v-slot:activator=\"{ props }\">\r\n            <v-btn-toggle\r\n              v-bind=\"props\"\r\n              v-model=\"localLayout\"\r\n              mandatory\r\n              density=\"compact\"\r\n              rounded=\"lg\"\r\n              class=\"grid-toggle mb-2 elevation-1\"\r\n              @update:model-value=\"updateLayout\"\r\n            >\r\n              <v-btn\r\n                value=\"comfortable\"\r\n                size=\"small\"\r\n                prepend-icon=\"mdi-view-grid\"\r\n                class=\"grid-btn\"\r\n                :ripple=\"false\"\r\n              >\r\n                <span class=\"d-none d-sm-inline\">Large</span>\r\n                <v-icon class=\"d-sm-none\">mdi-view-grid</v-icon>\r\n              </v-btn>\r\n              <v-btn\r\n                value=\"compact\"\r\n                size=\"small\"\r\n                prepend-icon=\"mdi-view-grid-compact\"\r\n                class=\"grid-btn\"\r\n                :ripple=\"false\"\r\n              >\r\n                <span class=\"d-none d-sm-inline\">Compact</span>\r\n                <v-icon class=\"d-sm-none\">mdi-view-grid-compact</v-icon>\r\n              </v-btn>\r\n              <v-btn\r\n                value=\"list\"\r\n                size=\"small\"\r\n                prepend-icon=\"mdi-view-list\"\r\n                class=\"grid-btn\"\r\n                :ripple=\"false\"\r\n              >\r\n                <span class=\"d-none d-sm-inline\">List</span>\r\n                <v-icon class=\"d-sm-none\">mdi-view-list</v-icon>\r\n              </v-btn>\r\n            </v-btn-toggle>\r\n          </template>\r\n        </v-tooltip>\r\n\r\n        <v-tooltip\r\n          location=\"top\"\r\n          text=\"Reset to default settings\"\r\n        >\r\n          <template v-slot:activator=\"{ props }\">\r\n            <v-btn\r\n              v-bind=\"props\"\r\n              icon=\"mdi-refresh\"\r\n              variant=\"text\"\r\n              size=\"small\"\r\n              color=\"grey-darken-1\"\r\n              class=\"ms-1\"\r\n              @click=\"resetToDefaults\"\r\n            />\r\n          </template>\r\n        </v-tooltip>\r\n      </div>\r\n    </v-slide-x-transition>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from 'vue'\r\nimport { useDisplay } from 'vuetify'\r\n\r\nconst props = defineProps({\r\n  modelValue: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue'])\r\nconst { mobile } = useDisplay()\r\n\r\nconst defaultSettings = {\r\n  layout: 'comfortable',\r\n  columns: 4,\r\n  rows: -1\r\n}\r\n\r\nconst localLayout = ref(props.modelValue.layout)\r\nconst localColumns = ref(props.modelValue.columns)\r\nconst localRows = ref(props.modelValue.rows || defaultSettings.rows)\r\n\r\nconst columnOptions = [\r\n  { title: '2 Items', value: 2 },\r\n  { title: '4 Items', value: 4 },\r\n  { title: '6 Items', value: 6 },\r\n  { title: '8 Items', value: 8 }\r\n]\r\n\r\nconst rowOptions = [\r\n  { title: '2 Rows', value: 2 },\r\n  { title: '3 Rows', value: 3 },\r\n  { title: '4 Rows', value: 4 },\r\n  { title: 'Show All', value: -1 }\r\n]\r\n\r\nwatch(() => props.modelValue, (newValue) => {\r\n  localLayout.value = newValue.layout\r\n  localColumns.value = newValue.columns\r\n  localRows.value = newValue.rows || defaultSettings.rows\r\n}, { deep: true })\r\n\r\nconst updateLayout = (value) => {\r\n  const newSettings = {\r\n    ...props.modelValue,\r\n    layout: value,\r\n  }\r\n  \r\n  // Set default columns based on layout\r\n  if (value === 'list') {\r\n    newSettings.columns = 2\r\n  } else {\r\n    newSettings.columns = 4\r\n  }\r\n  \r\n  // Always show all rows by default\r\n  newSettings.rows = -1\r\n  \r\n  emit('update:modelValue', newSettings)\r\n}\r\n\r\nconst updateColumns = (value) => {\r\n  emit('update:modelValue', {\r\n    ...props.modelValue,\r\n    columns: value\r\n  })\r\n}\r\n\r\nconst updateRows = (value) => {\r\n  emit('update:modelValue', {\r\n    ...props.modelValue,\r\n    rows: value\r\n  })\r\n}\r\n\r\nconst resetToDefaults = () => {\r\n  emit('update:modelValue', { ...defaultSettings })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.grid-settings {\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  width: 100%;\r\n  max-height: 80vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.grid-select {\r\n  width: 140px;\r\n  transition: all 0.3s ease;\r\n  margin-right: 6px;\r\n}\r\n\r\n.grid-toggle {\r\n  height: 40px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.grid-btn {\r\n  min-width: 120px !important;\r\n  padding: 0 8px !important;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n:deep(.v-select .v-field__input) {\r\n  min-height: 40px;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n}\r\n\r\n:deep(.v-select .v-field) {\r\n  height: 40px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n:deep(.v-btn--size-small) {\r\n  letter-spacing: normal;\r\n}\r\n\r\n:deep(.v-select .v-field__input) {\r\n  font-size: 14px;\r\n}\r\n\r\n:deep(.v-select .v-field__label) {\r\n  font-size: 14px;\r\n  margin-top: -8px;\r\n}\r\n\r\n:deep(.v-field--variant-outlined .v-field__outline) {\r\n  --v-field-border-width: 1.5px;\r\n}\r\n\r\n:deep(.v-field--variant-outlined:hover .v-field__outline) {\r\n  --v-field-border-width: 2px;\r\n}\r\n\r\n:deep(.v-field--variant-outlined .v-field__outline__start) {\r\n  border-color: rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n:deep(.v-field--variant-outlined .v-field__outline__end) {\r\n  border-color: rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n:deep(.v-field.v-field--appended) {\r\n  --v-field-padding-end: 8px;\r\n}\r\n\r\n:deep(.v-select__selection) {\r\n  margin-top: 8px;\r\n}\r\n\r\n/* Mobile Optimizations */\r\n@media (max-width: 600px) {\r\n  .grid-settings {\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .grid-select {\r\n    width: 95px;\r\n    margin-right: 4px;\r\n  }\r\n\r\n  .grid-btn {\r\n    min-width: 40px !important;\r\n    padding: 0 4px !important;\r\n  }\r\n\r\n  :deep(.v-select .v-field__input) {\r\n    font-size: 13px;\r\n  }\r\n}\r\n\r\n/* Hover Effects */\r\n.grid-select:hover :deep(.v-field),\r\n.grid-btn:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n:deep(.v-btn-toggle .v-btn--active) {\r\n  transform: scale(1.02);\r\n}\r\n</style>\r\n","<!-- src/views/pos/components/PosProducts.vue -->\n<template>\n  <div class=\"pos-products-container\">\n    <!-- System Prerequisites Check -->\n    <v-alert\n      v-if=\"!posStore.systemReady\"\n      type=\"warning\"\n      class=\"ma-2\"\n    >\n      {{ posStore.setupMessage }}\n    </v-alert>\n\n    <template v-else>\n      <div class=\"products-header\">\n        <v-container fluid class=\"pa-4\">\n          <!-- Search and Grid Settings Row -->\n          <v-row no-gutters align=\"center\" class=\"mb-4 flex-column flex-sm-row\">\n            <v-col cols=\"12\" sm=\"7\" md=\"8\" lg=\"9\" class=\"pe-sm-4 mb-3 mb-sm-0\">\n              <div class=\"search-field\">\n                <product-search \n                  :loading=\"posStore.loading.products\"\n                  @search=\"handleSearch\"\n                  @quick-add=\"handleQuickAdd\" \n                />\n              </div>\n            </v-col>\n            <v-col cols=\"12\" sm=\"5\" md=\"4\" lg=\"3\" class=\"d-flex justify-end align-center\">\n              <v-btn\n                prepend-icon=\"mdi-cog\"\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"small\"\n                class=\"grid-settings-btn\"\n                @click=\"showGridSettings = true\"\n              >\n                Grid Settings\n              </v-btn>\n\n              <v-dialog\n                v-model=\"showGridSettings\"\n                max-width=\"800\"\n                transition=\"dialog-bottom-transition\"\n              >\n                <v-card>\n                  <v-card-title class=\"d-flex justify-space-between align-center pa-4 bg-primary text-white\">\n                    <span class=\"text-h6\">Grid Display Settings</span>\n                    <v-btn\n                      icon=\"mdi-close\"\n                      variant=\"text\"\n                      size=\"small\"\n                      @click=\"showGridSettings = false\"\n                    />\n                  </v-card-title>\n                  \n                  <v-card-text class=\"pa-6\">\n                    <grid-settings\n                      v-model=\"gridSettings\"\n                      @update:model-value=\"updateGridSettings\"\n                    />\n                  </v-card-text>\n                </v-card>\n              </v-dialog>\n            </v-col>\n          </v-row>\n\n          <!-- Categories Row -->\n          <v-row no-gutters>\n            <v-col cols=\"12\">\n              <category-tabs\n                :categories=\"posStore.categoriesForDisplay\"\n                @change=\"handleCategoryChange\"\n              />\n            </v-col>\n          </v-row>\n        </v-container>\n      </div>\n\n      <v-container fluid class=\"products-content pa-0\" style=\"max-width: none;\">\n        <div class=\"products-scroll-container\">\n          <!-- Loading State -->\n          <div v-if=\"posStore.loading.products\" class=\"products-loading-state\">\n            <v-progress-circular\n              indeterminate\n              color=\"primary\"\n              size=\"32\"\n            />\n          </div>\n\n          <!-- Products Grid -->\n          <product-grid\n            v-else-if=\"posStore.products.length > 0\"\n            :products=\"posStore.products\"\n            :grid-settings=\"gridSettings\"\n            @select=\"quickAdd\"\n            class=\"products-grid\"\n          />\n\n          <!-- Empty State -->\n          <v-alert\n            v-else\n            type=\"info\"\n            variant=\"tonal\"\n            class=\"mx-4 products-empty-state\"\n          >\n            <template v-slot:prepend>\n              <v-icon icon=\"mdi-information\" />\n            </template>\n            No items found\n          </v-alert>\n        </div>\n      </v-container>\n    </template>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\nconst showGridSettings = ref(false)\nimport { usePosStore } from '../../../stores/pos-store'\nimport { useCartStore } from '../../../stores/cart-store'\nimport { logger } from '../../../utils/logger'\n\nimport ProductSearch from './products/ProductSearch.vue'\nimport CategoryTabs from './products/CategoryTabs.vue'\nimport ProductGrid from './products/ProductGrid.vue'\nimport GridSettings from './products/GridSettings.vue'\n\nconst posStore = usePosStore()\nconst cartStore = useCartStore()\n\n// Grid Settings with localStorage persistence\nconst gridSettings = ref(\n  JSON.parse(localStorage.getItem('gridSettings')) || {\n    layout: 'comfortable',\n    columns: 4,\n    rows: 3\n  }\n)\n\n// Save grid settings to localStorage when they change\nconst updateGridSettings = (newSettings) => {\n  gridSettings.value = newSettings\n  localStorage.setItem('gridSettings', JSON.stringify(newSettings))\n  showGridSettings.value = false\n}\n\nwatch(gridSettings, (newSettings) => {\n  localStorage.setItem('gridSettings', JSON.stringify(newSettings))\n}, { deep: true })\n\nonMounted(async () => {\n  logger.startGroup('POS Products Component: Mount')\n  try {\n    await posStore.initialize()\n  } catch (err) {\n    logger.error('Error during initialization', err)\n  } finally {\n    logger.endGroup()\n  }\n})\n\nconst handleSearch = async (query) => {\n  logger.startGroup('POS Products: Search')\n  try {\n    posStore.searchQuery = query\n    await posStore.fetchProducts()\n  } catch (err) {\n    logger.error('Search failed', err)\n  } finally {\n    logger.endGroup()\n  }\n}\n\nconst handleCategoryChange = async (categoryId) => {\n  logger.startGroup('POS Products: Category Change')\n  try {\n    await posStore.setCategory(categoryId)\n  } catch (err) {\n    logger.error('Category change failed', err)\n  } finally {\n    logger.endGroup()\n  }\n}\n\nconst quickAdd = (product) => {\n  if (product.stock <= 0) return\n  \n  // Log the full product object for debugging\n  logger.debug('[PosProducts] Product selected:', {\n    id: product.id,\n    name: product.name,\n    price: product.price,\n    section: {\n      id: product.section_id,\n      type: product.section_type,\n      name: product.section_name\n    },\n    rawProduct: product // Log the raw product for debugging\n  })\n  \n  // Create a new product object with all necessary fields\n  const fullProduct = {\n    ...product,\n    section_id: product.section_id,\n    section_type: product.section_type || 'other',\n    section_name: product.section_name || 'Default'\n  }\n  \n  logger.info('[PosProducts] Adding product to cart:', { \n    id: fullProduct.id,\n    name: fullProduct.name,\n    price: fullProduct.price,\n    section: {\n      id: fullProduct.section_id,\n      type: fullProduct.section_type,\n      name: fullProduct.section_name\n    }\n  })\n  \n  cartStore.addItem(fullProduct, 1)\n}\n\nconst handleQuickAdd = async (searchTerm) => {\n  logger.startGroup('POS Products: Quick Add by Search')\n  try {\n    // First try to find by SKU\n    const productBySku = posStore.products.find(p => \n      p.sku?.toLowerCase() === searchTerm.toLowerCase()\n    )\n    \n    if (productBySku) {\n      quickAdd(productBySku)\n      return\n    }\n    \n    // If no SKU match, try name match\n    const productByName = posStore.products.find(p => \n      p.name.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n    \n    if (productByName) {\n      quickAdd(productByName)\n    } else {\n      // If product not in current list, try to fetch it directly by SKU\n      const response = await posApi.getItems({\n        sku: searchTerm,\n        is_pos: 1,\n        id: companyStore.selectedStore,\n        limit: 1\n      })\n      \n      if (response.items?.data?.[0]) {\n        quickAdd(response.items.data[0])\n      } else {\n        logger.warn('No matching product found for quick add', { searchTerm })\n      }\n    }\n  } catch (err) {\n    logger.error('Quick add failed', err)\n  } finally {\n    logger.endGroup()\n  }\n}\n</script>\n\n<style scoped>\n.pos-products-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: rgb(250, 250, 250);\n  overflow: hidden;\n  contain: strict;\n  position: relative;\n}\n\n.products-header {\n  background-color: white;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.03);\n  position: sticky;\n  top: 0;\n  z-index: 2;\n  flex-shrink: 0;\n  height: 140px;\n  contain: layout size paint;\n}\n\n.products-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow: hidden;\n}\n\n.products-scroll-container {\n  flex: 1;\n  overflow-y: auto;\n  min-height: 200px;\n}\n\n.products-loading-state {\n  position: absolute;\n  top: 140px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(250, 250, 250);\n  z-index: 1;\n}\n\n.products-grid {\n  width: 100%;\n  min-height: calc(100vh - 204px);\n  height: calc(100vh - 204px);\n  contain: layout size style;\n  position: relative;\n  display: flex;\n  overflow-y: auto;\n  padding: 8px;\n}\n\n.products-empty-state {\n  height: calc(100vh - 204px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.search-field {\n  width: 100%;\n  max-width: 800px;\n}\n\n.grid-settings-btn {\n  min-width: 135px;\n}\n\n@media (max-width: 600px) {\n  .pos-products-container {\n    max-height: calc(100vh - 96px);\n    min-height: 300px;\n  }\n  \n  .products-header {\n    min-height: 120px;\n  }\n  \n  .products-loading-state,\n  .products-grid {\n    min-height: 300px;\n  }\n  \n  .products-header .v-container {\n    padding: 8px;\n  }\n  \n  .grid-settings-btn {\n    min-width: auto;\n    padding: 0 12px;\n  }\n}\n\n/* Tablet Optimizations */\n@media (max-width: 960px) {\n  .products-header {\n    padding: 8px 0;\n  }\n}\n\n/* Mobile Optimizations */\n@media (max-width: 600px) {\n  .products-header .v-container {\n    padding: 8px 12px;\n  }\n  \n  .search-field {\n    max-width: 100%;\n  }\n}\n</style>\n","import { ref } from 'vue'\r\nimport { usePosOperations } from '../../../services/api/pos-operations'\r\nimport { logger } from '../../../utils/logger'\r\n\r\nexport function usePayment() {\r\n  const loading = ref(false)\r\n  const paymentMethods = ref([])\r\n  const error = ref(null)\r\n  const settings = ref(null)\r\n  const posOperations = usePosOperations()\r\n\r\n  /**\r\n   * Fetch company settings\r\n   */\r\n  const fetchSettings = async () => {\r\n    try {\r\n      const response = await posOperations.getCompanySettings()\r\n      settings.value = response\r\n      return response\r\n    } catch (err) {\r\n      error.value = err.message\r\n      logger.error('Failed to fetch company settings:', err)\r\n      throw err\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch available payment methods for POS\r\n   */\r\n  const fetchPaymentMethods = async () => {\r\n    loading.value = true\r\n    error.value = null\r\n    \r\n    try {\r\n      const response = await posOperations.getPaymentMethods()\r\n      if (response.success && response.data) {\r\n        paymentMethods.value = response.data\r\n      } else {\r\n        throw new Error('Failed to fetch payment methods')\r\n      }\r\n      return response.data\r\n    } catch (err) {\r\n      error.value = err.message\r\n      logger.error('Failed to fetch payment methods:', err)\r\n      throw err\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a payment for an invoice\r\n   * @param {Object} invoice - The invoice object\r\n   * @param {Array} payments - Array of payment method objects with amounts in backend format (431 for $4.31)\r\n   */\r\n  \r\n  const createPayment = async (invoice, payments) => {\r\n    console.log('Creating payment for invoice:', invoice.invoice.due_amount)\r\n    loading.value = true\r\n    error.value = null\r\n\r\n    try {\r\n      // Ensure we have settings\r\n      if (!settings.value) {\r\n        await fetchSettings()\r\n      }\r\n\r\n      // Get next payment number\r\n      const nextNumberResponse = await posOperations.getNextNumber('payment')\r\n      if (!nextNumberResponse?.nextNumber || !nextNumberResponse?.prefix) {\r\n        throw new Error('Failed to get next payment number')\r\n      }\r\n\r\n      // Validate payments\r\n      for (const payment of payments) {\r\n        // Validate cash payments have received amount\r\n        const method = paymentMethods.value.find(m => m.id === payment.method_id)\r\n        if (method?.only_cash === 1 && !payment.received) {\r\n          throw new Error(`Received amount is required for ${method.name}`)\r\n        }\r\n\r\n        // Calculate and validate fees if active\r\n        if (method?.IsPaymentFeeActive === 'YES') {\r\n          payment.fees = calculateFees(payment.method_id, payment.amount)\r\n        }\r\n      }\r\n\r\n      // Calculate total payment amount including fees\r\n      console.log('Payments:', payments)\r\n      const totalPayment = payments.reduce((sum, payment) => sum + payment.amount, 0)\r\n//      const totalFees = payments.reduce((sum, payment) => sum + (payment.fees || 0), 0)\r\n\r\n      // Validate full payment is made\r\n      console.log('Total payment:', totalPayment)\r\n      console.log('Invoice total:', invoice.total)\r\n      if (totalPayment !== invoice.invoice.due_amount) {\r\n        throw new Error('Full payment is required.')\r\n      }\r\n\r\n      // Format payment data according to API requirements\r\n      const paymentData = {\r\n        amount: totalPayment, // Amount already in backend format\r\n        invoice_id: invoice.invoice.id,\r\n        is_multiple: 1,\r\n        payment_date: new Date().toISOString().split('T')[0],\r\n        paymentNumAttribute: nextNumberResponse.nextNumber,\r\n        paymentPrefix: nextNumberResponse.prefix,\r\n        payment_number: `${nextNumberResponse.prefix}-${nextNumberResponse.nextNumber}`,\r\n        payment_methods: payments.map(payment => {\r\n          const method = getPaymentMethod(payment.method_id)\r\n          return {\r\n            id: payment.method_id,\r\n            name: method.name,\r\n            amount: payment.amount, // Amount already in backend format\r\n            received: payment.received || 0, // Amount already in backend format\r\n            returned: payment.returned || 0, // Amount already in backend format\r\n            valid: true\r\n          }\r\n        }),\r\n        status: { value: \"Approved\", text: \"Approved\" },\r\n        user_id: invoice.invoice.user_id,\r\n        notes: `Payment for invoice ${invoice.invoice.invoice_number}`\r\n      }\r\n\r\n      // Create payment using the correct endpoint\r\n      const response = await posOperations.createPayment(paymentData)\r\n      \r\n      if (!response?.success) {\r\n        throw new Error('Failed to create payment')\r\n      }\r\n\r\n      return response.payment\r\n    } catch (err) {\r\n      error.value = err.message\r\n      logger.error('Failed to create payment:', err)\r\n      throw err\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if a payment method is cash only\r\n   * @param {number} methodId - Payment method ID\r\n   * @returns {boolean}\r\n   */\r\n  const isCashOnly = (methodId) => {\r\n    const method = paymentMethods.value.find(m => m.id === methodId)\r\n    return method?.only_cash === 1\r\n  }\r\n\r\n  /**\r\n   * Get available denominations for a payment method\r\n   * @param {number} methodId - Payment method ID\r\n   * @returns {Array}\r\n   */\r\n  const getDenominations = (methodId) => {\r\n    const method = paymentMethods.value.find(m => m.id === methodId)\r\n    return method?.pos_money || []\r\n  }\r\n\r\n  /**\r\n   * Calculate fees for a payment method\r\n   * @param {number} methodId - Payment method ID\r\n   * @param {number} amount - Payment amount in backend format (431 for $4.31)\r\n   * @returns {number} Fee amount in backend format\r\n   */\r\n  const calculateFees = (methodId, amount) => {\r\n    const method = paymentMethods.value.find(m => m.id === methodId)\r\n    if (!method?.registrationdatafees) return 0\r\n\r\n    const fees = method.registrationdatafees\r\n    let totalFee = 0\r\n\r\n    if (fees.type === 'FIXED') {\r\n      totalFee = Math.round(fees.value * 100)\r\n    } else if (fees.type === 'PERCENTAGE') {\r\n      totalFee = Math.round((amount * fees.value) / 100)\r\n    } else if (fees.type === 'FIXED_PLUS_PERCENTAGE') {\r\n      const fixedFee = Math.round(fees.value.fixed * 100)\r\n      const percentageFee = Math.round((amount * fees.value.percentage) / 100)\r\n      totalFee = fixedFee + percentageFee\r\n    }\r\n\r\n    return totalFee\r\n  }\r\n\r\n  /**\r\n   * Get payment method details\r\n   * @param {number} methodId - Payment method ID\r\n   * @returns {Object|null}\r\n   */\r\n  const getPaymentMethod = (methodId) => {\r\n    return paymentMethods.value.find(m => m.id === methodId)\r\n  }\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    paymentMethods,\r\n    settings,\r\n    fetchSettings,\r\n    fetchPaymentMethods,\r\n    createPayment,\r\n    getDenominations,\r\n    calculateFees,\r\n    getPaymentMethod,\r\n    isCashOnly\r\n  }\r\n}\r\n","import { ref, computed } from 'vue'\r\nimport { usePosOperations } from '../../../services/api/pos-operations'\r\nimport { usePosStore } from '../../../stores/pos-store'\r\nimport { useCompanyStore } from '../../../stores/company'\r\nimport { storeToRefs } from 'pinia'\r\nimport { logger } from '../../../utils/logger'\r\nimport { PaidStatus } from '../../../types/order'\r\n\r\nexport function useTableManagement() {\r\n  const loading = ref(false)\r\n  const error = ref(null)\r\n  const posOperations = usePosOperations()\r\n  const posStore = usePosStore()\r\n  const companyStore = useCompanyStore()\r\n  const { holdInvoices } = storeToRefs(posStore)\r\n  const { selectedCashier, currentCashRegister } = storeToRefs(companyStore)\r\n\r\n  /**\r\n   * Find the hold invoice for a specific table\r\n   * @param {number} tableId - Table ID to find invoice for\r\n   * @returns {Object|null} - Hold invoice or null if not found\r\n   */\r\n  const findHoldInvoiceForTable = (tableId) => {\r\n    if (!holdInvoices.value?.length) return null\r\n\r\n    return holdInvoices.value.find(invoice => {\r\n      if (invoice.paid_status === PaidStatus.UNPAID) {\r\n        return (\r\n          invoice.tables_selected?.some(table => table.table_id === tableId) ||\r\n          invoice.hold_tables?.some(table => table.table_id === tableId)\r\n        )\r\n      }\r\n      return false\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Get table information from hold invoices\r\n   * @param {number} tableId - Table ID to check\r\n   * @returns {Object|null} - Table information or null if not found\r\n   */\r\n  const getTableInfoFromHoldInvoices = (tableId) => {\r\n    const invoice = findHoldInvoiceForTable(tableId)\r\n    if (!invoice) return null\r\n\r\n    // Get table info\r\n    const tableInfo = invoice.tables_selected?.find(table => table.table_id === tableId) ||\r\n                     invoice.hold_tables?.find(table => table.table_id === tableId)\r\n\r\n    logger.info(`Table ${tableId} info:`, { tableInfo })\r\n\r\n    return {\r\n      quantity: tableInfo?.quantity || 0,\r\n      invoiceId: invoice.id\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get tables for the current cash register\r\n   */\r\n  const getTables = async () => {\r\n    loading.value = true\r\n    error.value = null\r\n\r\n    try {\r\n      // First check if we have a selected cashier\r\n      const cashRegisterId = selectedCashier.value || localStorage.getItem('selectedCashier')\r\n      \r\n      if (!cashRegisterId) {\r\n        throw new Error('No cashier selected')\r\n      }\r\n\r\n      // If the cashier isn't in the store but is in localStorage, set it\r\n      if (!selectedCashier.value && cashRegisterId) {\r\n        await companyStore.setSelectedCashier(Number(cashRegisterId))\r\n      }\r\n\r\n      const response = await posOperations.getTables(cashRegisterId)\r\n      if (!response.success) {\r\n        throw new Error('Failed to fetch tables')\r\n      }\r\n\r\n      // Map tables with their occupancy status and current information\r\n      const tables = response.data.map(table => {\r\n        const isOccupied = isTableOccupied(table.id)\r\n        const tableInfo = isOccupied ? getTableInfoFromHoldInvoices(table.id) : null\r\n\r\n        return {\r\n          ...table,\r\n          is_occupied: isOccupied,\r\n          quantity: tableInfo ? tableInfo.quantity : 0,\r\n          invoiceId: tableInfo ? tableInfo.invoiceId : null\r\n        }\r\n      })\r\n\r\n      return tables\r\n    } catch (err) {\r\n      error.value = err.message\r\n      logger.error('Failed to get tables:', err)\r\n      throw err\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if a table is occupied by checking unpaid hold invoices\r\n   * @param {number} tableId - Table ID to check\r\n   * @returns {boolean} - True if table is occupied\r\n   */\r\n  const isTableOccupied = (tableId) => {\r\n    if (!holdInvoices.value?.length) return false\r\n\r\n    // Check if any unpaid hold invoice is using this table\r\n    return holdInvoices.value.some(invoice => {\r\n      // Check if the invoice has tables_selected and is unpaid\r\n      if (invoice.paid_status === PaidStatus.UNPAID) {\r\n        // First check tables_selected array\r\n        if (invoice.tables_selected?.length > 0) {\r\n          const tableFound = invoice.tables_selected.some(table => \r\n            table.table_id === tableId\r\n          )\r\n          if (tableFound) return true\r\n        }\r\n        \r\n        // Then check hold_tables array\r\n        if (invoice.hold_tables?.length > 0) {\r\n          return invoice.hold_tables.some(holdTable => \r\n            holdTable.table_id === tableId\r\n          )\r\n        }\r\n      }\r\n      return false\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Set table occupancy status in hold invoice\r\n   * @param {number} tableId - Table ID to update\r\n   * @param {boolean} occupied - Whether the table is occupied\r\n   */\r\n  const setTableOccupancy = (tableId, occupied) => {\r\n    if (!holdInvoices.value?.length) return\r\n\r\n    holdInvoices.value.forEach(invoice => {\r\n      // Update tables_selected array\r\n      if (invoice.tables_selected?.length > 0) {\r\n        invoice.tables_selected.forEach(table => {\r\n          if (table.table_id === tableId) {\r\n            table.in_use = occupied ? 1 : 0\r\n          }\r\n        })\r\n      }\r\n\r\n      // Update hold_tables array\r\n      if (invoice.hold_tables?.length > 0) {\r\n        invoice.hold_tables.forEach(holdTable => {\r\n          if (holdTable.table_id === tableId) {\r\n            holdTable.in_use = occupied ? 1 : 0\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Update table status after payment by refreshing hold invoices\r\n   * @param {Array} tables - Array of table IDs that were used in the paid order\r\n   */\r\n  const releaseTablesAfterPayment = async (tables) => {\r\n    if (!tables || !tables.length) return\r\n\r\n    loading.value = true\r\n    error.value = null\r\n\r\n    try {\r\n      logger.info('Releasing tables after payment:', tables)\r\n      \r\n      // Update in_use status for each table\r\n      tables.forEach(table => {\r\n        setTableOccupancy(table.table_id || table.id, false)\r\n      })\r\n\r\n      // Refresh hold invoices to update table status\r\n      await posStore.fetchHoldInvoices()\r\n\r\n      // Verify tables were released\r\n      const stillOccupied = tables.filter(table => \r\n        isTableOccupied(table.table_id || table.id)\r\n      )\r\n      if (stillOccupied.length > 0) {\r\n        logger.warn('Some tables still appear occupied:', stillOccupied)\r\n      }\r\n\r\n      logger.info('Tables released successfully')\r\n    } catch (err) {\r\n      error.value = err.message\r\n      logger.error('Failed to release tables:', err)\r\n      throw err\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getTables,\r\n    isTableOccupied,\r\n    setTableOccupancy,\r\n    releaseTablesAfterPayment,\r\n    selectedCashier,\r\n    currentCashRegister\r\n  }\r\n}\r\n","import { OrderType } from '@/types/enums'\r\n\r\n// Format date for API (YYYY-MM-DD)\r\nexport const formatApiDate = (date) => {\r\n  return date.toISOString().split('T')[0]\r\n}\r\n\r\n// Format date for display\r\nexport const formatDate = (date) => {\r\n  return new Date(date).toLocaleDateString()\r\n}\r\n\r\n// Format currency\r\nexport const formatCurrency = (amount) => PriceUtils.format(amount)\r\n\r\nimport { PriceUtils } from '@/utils/price'\r\n\r\n// Convert decimal to cents (biginteger)\r\nexport const toCents = (amount) => PriceUtils.toCents(amount)\r\n\r\n// Convert cents to dollars\r\nexport const toDollars = (amount) => Number(PriceUtils.toDollars(amount))\r\n\r\n// Get order type from invoice\r\nexport const getOrderType = (invoice) => {\r\n  // Use the type field directly\r\n  if (invoice.type && Object.values(OrderType).includes(invoice.type)) {\r\n    return invoice.type\r\n  }\r\n  return OrderType.DINE_IN // Default to DINE IN if no type is set\r\n}\r\n\r\n// Get color for order type chip\r\nexport const getOrderTypeColor = (type) => {\r\n  const colors = {\r\n    [OrderType.DINE_IN]: 'primary',\r\n    [OrderType.TO_GO]: 'success',\r\n    [OrderType.DELIVERY]: 'warning',\r\n    [OrderType.PICKUP]: 'info'\r\n  }\r\n  return colors[type] || 'grey'\r\n}\r\n","import { ref, computed, onMounted } from 'vue'\r\nimport { usePosStore } from '../../../../../stores/pos-store'\r\nimport { useCartStore } from '../../../../../stores/cart-store'\r\nimport { storeToRefs } from 'pinia'\r\nimport { logger } from '../../../../../utils/logger'\r\nimport { OrderType, PaidStatus } from '../../../../../types/order'\r\nimport { usePayment } from '../../../composables/usePayment'\r\nimport { useTableManagement } from '../../../composables/useTableManagement'\r\nimport { \r\n  formatDate, \r\n  formatCurrency, \r\n  getOrderType, \r\n  getOrderTypeColor \r\n} from '../utils/formatters'\r\nimport { parseOrderNotes } from '../../../../../stores/cart/helpers'\r\nimport { PriceUtils } from '../../../../../utils/price'\r\n\r\nconst HISTORY_STORAGE_KEY = 'core_pos_order_history'\r\n\r\nexport function useHeldOrders() {\r\n  const posStore = usePosStore()\r\n  const cartStore = useCartStore()\r\n  const { holdInvoices, holdInvoiceSettings } = storeToRefs(posStore)\r\n  const { fetchPaymentMethods } = usePayment()\r\n  const { releaseTablesAfterPayment } = useTableManagement()\r\n\r\n  // State\r\n  const loading = ref(false)\r\n  const loadingOrder = ref(null)\r\n  const deletingOrder = ref(null)\r\n  const convertingOrder = ref(null)\r\n  const search = ref('')\r\n  const selectedType = ref('ALL')\r\n  const selectedStatus = ref('ALL')\r\n  const showPaymentDialog = ref(false)\r\n  const currentInvoice = ref(null)\r\n  const originalHoldInvoice = ref(null)\r\n  const orderHistory = ref([])\r\n\r\n  // Initialize order history from localStorage\r\n  const initializeOrderHistory = () => {\r\n    try {\r\n      const storedHistory = localStorage.getItem(HISTORY_STORAGE_KEY)\r\n      if (storedHistory) {\r\n        const parsedHistory = JSON.parse(storedHistory)\r\n        if (Array.isArray(parsedHistory)) {\r\n          orderHistory.value = parsedHistory\r\n          logger.info('Initialized order history from localStorage:', {\r\n            count: orderHistory.value.length,\r\n            firstItem: orderHistory.value[0]?.id\r\n          })\r\n        } else {\r\n          logger.warn('Stored history is not an array, initializing empty array')\r\n          orderHistory.value = []\r\n        }\r\n      } else {\r\n        orderHistory.value = []\r\n        logger.info('No stored history found, initialized empty array')\r\n      }\r\n    } catch (error) {\r\n      logger.error('Failed to initialize order history from localStorage:', error)\r\n      orderHistory.value = []\r\n    }\r\n  }\r\n\r\n  // Clear order history\r\n  const clearOrderHistory = () => {\r\n    try {\r\n      orderHistory.value = []\r\n      localStorage.removeItem(HISTORY_STORAGE_KEY)\r\n      logger.info('Order history cleared successfully')\r\n      window.toastr?.['success']('Order history cleared successfully')\r\n      return true\r\n    } catch (error) {\r\n      logger.error('Failed to clear order history:', error)\r\n      window.toastr?.['error']('Failed to clear order history')\r\n      return false\r\n    }\r\n  }\r\n\r\n  // Persist order history to localStorage\r\n  const persistOrderHistory = () => {\r\n    try {\r\n      localStorage.setItem(HISTORY_STORAGE_KEY, JSON.stringify(orderHistory.value))\r\n      logger.debug('Persisted order history to localStorage')\r\n    } catch (error) {\r\n      logger.error('Failed to persist order history to localStorage:', error)\r\n    }\r\n  }\r\n\r\n  // Order type options for filter\r\n  const orderTypes = [\r\n    { title: 'All Orders', value: 'ALL' },\r\n    { title: 'Dine In', value: OrderType.DINE_IN },\r\n    { title: 'To Go', value: OrderType.TO_GO },\r\n    { title: 'Delivery', value: OrderType.DELIVERY },\r\n    { title: 'Pickup', value: OrderType.PICKUP }\r\n  ]\r\n\r\n  // Move paid order to history\r\n  const moveToHistory = async (invoice) => {\r\n    try {\r\n      // Create a copy of the invoice without table information\r\n      const historicalOrder = {\r\n        ...invoice,\r\n        tables_selected: [],\r\n        hold_tables: [],\r\n        paid_status: PaidStatus.PAID,\r\n        paid_at: new Date().toISOString()\r\n      }\r\n\r\n      // Add to history\r\n      orderHistory.value.unshift(historicalOrder)\r\n      persistOrderHistory() // Persist after adding to history\r\n\r\n      // Delete the original order\r\n      await deleteOrder(invoice.id)\r\n\r\n      // Release the tables\r\n      if (invoice.tables_selected?.length) {\r\n        await releaseTablesAfterPayment(invoice.tables_selected)\r\n      }\r\n      if (invoice.hold_tables?.length) {\r\n        await releaseTablesAfterPayment(invoice.hold_tables)\r\n      }\r\n\r\n      return true\r\n    } catch (error) {\r\n      logger.error('Failed to move order to history:', error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  // Handle payment completion\r\n  const handlePaymentComplete = async (paymentResult) => {\r\n    console.log('Payment completion handler called with result:', paymentResult)\r\n    \r\n    try {\r\n      logger.info('Payment completed successfully:', paymentResult)\r\n      \r\n      if (!originalHoldInvoice.value?.id) {\r\n        throw new Error('Original hold invoice not found')\r\n      }\r\n\r\n      // Create history entry with payment details\r\n      const historyEntry = {\r\n        ...originalHoldInvoice.value,\r\n        paid_status: 'PAID',\r\n        paid_at: new Date().toISOString(),\r\n        payment_details: paymentResult,\r\n        tables_selected: originalHoldInvoice.value.tables_selected || [],\r\n        hold_tables: originalHoldInvoice.value.hold_tables || []\r\n      }\r\n\r\n      // Add to history\r\n      orderHistory.value.unshift(historyEntry)\r\n      \r\n      // Persist to localStorage\r\n      try {\r\n        localStorage.setItem(HISTORY_STORAGE_KEY, JSON.stringify(orderHistory.value))\r\n        logger.debug('Order history updated in localStorage')\r\n      } catch (storageError) {\r\n        logger.error('Failed to persist order history:', storageError)\r\n      }\r\n\r\n      // Delete the original order\r\n      const deleteSuccess = await deleteOrder(originalHoldInvoice.value.id)\r\n      if (!deleteSuccess) {\r\n        throw new Error('Failed to delete original order')\r\n      }\r\n\r\n      // Release any held tables\r\n      if (historyEntry.tables_selected?.length) {\r\n        await releaseTablesAfterPayment(historyEntry.tables_selected)\r\n      }\r\n      if (historyEntry.hold_tables?.length) {\r\n        await releaseTablesAfterPayment(historyEntry.hold_tables)\r\n      }\r\n      \r\n      // Show success message\r\n      window.toastr?.['success']('Payment processed successfully')\r\n      \r\n      // Reset state\r\n      currentInvoice.value = null\r\n      originalHoldInvoice.value = null\r\n      showPaymentDialog.value = false\r\n      \r\n      return true\r\n    } catch (error) {\r\n      console.error('Failed to complete payment process:', error)\r\n      logger.error('Failed to complete payment process:', error)\r\n      window.toastr?.['error']('Failed to complete payment process')\r\n      return false\r\n    }\r\n  }\r\n\r\n  // Convert to invoice\r\n  const convertToInvoice = async (invoice) => {\r\n    try {\r\n      if (!invoice?.id) {\r\n        throw new Error('Invalid invoice: missing ID')\r\n      }\r\n\r\n      convertingOrder.value = invoice.id\r\n      originalHoldInvoice.value = invoice // Store the original hold invoice\r\n      \r\n      // Get payment methods before showing dialog\r\n      console.log('Fetching payment methods')\r\n      await fetchPaymentMethods()\r\n\r\n      // Show payment dialog directly with held order data\r\n      console.log('Setting up payment dialog')\r\n      currentInvoice.value = {\r\n        invoice: invoice,\r\n        invoicePrefix: invoice.invoice_prefix || 'INV',\r\n        nextInvoiceNumber: invoice.id\r\n      }\r\n      showPaymentDialog.value = true\r\n      \r\n      return { success: true }\r\n    } catch (error) {\r\n      console.error('Failed to prepare for payment:', error)\r\n      logger.error('Failed to prepare for payment:', error)\r\n      window.toastr?.['error'](error.message || 'Failed to prepare for payment')\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      }\r\n    } finally {\r\n      convertingOrder.value = null\r\n    }\r\n  }\r\n\r\n  // Load order\r\n  const validateInvoiceData = (invoice) => {\r\n    if (!invoice?.id) {\r\n      throw new Error('Invalid invoice: missing ID')\r\n    }\r\n    if (!Array.isArray(invoice.hold_items)) {\r\n      throw new Error('Invalid invoice: missing items array')\r\n    }\r\n    if (!invoice.type) {\r\n      throw new Error('Invalid invoice: missing order type')\r\n    }\r\n    return true\r\n  }\r\n\r\n  const validateItemData = (item) => {\r\n    if (!item.item_id || !item.name) {\r\n      throw new Error(`Invalid item data: missing required fields for item ${item.name || 'unknown'}`)\r\n    }\r\n    if (typeof item.price === 'undefined' || item.price === null) {\r\n      throw new Error(`Invalid item data: missing price for item ${item.name}`)\r\n    }\r\n    if (!item.quantity) {\r\n      throw new Error(`Invalid item data: missing quantity for item ${item.name}`)\r\n    }\r\n    return true\r\n  }\r\n\r\n  const processCartProperties = async (invoice) => {\r\n    logger.startGroup('Processing cart properties')\r\n    try {\r\n      // Set discount\r\n      if (invoice.discount_type && invoice.discount) {\r\n        logger.debug('Setting discount:', {\r\n          type: invoice.discount_type,\r\n          amount: invoice.discount\r\n        })\r\n        await cartStore.setDiscount(\r\n          invoice.discount_type,\r\n          Number(invoice.discount)\r\n        )\r\n      }\r\n      \r\n      // Set tip\r\n      if (invoice.tip_type && invoice.tip) {\r\n        logger.debug('Setting tip:', {\r\n          type: invoice.tip_type,\r\n          amount: invoice.tip\r\n        })\r\n        await cartStore.setTip(\r\n          invoice.tip_type,\r\n          Number(invoice.tip)\r\n        )\r\n      }\r\n\r\n      // Set order type\r\n      logger.debug('Setting order type:', invoice.type)\r\n      await cartStore.setType(invoice.type)\r\n\r\n      // Process notes\r\n      if (invoice.notes) {\r\n        logger.debug('Processing order notes')\r\n        try {\r\n          const notesObj = JSON.parse(invoice.notes)\r\n          const customerNotes = parseOrderNotes(invoice.notes)\r\n          const newNotes = {\r\n            orderInfo: {\r\n              customer: notesObj.orderInfo?.customer || notesObj.customer || {}\r\n            },\r\n            customerNotes: customerNotes\r\n          }\r\n          await cartStore.setNotes(JSON.stringify(newNotes))\r\n        } catch (e) {\r\n          logger.warn('Failed to parse notes, using raw value:', e)\r\n          await cartStore.setNotes(invoice.notes)\r\n        }\r\n      }\r\n\r\n      // Set reference information\r\n      logger.debug('Setting reference information:', {\r\n        id: invoice.id,\r\n        description: invoice.description\r\n      })\r\n      \r\n      // Check if methods exist before calling\r\n      if (typeof cartStore.setHoldInvoiceId !== 'function') {\r\n        throw new Error('setHoldInvoiceId is not defined in cart store')\r\n      }\r\n      if (typeof cartStore.setHoldOrderDescription !== 'function') {\r\n        throw new Error('setHoldOrderDescription is not defined in cart store')\r\n      }\r\n\r\n      await cartStore.setHoldInvoiceId(invoice.id)\r\n      await cartStore.setHoldOrderDescription(invoice.description)\r\n      \r\n      logger.debug('Cart properties processed successfully')\r\n    } catch (error) {\r\n      logger.error('Failed to process cart properties:', error)\r\n      throw error\r\n    } finally {\r\n      logger.endGroup()\r\n    }\r\n  }\r\n\r\n  const loadOrder = async (invoice) => {\r\n    loadingOrder.value = invoice.id\r\n    logger.startGroup('Loading held order')\r\n\r\n    // Helper function to detect and normalize price\r\n    const normalizePriceFromBackend = (price) => {\r\n      // If price is a string, convert to number\r\n      const numPrice = Number(price)\r\n      \r\n      // Log the incoming price for debugging\r\n      logger.debug('Normalizing price:', {\r\n        original: price,\r\n        asNumber: numPrice,\r\n        hasDecimals: numPrice % 1 !== 0,\r\n        isLargeNumber: numPrice > 1000\r\n      })\r\n\r\n      // Handle different price formats:\r\n      // 1. Prices in cents without decimals (e.g., 2499 for $24.99)\r\n      // 2. Prices in dollars with decimals (e.g., 24.99)\r\n      // 3. Prices in cents with decimals (e.g., 24.99 meant to be $0.2499)\r\n      \r\n      if (Number.isNaN(numPrice)) {\r\n        logger.warn('Invalid price value:', price)\r\n        return 0\r\n      }\r\n\r\n      // Case 1: If price is a large number without decimals, assume it's in cents\r\n      // e.g., 2499 -> $24.99\r\n      if (numPrice > 100 && Number.isInteger(numPrice)) {\r\n        const normalized = numPrice / 100\r\n        logger.debug('Normalized large integer price:', {\r\n          original: numPrice,\r\n          normalized,\r\n          formatted: PriceUtils.format(normalized)\r\n        })\r\n        return normalized\r\n      }\r\n\r\n      // Case 2: If price already has decimals, it's likely in the correct format\r\n      // e.g., 24.99 -> $24.99\r\n      if (numPrice % 1 !== 0) {\r\n        logger.debug('Price already has decimals, keeping as is:', {\r\n          price: numPrice,\r\n          formatted: PriceUtils.format(numPrice)\r\n        })\r\n        return numPrice\r\n      }\r\n\r\n      // Case 3: Small integer prices likely don't need normalization\r\n      // e.g., 25 -> $25.00\r\n      logger.debug('Small integer price, keeping as is:', {\r\n        price: numPrice,\r\n        formatted: PriceUtils.format(numPrice)\r\n      })\r\n      return numPrice\r\n    }\r\n\r\n    try {\r\n      // Validate invoice structure\r\n      validateInvoiceData(invoice)\r\n      \r\n      logger.debug('Loading order details:', {\r\n        id: invoice.id,\r\n        description: invoice.description,\r\n        type: invoice.type,\r\n        itemCount: invoice.hold_items?.length\r\n      })\r\n\r\n      // Clear current cart\r\n      await cartStore.clearCart()\r\n      logger.debug('Cart cleared successfully')\r\n\r\n      // Process items\r\n      logger.debug(`Processing ${invoice.hold_items.length} items`)\r\n      for (const item of invoice.hold_items) {\r\n        validateItemData(item)\r\n\r\n        // Normalize the price from backend\r\n        const normalizedPrice = normalizePriceFromBackend(item.price)\r\n\r\n        logger.debug('Processing item price:', {\r\n          itemName: item.name,\r\n          originalPrice: item.price,\r\n          normalizedPrice,\r\n          formattedPrice: PriceUtils.format(normalizedPrice)\r\n        })\r\n\r\n        const product = {\r\n          id: item.item_id,\r\n          name: item.name,\r\n          description: item.description,\r\n          price: normalizedPrice,\r\n          unit_name: item.unit_name,\r\n          fromHeldOrder: true  // Mark item as coming from held order\r\n        }\r\n\r\n        logger.debug('Adding item to cart:', {\r\n          productId: product.id,\r\n          name: product.name,\r\n          quantity: item.quantity,\r\n          price: product.price,\r\n          formattedPrice: PriceUtils.format(product.price)\r\n        })\r\n\r\n        try {\r\n          await cartStore.addItem(product, Number(item.quantity))\r\n        } catch (error) {\r\n          throw new Error(`Failed to add item ${product.name} to cart: ${error.message}`)\r\n        }\r\n      }\r\n\r\n      // Process cart properties\r\n      await processCartProperties(invoice)\r\n      \r\n      logger.info('Order loaded successfully:', {\r\n        id: invoice.id,\r\n        description: invoice.description,\r\n        type: invoice.type,\r\n        itemCount: invoice.hold_items.length,\r\n        cartState: {\r\n          items: cartStore.items?.length,\r\n          total: cartStore.total,\r\n          holdInvoiceId: cartStore.holdInvoiceId\r\n        }\r\n      })\r\n      \r\n      return true\r\n    } catch (error) {\r\n      logger.error('Failed to load order:', {\r\n        error: error.message,\r\n        errorStack: error.stack,\r\n        invoice: {\r\n          id: invoice?.id,\r\n          type: invoice?.type,\r\n          itemCount: invoice?.hold_items?.length\r\n        },\r\n        cartStore: {\r\n          methods: Object.keys(cartStore),\r\n          state: {\r\n            items: cartStore.items?.length,\r\n            total: cartStore.total,\r\n            holdInvoiceId: cartStore.holdInvoiceId\r\n          }\r\n        }\r\n      })\r\n      window.toastr?.['error'](error.message || 'Failed to load order')\r\n      return false\r\n    } finally {\r\n      loadingOrder.value = null\r\n      logger.endGroup()\r\n    }\r\n  }\r\n\r\n  // Delete order\r\n  const deleteOrder = async (invoiceId) => {\r\n    try {\r\n      if (!invoiceId) {\r\n        throw new Error('Invalid invoice ID')\r\n      }\r\n\r\n      deletingOrder.value = invoiceId\r\n      logger.debug('Deleting hold invoice:', invoiceId)\r\n      \r\n      const response = await posStore.deleteHoldInvoice(invoiceId)\r\n      \r\n      if (!response.success) {\r\n        throw new Error(response.message || 'Failed to delete order')\r\n      }\r\n\r\n      window.toastr?.['success']('Order deleted successfully')\r\n      return true\r\n    } catch (error) {\r\n      logger.error('Failed to delete order:', error)\r\n      window.toastr?.['error'](error.message || 'Failed to delete order')\r\n      return false\r\n    } finally {\r\n      deletingOrder.value = null\r\n    }\r\n  }\r\n\r\n  // Fetch held orders\r\n  const fetchHoldInvoices = async () => {\r\n    try {\r\n      loading.value = true\r\n      await posStore.fetchHoldInvoices()\r\n    } catch (error) {\r\n      logger.error('Failed to fetch hold invoices:', error)\r\n      window.toastr?.['error']('Failed to fetch hold invoices')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  // Initialize on mount\r\n  onMounted(() => {\r\n    initializeOrderHistory()\r\n  })\r\n\r\n  return {\r\n    // State\r\n    loading,\r\n    loadingOrder,\r\n    deletingOrder,\r\n    convertingOrder,\r\n    search,\r\n    selectedType,\r\n    selectedStatus,\r\n    orderTypes,\r\n    holdInvoices,\r\n    orderHistory,\r\n    filteredInvoices: computed(() => holdInvoices.value),\r\n    showPaymentDialog,\r\n    currentInvoice,\r\n\r\n    // Formatters\r\n    getOrderType,\r\n    getOrderTypeColor,\r\n    formatDate,\r\n    formatCurrency,\r\n\r\n    // Actions\r\n    convertToInvoice,\r\n    loadOrder,\r\n    deleteOrder,\r\n    fetchHoldInvoices,\r\n    handlePaymentComplete,\r\n    clearOrderHistory\r\n  }\r\n}\r\n","import { ref, computed } from 'vue'\r\nimport { apiClient } from '../../../../../services/api/client'\r\nimport { handleApiError } from '../../../../../services/api/pos-operations/utils'\r\nimport { logger } from '../../../../../utils/logger'\r\n\r\nexport function useInvoices() {\r\n  const loading = ref(false)\r\n  const invoices = ref([])\r\n  const error = ref(null)\r\n  const pagination = ref({\r\n    total: 0,\r\n    currentPage: 1,\r\n    lastPage: 1\r\n  })\r\n\r\n  const fetchInvoices = async ({\r\n    customerId = '',\r\n    status = '',\r\n    fromDate = '',\r\n    toDate = '',\r\n    invoiceNumber = '',\r\n    customcode = '',\r\n    unit = '',\r\n    orderByField = 'invoice_number',\r\n    orderBy = 'desc',\r\n    limit = 'all',\r\n    page = 1\r\n  } = {}) => {\r\n    loading.value = true\r\n    error.value = null\r\n\r\n    try {\r\n      logger.debug('Fetching invoices with params:', {\r\n        customerId,\r\n        status,\r\n        fromDate,\r\n        toDate,\r\n        invoiceNumber,\r\n        customcode,\r\n        unit,\r\n        orderByField,\r\n        orderBy,\r\n        limit,\r\n        page\r\n      })\r\n\r\n      const response = await apiClient.get(`invoices`, {\r\n        params: {\r\n          is_invoice_pos: 1,\r\n          customer_id: customerId,\r\n          status,\r\n          from_date: fromDate,\r\n          to_date: toDate,\r\n          invoice_number: invoiceNumber,\r\n          customcode,\r\n          unit,\r\n          orderByField,\r\n          orderBy,\r\n          v2: true,\r\n          page\r\n        }\r\n      })\r\n      \r\n      logger.debug('Raw API response:', {\r\n        status: response?.status,\r\n        hasData: !!response?.data,\r\n        dataStructure: {\r\n          hasInvoices: !!response?.data?.invoices,\r\n          hasInvoicesData: !!response?.data?.invoices?.data,\r\n          invoicesDataType: typeof response?.data?.invoices?.data\r\n        }\r\n      })\r\n\r\n      // Extract invoices and pagination data from the response\r\n      const { data: invoiceData, total, current_page, last_page } = response?.data?.invoices || {}\r\n      \r\n      logger.debug('Extracted API response data:', {\r\n        total,\r\n        currentPage: current_page,\r\n        lastPage: last_page,\r\n        dataCount: invoiceData?.length,\r\n        sample: invoiceData?.[0] ? {\r\n          id: invoiceData[0].id,\r\n          invoice_number: invoiceData[0].invoice_number,\r\n          status: invoiceData[0].status,\r\n          paid_status: invoiceData[0].paid_status\r\n        } : null\r\n      })\r\n\r\n      // Update pagination info\r\n      pagination.value = {\r\n        total: total || 0,\r\n        currentPage: current_page || 1,\r\n        lastPage: last_page || 1\r\n      }\r\n\r\n      invoices.value = (invoiceData || []).map(invoice => ({\r\n        ...invoice,\r\n        // Ensure required fields exist\r\n        invoice_number: invoice.invoice_number || '-',\r\n        status: invoice.status || 'PENDING',\r\n        paid_status: invoice.paid_status || 'UNPAID',\r\n        total: Number(invoice.total || 0),\r\n        customer: invoice.customer || { name: 'Walk-in Customer' }\r\n      }))\r\n      \r\n      logger.info('Invoices fetched successfully:', {\r\n        total: invoices.value.length,\r\n        firstInvoice: invoices.value[0]?.id\r\n      })\r\n      return { success: true, data: invoices.value }\r\n    } catch (err) {\r\n      const errorResponse = handleApiError(err)\r\n      error.value = errorResponse.message\r\n      logger.error('Failed to fetch invoices:', {\r\n        error: errorResponse,\r\n        params: params\r\n      })\r\n      return { \r\n        success: false, \r\n        message: errorResponse.message || 'Failed to fetch invoices',\r\n        errors: errorResponse.errors || {}\r\n      }\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  return {\r\n    loading,\r\n    invoices,\r\n    error,\r\n    pagination,\r\n    fetchInvoices\r\n  }\r\n}\r\n","<!-- src/views/pos/components/held-orders/components/HeldOrdersTable.vue -->\r\n<template>\r\n  <div class=\"held-orders-table\">\r\n    <div class=\"filters-container\">\r\n      <div class=\"filters-row\">\r\n        <div class=\"search-field\">\r\n          <v-text-field\r\n            v-model=\"searchQuery\"\r\n            prepend-inner-icon=\"mdi-magnify\"\r\n            label=\"Search orders\"\r\n            variant=\"outlined\"\r\n            density=\"compact\"\r\n            hide-details\r\n            class=\"search-input\"\r\n          ></v-text-field>\r\n        </div>\r\n\r\n        <div class=\"filter-controls\">\r\n          <v-select\r\n            v-model=\"selectedFilter\"\r\n            :items=\"filterItems\"\r\n            label=\"Type\"\r\n            variant=\"outlined\"\r\n            density=\"compact\"\r\n            hide-details\r\n            class=\"filter-select\"\r\n            prepend-inner-icon=\"mdi-filter\"\r\n          ></v-select>\r\n\r\n          <v-select\r\n            v-model=\"selectedStatus\"\r\n            :items=\"statusItems\"\r\n            label=\"Status\"\r\n            variant=\"outlined\"\r\n            density=\"compact\"\r\n            hide-details\r\n            class=\"filter-select\"\r\n            prepend-inner-icon=\"mdi-check-circle-outline\"\r\n          ></v-select>\r\n\r\n          <v-select\r\n            v-model=\"selectedPaymentStatus\"\r\n            :items=\"paymentStatusItems\"\r\n            label=\"Payment\"\r\n            variant=\"outlined\"\r\n            density=\"compact\"\r\n            hide-details\r\n            class=\"filter-select\"\r\n            prepend-inner-icon=\"mdi-cash\"\r\n          ></v-select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"table-container\">\r\n      <v-table\r\n        fixed-header\r\n        class=\"orders-table\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th class=\"text-left order-type-col\">Order Type</th>\r\n            <th class=\"text-left description-col\">Description</th>\r\n            <th class=\"text-left created-col\">Created</th>\r\n            <th class=\"text-center items-col\">Items</th>\r\n            <th class=\"text-right total-col\">Total</th>\r\n            <th class=\"text-left status-col\">Status</th>\r\n            <th v-if=\"!hideActions\" class=\"text-center actions-col\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"invoice in invoices\" :key=\"invoice.id\">\r\n            <td>\r\n              <v-chip\r\n                :color=\"getOrderTypeColor(getOrderType(invoice))\"\r\n                size=\"small\"\r\n                class=\"order-type-chip\"\r\n                variant=\"flat\"\r\n              >\r\n                {{ getOrderType(invoice) }}\r\n              </v-chip>\r\n            </td>\r\n            <td class=\"text-truncate\" :style=\"{ maxWidth: $vuetify.display.mobile ? '150px' : '200px' }\">\r\n              <v-tooltip\r\n                :text=\"getTooltipText(invoice)\"\r\n                location=\"top\"\r\n                open-delay=\"300\"\r\n              >\r\n                <template v-slot:activator=\"{ props }\">\r\n                  <span v-bind=\"props\" class=\"cursor-help\">\r\n                    {{ invoice.description }}\r\n                    <v-icon\r\n                      v-if=\"hasNotes(invoice)\"\r\n                      size=\"x-small\"\r\n                      color=\"grey-darken-1\"\r\n                      class=\"ml-1\"\r\n                    >\r\n                      mdi-note-text-outline\r\n                    </v-icon>\r\n                  </span>\r\n                </template>\r\n              </v-tooltip>\r\n            </td>\r\n            <td>{{ formatDate(invoice.created_at) }}</td>\r\n            <td class=\"text-center\">{{ invoice.hold_items?.length || 0 }}</td>\r\n            <td class=\"text-right\">{{ formatCurrency(invoice.total / 100) }}</td>\r\n            <td>\r\n              <v-chip\r\n                :color=\"getStatusColor(invoice.paid_status)\"\r\n                size=\"small\"\r\n                variant=\"flat\"\r\n                class=\"status-chip\"\r\n              >\r\n                {{ invoice.paid_status || 'UNPAID' }}\r\n              </v-chip>\r\n            </td>\r\n            <td v-if=\"!hideActions\" class=\"text-center\">\r\n              <div class=\"actions-wrapper\">\r\n                <v-btn\r\n                  size=\"small\"\r\n                  color=\"info\"\r\n                  variant=\"flat\"\r\n                  @click.prevent=\"$emit('load', invoice)\"\r\n                  :loading=\"loadingOrder === invoice.id\"\r\n                  :disabled=\"convertingOrder === invoice.id || deletingOrder === invoice.id || invoice.paid_status === 'PAID'\"\r\n                >\r\n                  <v-icon size=\"small\" class=\"mr-1\">mdi-cart-arrow-down</v-icon>\r\n                  LOAD\r\n                </v-btn>\r\n                <v-btn\r\n                  size=\"small\"\r\n                  color=\"success\"\r\n                  variant=\"flat\"\r\n                  @click.prevent=\"$emit('convert', invoice)\"\r\n                  :loading=\"convertingOrder === invoice.id\"\r\n                  :disabled=\"loadingOrder === invoice.id || deletingOrder === invoice.id || invoice.paid_status === 'PAID'\"\r\n                >\r\n                  <v-icon size=\"small\" class=\"mr-1\">mdi-cash-register</v-icon>\r\n                  PAY\r\n                </v-btn>\r\n                <v-btn\r\n                  size=\"small\"\r\n                  color=\"error\"\r\n                  variant=\"flat\"\r\n                  @click=\"$emit('delete', invoice)\"\r\n                  :loading=\"deletingOrder === invoice.id\"\r\n                  :disabled=\"loadingOrder === invoice.id || convertingOrder === invoice.id || invoice.paid_status === 'PAID'\"\r\n                >\r\n                  <v-icon size=\"small\" class=\"mr-1\">mdi-delete</v-icon>\r\n                  DELETE\r\n                </v-btn>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </v-table>\r\n    </div>\r\n\r\n    <div v-if=\"showPagination\" class=\"pagination-wrapper\">\r\n      <v-pagination\r\n        :model-value=\"page\"\r\n        @update:model-value=\"$emit('update:page', $event)\"\r\n        :length=\"totalPages\"\r\n        :total-visible=\"7\"\r\n        rounded=\"circle\"\r\n      ></v-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from 'vue'\r\nimport { parseOrderNotes } from '../../../../../stores/cart/helpers'\r\n\r\nconst searchQuery = ref('')\r\n\r\nconst selectedFilter = ref('all')\r\nconst filterItems = [\r\n  { title: 'All', value: 'all' },\r\n  { title: 'Dine In', value: 'dine_in' },\r\n  { title: 'To Go', value: 'to_go' },\r\n  { title: 'Delivery', value: 'delivery' },\r\n  { title: 'Pickup', value: 'pickup' }\r\n]\r\n\r\nconst selectedStatus = ref('all')\r\nconst statusItems = [\r\n  { title: 'All', value: 'all' },\r\n  { title: 'Draft', value: 'DRAFT' },\r\n  { title: 'Sent', value: 'SENT' },\r\n  { title: 'Completed', value: 'COMPLETED' },\r\n  { title: 'Cancelled', value: 'CANCELLED' }\r\n]\r\n\r\nconst selectedPaymentStatus = ref('all')\r\nconst paymentStatusItems = [\r\n  { title: 'All', value: 'all' },\r\n  { title: 'Paid', value: 'PAID' },\r\n  { title: 'Unpaid', value: 'UNPAID' },\r\n  { title: 'Partially Paid', value: 'PARTIALLY_PAID' }\r\n]\r\n\r\nconst props = defineProps({\r\n  invoices: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  loadingOrder: {\r\n    type: [String, Number],\r\n    default: null\r\n  },\r\n  convertingOrder: {\r\n    type: [String, Number],\r\n    default: null\r\n  },\r\n  deletingOrder: {\r\n    type: [String, Number],\r\n    default: null\r\n  },\r\n  getOrderType: {\r\n    type: Function,\r\n    required: true\r\n  },\r\n  getOrderTypeColor: {\r\n    type: Function,\r\n    required: true\r\n  },\r\n  formatDate: {\r\n    type: Function,\r\n    required: true\r\n  },\r\n  formatCurrency: {\r\n    type: Function,\r\n    required: true\r\n  },\r\n  hideActions: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  showPagination: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  page: {\r\n    type: Number,\r\n    default: 1\r\n  },\r\n  totalPages: {\r\n    type: Number,\r\n    default: 1\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['load', 'convert', 'delete', 'update:page', 'refresh'])\r\n\r\n// Add logging utility\r\nconst logOrderInfo = (action, invoice) => {\r\n  console.log(`[HeldOrdersTable] ${action}:`, {\r\n    id: invoice.id,\r\n    type: props.getOrderType(invoice),\r\n    description: invoice.description,\r\n    itemCount: invoice.hold_items?.length || 0,\r\n    total: invoice.total,\r\n    formattedTotal: props.formatCurrency(invoice.total / 100)\r\n  })\r\n}\r\n\r\n// Payment Dialog\r\nconst showPaymentDialog = ref(false)\r\nconst showConfirmDialog = ref(false)\r\nconst selectedInvoice = ref(null)\r\n\r\nconst handlePayClick = (invoice) => {\r\n  logOrderInfo('Payment initiated', invoice)\r\n  selectedInvoice.value = invoice\r\n  showConfirmDialog.value = true\r\n}\r\n\r\nconst confirmPayment = () => {\r\n  showConfirmDialog.value = false\r\n  showPaymentDialog.value = true\r\n}\r\n\r\nconst handlePaymentComplete = async (result) => {\r\n  try {\r\n    showPaymentDialog.value = false\r\n    if (selectedInvoice.value) {\r\n      console.log('[HeldOrdersTable] Payment completed:', {\r\n        success: result,\r\n        invoiceId: selectedInvoice.value.id\r\n      })\r\n    }\r\n    selectedInvoice.value = null\r\n    if (result) {\r\n      window.toastr?.['success']('Payment processed successfully')\r\n      emit('refresh')\r\n    }\r\n  } catch (error) {\r\n    console.error('[HeldOrdersTable] Payment completion error:', error)\r\n    window.toastr?.['error']('Failed to complete payment process')\r\n  }\r\n}\r\n\r\nconst hasNotes = (invoice) => {\r\n  const notes = parseOrderNotes(invoice.notes)\r\n  return notes && notes.trim().length > 0\r\n}\r\n\r\nconst getTooltipText = (invoice) => {\r\n  const notes = parseOrderNotes(invoice.notes)\r\n  if (!notes) return invoice.description\r\n  return `${invoice.description}\\n\\nNotes: ${notes}`\r\n}\r\n\r\nconst getStatusColor = (status) => {\r\n  switch (status) {\r\n    case 'PAID':\r\n      return 'success'\r\n    case 'UNPAID':\r\n      return 'warning'\r\n    default:\r\n      return 'info'\r\n  }\r\n}\r\n\r\nconst handleConvert = (invoice) => {\r\n  if (invoice.paid_status === 'PAID') {\r\n    window.toastr?.['error']('Cannot convert a paid invoice')\r\n    return\r\n  }\r\n  \r\n  // Add is_hold_invoice flag to identify this as a hold invoice that needs conversion\r\n  const holdInvoice = {\r\n    ...invoice,\r\n    is_hold_invoice: true\r\n  }\r\n  \r\n  console.log('HeldOrdersTable: Convert button clicked for invoice:', holdInvoice)\r\n  console.log('HeldOrdersTable: Emitting convert event with hold invoice data:', {\r\n    id: holdInvoice.id,\r\n    description: holdInvoice.description,\r\n    total: holdInvoice.total,\r\n    items: holdInvoice.hold_items?.length,\r\n    is_hold_invoice: holdInvoice.is_hold_invoice\r\n  })\r\n  emit('convert', holdInvoice)\r\n}\r\n\r\n// Watch for prop changes to track loading states\r\nwatch(() => props.loadingOrder, (newVal, oldVal) => {\r\n  if (newVal) {\r\n    const invoice = props.invoices.find(i => i.id === newVal)\r\n    if (invoice) {\r\n      logOrderInfo('Loading order', invoice)\r\n    }\r\n  }\r\n})\r\n\r\nwatch(() => props.convertingOrder, (newVal, oldVal) => {\r\n  if (newVal) {\r\n    const invoice = props.invoices.find(i => i.id === newVal)\r\n    if (invoice) {\r\n      logOrderInfo('Converting order', invoice)\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.held-orders-table {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: rgb(var(--v-theme-background));\r\n}\r\n\r\n.filters-container {\r\n  flex: 0 0 auto;\r\n  padding: 16px;\r\n  background-color: rgb(var(--v-theme-surface));\r\n  border-bottom: 1px solid rgba(var(--v-border-color), var(--v-border-opacity));\r\n}\r\n\r\n.filters-row {\r\n  display: flex;\r\n  gap: 16px;\r\n  align-items: center;\r\n}\r\n\r\n.search-field {\r\n  flex: 1;\r\n  max-width: 300px;\r\n}\r\n\r\n.filter-controls {\r\n  flex: 1;\r\n  display: flex;\r\n  gap: 16px;\r\n}\r\n\r\n.filter-select {\r\n  width: 160px;\r\n}\r\n\r\n.table-container {\r\n  flex: 1;\r\n  overflow: auto;\r\n  min-height: 0;\r\n  position: relative;\r\n}\r\n\r\n.orders-table {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n:deep(.v-table) {\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: rgb(var(--v-theme-surface));\r\n}\r\n\r\n:deep(.v-table__wrapper) {\r\n  flex: 1;\r\n  overflow: auto;\r\n  min-height: 0;\r\n}\r\n\r\n:deep(.v-table__wrapper > table) {\r\n  width: 100%;\r\n  table-layout: fixed;\r\n  border-spacing: 0;\r\n}\r\n\r\n:deep(.v-table__wrapper > table > thead) {\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 2;\r\n  background-color: rgb(var(--v-theme-surface));\r\n}\r\n\r\n:deep(.v-table__wrapper > table > thead > tr > th) {\r\n  font-weight: 600;\r\n  color: rgb(var(--v-theme-on-surface));\r\n  white-space: nowrap;\r\n  border-bottom: 1px solid rgba(var(--v-border-color), var(--v-border-opacity));\r\n  padding: 0 16px;\r\n  height: 48px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n:deep(.v-table__wrapper > table > tbody > tr > td) {\r\n  padding: 0 16px;\r\n  height: 48px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n:deep(.v-table__wrapper > table > tbody > tr:not(:last-child) > td) {\r\n  border-bottom: 1px solid rgba(var(--v-border-color), var(--v-border-opacity));\r\n}\r\n\r\n/* Column widths */\r\n.order-type-col { width: 12%; }\r\n.description-col { width: 25%; }\r\n.created-col { width: 12%; }\r\n.items-col { width: 8%; }\r\n.total-col { width: 10%; }\r\n.status-col { width: 10%; }\r\n.actions-col { width: 23%; }\r\n\r\n.order-type-chip,\r\n.status-chip {\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.actions-wrapper {\r\n  display: flex;\r\n  gap: 8px;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n}\r\n\r\n.pagination-wrapper {\r\n  flex: 0 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 16px;\r\n  background-color: rgb(var(--v-theme-surface));\r\n  border-top: 1px solid rgba(var(--v-border-color), var(--v-border-opacity));\r\n}\r\n\r\n.cursor-help {\r\n  cursor: help;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .filters-container {\r\n    padding: 12px;\r\n  }\r\n\r\n  .filters-row {\r\n    flex-direction: column;\r\n    gap: 12px;\r\n  }\r\n\r\n  .search-field {\r\n    width: 100%;\r\n    max-width: none;\r\n  }\r\n\r\n  .filter-controls {\r\n    width: 100%;\r\n    gap: 8px;\r\n  }\r\n\r\n  .filter-select {\r\n    width: auto;\r\n    flex: 1;\r\n  }\r\n\r\n  :deep(.v-table__wrapper > table > thead > tr > th),\r\n  :deep(.v-table__wrapper > table > tbody > tr > td) {\r\n    padding: 0 12px;\r\n    height: 40px;\r\n    font-size: 0.875rem;\r\n  }\r\n\r\n  /* Adjust column widths for mobile */\r\n  .order-type-col { width: 15%; }\r\n  .description-col { width: 20%; }\r\n  .created-col { width: 12%; }\r\n  .items-col { width: 8%; }\r\n  .total-col { width: 12%; }\r\n  .status-col { width: 12%; }\r\n  .actions-col { width: 21%; }\r\n\r\n  .actions-wrapper {\r\n    gap: 4px;\r\n  }\r\n\r\n  .pagination-wrapper {\r\n    padding: 12px;\r\n  }\r\n}\r\n</style>\r\n","import { logger } from '../../../../../utils/logger'\r\nimport { OrderType, PaidStatus } from '../../../../../types/order'\r\n\r\n// Validate invoice data before API call\r\nexport const validateInvoiceData = (data) => {\r\n  logger.debug('Validating invoice data:', data)\r\n  \r\n  const requiredFields = [\r\n    'invoice_number',\r\n    'invoice_date',\r\n    'due_date',\r\n    'total',\r\n    'sub_total',\r\n    'items',\r\n    'user_id',\r\n    'type',\r\n    'paid_status'\r\n  ]\r\n\r\n  const missingFields = requiredFields.filter(field => !data[field])\r\n  if (missingFields.length > 0) {\r\n    throw new Error(`Missing required fields: ${missingFields.join(', ')}`)\r\n  }\r\n\r\n  if (!Array.isArray(data.items) || data.items.length === 0) {\r\n    throw new Error('Invoice must have at least one item')\r\n  }\r\n\r\n  // Validate items\r\n  data.items.forEach((item, index) => {\r\n    if (!item.item_id || !item.name || !item.price || !item.quantity) {\r\n      throw new Error(`Invalid item data at index ${index}`)\r\n    }\r\n  })\r\n\r\n  // Validate type\r\n  if (!Object.values(OrderType).includes(data.type)) {\r\n    throw new Error(`Invalid order type: ${data.type}. Must be one of: ${Object.values(OrderType).join(', ')}`)\r\n  }\r\n\r\n  // Validate paid_status\r\n  if (!Object.values(PaidStatus).includes(data.paid_status)) {\r\n    throw new Error(`Invalid paid status: ${data.paid_status}. Must be either PAID or UNPAID`)\r\n  }\r\n\r\n  logger.debug('Invoice data validation passed')\r\n  return true\r\n}\r\n\r\n// Validate invoice for conversion\r\nexport const validateInvoiceForConversion = (invoice) => {\r\n  if (!invoice?.id && !invoice?.hold_invoice_id) {\r\n    logger.error('Invalid invoice - missing ID fields:', invoice)\r\n    throw new Error('Invalid invoice: missing ID fields')\r\n  }\r\n\r\n  // Ensure we have items array\r\n  const items = invoice.hold_items || invoice.items\r\n  if (!Array.isArray(items) || items.length === 0) {\r\n    logger.error('Invalid invoice - no items found:', {\r\n      hasHoldItems: !!invoice.hold_items,\r\n      hasItems: !!invoice.items,\r\n      itemsLength: items?.length\r\n    })\r\n    throw new Error('No items found in invoice')\r\n  }\r\n\r\n  // Validate each item\r\n  items.forEach((item, index) => {\r\n    if (!item.item_id || !item.name) {\r\n      logger.error('Invalid item data at index:', { index, item })\r\n      throw new Error(`Invalid item data at index ${index}: missing required fields`)\r\n    }\r\n  })\r\n\r\n  invoice.hold_items.forEach((item, index) => {\r\n    if (!item.item_id || !item.name) {\r\n      throw new Error(`Invalid item data at index ${index}: missing required fields`)\r\n    }\r\n  })\r\n\r\n  // Validate type\r\n  if (!Object.values(OrderType).includes(invoice.type)) {\r\n    throw new Error(`Invalid order type: ${invoice.type}. Must be one of: ${Object.values(OrderType).join(', ')}`)\r\n  }\r\n\r\n  // Validate paid_status if present\r\n  if (invoice.paid_status && !Object.values(PaidStatus).includes(invoice.paid_status)) {\r\n    throw new Error(`Invalid paid status: ${invoice.paid_status}. Must be either PAID or UNPAID`)\r\n  }\r\n\r\n  return true\r\n}\r\n","import { posApi } from '../../../../../services/api/pos-api'\r\nimport { logger } from '../../../../../utils/logger'\r\nimport { formatApiDate, toCents } from './formatters'\r\nimport { validateInvoiceData, validateInvoiceForConversion } from './validators'\r\nimport { OrderType, PaidStatus } from '../../../../../types/order'\r\n\r\nexport const convertHeldOrderToInvoice = async (invoice) => {\r\n  // Validate invoice object structure\r\n  if (!invoice || typeof invoice !== 'object') {\r\n    throw new Error('Invalid invoice data provided')\r\n  }\r\n\r\n  // For nested invoice structure, extract the inner invoice\r\n  if (invoice.invoice && typeof invoice.invoice === 'object') {\r\n    invoice = invoice.invoice\r\n  }\r\n\r\n  // Now check for ID\r\n  if (!invoice.id) {\r\n    const error = new Error('Invalid invoice: missing ID')\r\n    logger.error('[InvoiceConverter] Invalid invoice data:', { invoice })\r\n    throw error\r\n  }\r\n\r\n  logger.info('[InvoiceConverter] Starting conversion process:', {\r\n    id: invoice.id,\r\n    description: invoice.description,\r\n    total: invoice.total,\r\n    items: invoice.hold_items?.length\r\n  })\r\n  \r\n  try {\r\n    // Ensure we have a valid invoice object\r\n    if (!invoice || typeof invoice !== 'object') {\r\n      throw new Error('Invalid invoice data provided')\r\n    }\r\n\r\n    logger.debug('Starting invoice conversion with data:', {\r\n      id: invoice.id,\r\n      type: invoice.type,\r\n      items: invoice.hold_items?.length || 0\r\n    })\r\n\r\n    // Ensure items array exists\r\n    if (!invoice.items && invoice.hold_items) {\r\n      invoice.items = invoice.hold_items\r\n    } else if (!invoice.items) {\r\n      invoice.items = []\r\n    }\r\n\r\n    // Skip validation since we know the invoice is valid\r\n    // 1. Get company settings\r\n    console.log('Fetching company settings')\r\n    const settings = await posApi.getCompanySettings()\r\n    console.log('Company settings received:', settings)\r\n\r\n    // Validate required settings\r\n    if (!settings.invoice_auto_generate) {\r\n      throw new Error('Invoice auto-generate setting is required but missing')\r\n    }\r\n\r\n    // Use default issuance period if not set\r\n    const issuancePeriod = settings.invoice_issuance_period || '7'\r\n\r\n    // 2. Get next invoice number if auto-generate is enabled\r\n    let invoiceNumber\r\n    if (settings.invoice_auto_generate === 'YES') {\r\n      console.log('Getting next invoice number')\r\n      const nextNumberResponse = await posApi.invoice.getNextNumber()\r\n      console.log('Next number response:', nextNumberResponse)\r\n\r\n      if (!nextNumberResponse?.invoice_number) {\r\n        throw new Error('Failed to get next invoice number')\r\n      }\r\n      // Add hyphen between prefix and number\r\n      invoiceNumber = `${nextNumberResponse.prefix}-${nextNumberResponse.nextNumber}`\r\n    } else {\r\n      throw new Error('Manual invoice number entry is not supported')\r\n    }\r\n\r\n    // Calculate dates\r\n    const currentDate = new Date()\r\n    const dueDate = new Date(currentDate)\r\n    dueDate.setDate(dueDate.getDate() + parseInt(issuancePeriod))\r\n\r\n    // Parse table data from notes\r\n    let tableData = {}\r\n    try {\r\n      if (invoice.notes) {\r\n        tableData = JSON.parse(invoice.notes)\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to parse table data from notes:', err)\r\n    }\r\n\r\n    // Format items according to API requirements\r\n    console.log('Formatting items data')\r\n    const formattedItems = invoice.items.map(item => {\r\n      // Price is already in cents from prepareHoldInvoiceData\r\n      const itemPrice = Math.round(Number(item.price))\r\n      const itemQuantity = parseInt(item.quantity)\r\n      const itemTotal = itemPrice * itemQuantity\r\n\r\n      return {\r\n        item_id: Number(item.item_id),\r\n        name: item.name,\r\n        description: item.description || '',\r\n        price: itemPrice,\r\n        quantity: itemQuantity,\r\n        unit_name: item.unit_name || 'units',\r\n        sub_total: itemTotal,\r\n        total: itemTotal,\r\n        discount: \"0\",\r\n        discount_val: 0,\r\n        discount_type: \"fixed\",\r\n        tax: Math.round(Number(item.tax || 0)), // Tax is also already in cents\r\n        retention_amount: 0,\r\n        retention_concept: null,\r\n        retention_percentage: null,\r\n        retentions_id: null\r\n      }\r\n    })\r\n\r\n    // Format tip value - ensure it's a clean number string\r\n    const tipValue = invoice.tip ? String(Math.round(Number(invoice.tip))) : \"0\"\r\n    console.log('Formatted tip value:', tipValue)\r\n\r\n    // 3. Prepare invoice data according to API requirements\r\n    console.log('Preparing invoice data')\r\n    console.log('Invoice data', invoice)\r\n\r\n    // Ensure all required numeric fields are present and properly formatted\r\n    const subTotal = Math.round(Number(invoice.sub_total || 0))\r\n    const taxAmount = Math.round(Number(invoice.tax || 0))\r\n    const totalAmount = Math.round(Number(invoice.total || (subTotal + taxAmount)))\r\n\r\n    const invoiceData = {\r\n      // Required fields first\r\n      invoice_date: formatApiDate(currentDate),\r\n      due_date: formatApiDate(dueDate),\r\n      invoice_number: invoiceNumber,\r\n      sub_total: subTotal,\r\n      total: totalAmount,\r\n      tax: taxAmount,\r\n      items: formattedItems, // This is prepared earlier in the code\r\n\r\n      // Ensure tables arrays are present for all order types\r\n      tables_selected: invoice.tables_selected || [],\r\n      hold_tables: invoice.hold_tables || [],\r\n      \r\n      // Required boolean flags\r\n      avalara_bool: false,\r\n      banType: true,\r\n      package_bool: false,\r\n      print_pdf: false,\r\n      save_as_draft: false,\r\n      send_email: false,\r\n      not_charge_automatically: false,\r\n      is_hold_invoice: true,\r\n      is_invoice_pos: 1,\r\n      is_pdf_pos: settings.pdf_format_pos === '1',\r\n      is_prepared_data: true,\r\n\r\n      // IDs and references\r\n      invoice_template_id: 1,\r\n      invoice_pbx_modify: 0,\r\n      hold_invoice_id: Math.round(Number(invoice.id || 0)),\r\n      store_id: Math.round(Number(invoice.store_id || 0)),\r\n      cash_register_id: Math.round(Number(invoice.cash_register_id || 0)),\r\n      user_id: Math.round(Number(invoice.user_id || 1)),\r\n\r\n      // Amounts\r\n      due_amount: Math.round(Number(totalAmount)),\r\n      \r\n      // Discount\r\n      discount: String(Math.round(Number(invoice.discount || 0))),\r\n      discount_type: invoice.discount_type || \"fixed\",\r\n      discount_val: Math.round(Number(toCents(invoice.discount_val || 0))),\r\n      discount_per_item: settings.discount_per_item || \"NO\",\r\n\r\n      // Tip - ensure consistent formatting\r\n      tip: tipValue,\r\n      tip_type: invoice.tip_type || \"fixed\",\r\n      tip_val: invoice.tip_val || 0,\r\n\r\n      // Status\r\n      status: \"SENT\",\r\n      paid_status: invoice.paid_status || PaidStatus.UNPAID,\r\n      type: invoice.type || OrderType.TO_GO,\r\n\r\n      // Arrays\r\n      items: formattedItems,\r\n      taxes: invoice.taxes || [],\r\n      packages: [],\r\n      tables_selected: tableData.tables || [],\r\n\r\n      // Optional fields\r\n      notes: '',\r\n      description: invoice.description || `Order #${invoice.id}`\r\n    }\r\n\r\n    // Validate invoice data before sending\r\n    validateInvoiceData(invoiceData)\r\n\r\n    console.log('Creating invoice with data:', invoiceData)\r\n\r\n    // 4. Create the invoice\r\n    const invoiceResponse = await posApi.invoice.create(invoiceData)\r\n    console.log('Invoice creation response:', invoiceResponse)\r\n    \r\n    // If we have an invoice object with an ID, consider it successful\r\n    if (invoiceResponse?.result?.invoice?.id) {\r\n      invoiceResponse.invoice = invoiceResponse.result.invoice\r\n    } else if (invoiceResponse?.invoice?.id) {\r\n      // Keep existing invoice structure\r\n    } else {\r\n      throw new Error('Failed to create invoice: No valid invoice ID')\r\n    }\r\n\r\n    // Add hold_invoice_id to the response\r\n    invoiceResponse.invoice.hold_invoice_id = invoice.id\r\n\r\n    // 5. Get created invoice details\r\n    console.log('Fetching created invoice details')\r\n    const createdInvoice = await posApi.invoice.getById(invoiceResponse.invoice.id)\r\n    if (!createdInvoice) {\r\n      throw new Error('Failed to fetch created invoice details')\r\n    }\r\n\r\n    // Normalize tip value in the response to match what we sent\r\n    if (createdInvoice.tip) {\r\n      createdInvoice.tip = String(Math.round(Number(createdInvoice.tip)))\r\n    }\r\n\r\n    // Add hold_invoice_id to the created invoice\r\n    createdInvoice.hold_invoice_id = invoice.id\r\n\r\n    console.log('Created invoice details:', createdInvoice)\r\n\r\n    logger.info('Order converted to invoice successfully:', createdInvoice.id)\r\n    return {\r\n      success: true,\r\n      invoice: createdInvoice\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to convert order to invoice:', error)\r\n    logger.error('Failed to convert order to invoice:', error)\r\n    window.toastr?.['error'](error.message || 'Failed to convert order to invoice')\r\n    return {\r\n      success: false,\r\n      error: error.message\r\n    }\r\n  }\r\n}\r\n","# src/components/common/PdfViewerDialog.vue\n<template>\n  <v-dialog v-model=\"dialog\" max-width=\"1000px\" persistent>\n    <v-card>\n      <v-toolbar color=\"primary\" dark>\n        <v-toolbar-title>{{ title }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn icon @click=\"print\">\n          <v-icon>mdi-printer</v-icon>\n        </v-btn>\n        <v-btn icon @click=\"closeDialog\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </v-toolbar>\n\n      <v-card-text class=\"pdf-container\">\n        <div v-if=\"loading\" class=\"d-flex justify-center align-center pa-4\">\n          <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n        </div>\n        <iframe\n          v-show=\"!loading\"\n          :src=\"pdfUrl\"\n          width=\"100%\"\n          height=\"600\"\n          @load=\"handleIframeLoad\"\n        ></iframe>\n      </v-card-text>\n\n      <v-card-actions class=\"d-flex justify-space-between pa-4\">\n        <v-btn\n          color=\"primary\"\n          variant=\"outlined\"\n          @click=\"print\"\n          :disabled=\"loading\"\n        >\n          <v-icon left>mdi-printer</v-icon>\n          Print\n        </v-btn>\n        <v-btn\n          color=\"grey\"\n          variant=\"outlined\"\n          @click=\"closeDialog\"\n        >\n          Close\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    default: false\n  },\n  pdfUrl: {\n    type: String,\n    required: true\n  },\n  title: {\n    type: String,\n    default: 'Invoice'\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'closed'])\n\nconst dialog = ref(props.modelValue)\nconst loading = ref(true)\n\nwatch(() => props.modelValue, (newVal) => {\n  dialog.value = newVal\n})\n\nwatch(dialog, (newVal) => {\n  emit('update:modelValue', newVal)\n  if (!newVal) {\n    emit('closed')\n  }\n})\n\nconst handleIframeLoad = () => {\n  // Add a small delay to ensure the PDF is actually loaded\n  setTimeout(() => {\n    loading.value = false\n  }, 500)\n}\n\n// Reset loading state when PDF URL changes\nwatch(() => props.pdfUrl, () => {\n  loading.value = true\n})\n\nconst print = () => {\n  const iframe = document.querySelector('iframe')\n  if (iframe) {\n    iframe.contentWindow.print()\n  }\n}\n\nconst closeDialog = () => {\n  dialog.value = false\n}\n</script>\n\n<style scoped>\n.pdf-container {\n  min-height: 600px;\n  padding: 0;\n}\n\niframe {\n  border: none;\n}\n</style>\n","<!-- src/views/pos/components/dialogs/PaymentDialog.vue -->\n<template>\n  <div class=\"payment-dialog-wrapper\">\n    <v-dialog \n      v-model=\"dialog\" \n      fullscreen\n      transition=\"dialog-bottom-transition\"\n      :scrim=\"false\"\n      class=\"payment-dialog\"\n    >\n      <v-card class=\"modal-card\">\n        <v-toolbar \n          color=\"primary\"\n          :elevation=\"1\"\n        >\n          <v-toolbar-title class=\"text-h6 font-weight-medium\">\n            <v-icon icon=\"mdi-cash-register\" size=\"large\" class=\"mr-2\"></v-icon>\n            Process Payment\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            @click=\"closeDialog\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n\n        <div class=\"payment-content\">\n          <!-- Loading State -->\n          <div v-if=\"loading\" class=\"loading-state\">\n            <v-progress-circular\n              indeterminate\n              color=\"primary\"\n              size=\"64\"\n            ></v-progress-circular>\n            <div class=\"text-h6 mt-4\">Loading Payment Methods...</div>\n          </div>\n\n          <template v-else>\n            <v-container class=\"payment-container\">\n              <v-row>\n                <v-col cols=\"12\" md=\"4\">\n                  <!-- Invoice Summary Card -->\n                  <v-card\n                    variant=\"elevated\"\n                    class=\"invoice-summary-card mb-4\"\n                    elevation=\"2\"\n                  >\n                    <v-card-item>\n                      <template v-slot:prepend>\n                        <v-icon\n                          icon=\"mdi-receipt\"\n                          size=\"large\"\n                          color=\"primary\"\n                          class=\"mr-4\"\n                        ></v-icon>\n                      </template>\n                      <v-card-title class=\"text-h6 pb-2\">\n                        Invoice Summary\n                      </v-card-title>\n                    </v-card-item>\n                    <v-divider></v-divider>\n                    <v-card-text class=\"py-4\">\n                      <div class=\"d-flex justify-space-between mb-2\">\n                        <span>Invoice Number:</span>\n                        <strong>{{ invoiceNumber }}</strong>\n                      </div>\n                      <div class=\"d-flex justify-space-between mb-2\">\n                        <span>Subtotal:</span>\n                        <strong>{{ formatCurrency(invoiceTotal) }}</strong>\n                      </div>\n                      <div class=\"d-flex justify-space-between mb-2\" v-if=\"tipAmount > 0\">\n                        <span>Tip:</span>\n                        <strong>{{ formatCurrency(tipAmount) }}</strong>\n                      </div>\n                      <div class=\"d-flex justify-space-between mb-2\">\n                        <span>Total Amount:</span>\n                        <strong>{{ formatCurrency(invoiceTotal + tipAmount) }}</strong>\n                      </div>\n                      <div class=\"d-flex justify-space-between\">\n                        <span>Remaining:</span>\n                        <strong>{{ formatCurrency(remainingAmount) }}</strong>\n                      </div>\n                    </v-card-text>\n                  </v-card>\n\n                  <!-- Tip Button -->\n                  <v-btn\n                    block\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    @click=\"showTipDialog = true\"\n                    class=\"mb-4 tip-button\"\n                    height=\"48\"\n                  >\n                    {{ tipAmount > 0 ? `Update Tip (${formatCurrency(tipAmount)})` : 'Add Tip' }}\n                  </v-btn>\n                </v-col>\n\n                <v-col cols=\"12\" md=\"8\">\n                  <!-- Payment Methods Selection -->\n                  <div class=\"text-subtitle-1 mb-3 font-weight-medium\">Select Payment Method</div>\n                  <v-row class=\"payment-methods-grid\">\n                    <v-col v-for=\"method in paymentMethods\" \n                           :key=\"method.id\" \n                           cols=\"6\" \n                           sm=\"4\">\n                      <v-btn\n                        block\n                        :color=\"isMethodSelected(method.id) ? 'primary' : undefined\"\n                        :variant=\"isMethodSelected(method.id) ? 'flat' : 'outlined'\"\n                        class=\"payment-method-btn\"\n                        height=\"64\"\n                        @click=\"selectPaymentMethod(method.id)\"\n                        :disabled=\"isMethodDisabled(method.id)\"\n                      >\n                        <v-icon :icon=\"getPaymentMethodIcon(method.name)\" class=\"mr-2\"></v-icon>\n                        {{ method.name }}\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n\n                  <!-- Active Payment Methods -->\n                  <div v-if=\"payments.length > 0\" class=\"active-payments-section\">\n                    <div v-for=\"(payment, index) in payments\" :key=\"index\" class=\"payment-section\">\n                      <v-card variant=\"outlined\" class=\"pa-4\">\n                        <div class=\"d-flex align-center mb-4\">\n                          <v-icon :icon=\"getPaymentMethodIcon(getPaymentMethod(payment.method_id)?.name)\" class=\"mr-2\"></v-icon>\n                          <span class=\"text-h6\">{{ getPaymentMethod(payment.method_id)?.name }}</span>\n                          <v-spacer></v-spacer>\n                          <v-btn\n                            icon=\"mdi-close\"\n                            variant=\"text\"\n                            density=\"comfortable\"\n                            @click=\"removePayment(index)\"\n                          ></v-btn>\n                        </div>\n\n                        <!-- Amount Display -->\n                        <div class=\"amount-display\">\n                          <div class=\"amount-display__label\">Amount</div>\n                          <div class=\"amount-display__value-container\"\n                               :class=\"{ 'is-error': !isValidAmount(payment) }\">\n                            <div class=\"amount-display__amount\">\n                              <span class=\"amount-display__currency\">$</span>{{ PriceUtils.toDollars(payment.amount).toFixed(2) }}\n                            </div>\n                          </div>\n                          <transition name=\"fade\">\n                            <div v-if=\"!isValidAmount(payment)\" class=\"amount-display__error\">\n                              <v-icon icon=\"mdi-alert-circle\" size=\"small\" color=\"error\" class=\"mr-1\" />\n                              Full payment amount is required\n                            </div>\n                          </transition>\n                        </div>\n\n                        <!-- Cash Payment Fields -->\n                        <template v-if=\"isCashOnly(payment.method_id)\">\n                          <!-- Denominations Grid -->\n                          <div v-if=\"getDenominations(payment.method_id)?.length\" class=\"mb-4\">\n                            <div class=\"text-subtitle-2 mb-2\">Quick Amount Selection</div>\n                            <v-row>\n                              <v-col v-for=\"money in getDenominations(payment.method_id)\" \n                                    :key=\"money.id\" \n                                    cols=\"4\" \n                                    class=\"pa-1\">\n                                <v-btn block\n                                      variant=\"outlined\"\n                                      class=\"denomination-btn\"\n                                      size=\"small\"\n                                      @click=\"handleDenominationClick(money, index)\">\n                                  {{ formatCurrency(PriceUtils.toCents(money.amount)) }}\n                                </v-btn>\n                              </v-col>\n                            </v-row>\n                          </div>\n\n                          <!-- Received Amount -->\n                          <div class=\"amount-display\">\n                            <div class=\"amount-display__label\">Amount Received</div>\n                            <div class=\"amount-display__value-container\"\n                                 :class=\"{ 'is-error': !isValidReceivedAmount(payment) }\">\n                              <div class=\"amount-display__amount\">\n                                <span class=\"amount-display__currency\">$</span>\n                                <input\n                                  v-model=\"payment.displayReceived\"\n                                  type=\"number\"\n                                  class=\"amount-display__input\"\n                                  step=\"0.01\"\n                                  min=\"0\"\n                                  @input=\"calculateChange(index)\"\n                                />\n                              </div>\n                            </div>\n                            <transition name=\"fade\">\n                              <div v-if=\"!isValidReceivedAmount(payment)\" class=\"amount-display__error\">\n                                <v-icon icon=\"mdi-alert-circle\" size=\"small\" color=\"error\" class=\"mr-1\" />\n                                Received amount must be greater than or equal to payment amount\n                              </div>\n                            </transition>\n                          </div>\n                        </template>\n\n                        <!-- Payment Fees -->\n                        <div v-if=\"hasPaymentFees(payment.method_id)\" class=\"text-caption mb-2\">\n                          <div class=\"d-flex justify-space-between\">\n                            <span>Service Fee:</span>\n                            <strong>{{ formatCurrency(payment.fees) }}</strong>\n                          </div>\n                          <div class=\"text-grey\">\n                            {{ getFeeDescription(payment.method_id, payment.amount) }}\n                          </div>\n                        </div>\n\n                        <!-- Payment Amount Display -->\n                        <div class=\"d-flex justify-space-between mb-2\">\n                          <span>Payment Amount:</span>\n                          <strong>${{ PriceUtils.toDollars(payment.amount).toFixed(2) }}</strong>\n                        </div>\n                        <div v-if=\"payment.displayReceived\" class=\"d-flex justify-space-between mb-2\">\n                          <span>Amount Received:</span>\n                          <strong>${{ Number(payment.displayReceived).toFixed(2) }}</strong>\n                        </div>\n                        <div v-if=\"payment.returned > 0\" class=\"d-flex justify-space-between mb-2\">\n                          <span>Change:</span>\n                          <strong>${{ PriceUtils.toDollars(payment.returned).toFixed(2) }}</strong>\n                        </div>\n                        <div v-if=\"payment.fees\" class=\"d-flex justify-space-between\">\n                          <span>Fees:</span>\n                          <strong>{{ formatCurrency(payment.fees) }}</strong>\n                        </div>\n\n                        <v-divider v-if=\"index < payments.length - 1\" class=\"my-4\"></v-divider>\n                      </v-card>\n                    </div>\n\n                    <!-- Add Payment Method Button -->\n                    <v-btn\n                      v-if=\"canAddMorePayments\"\n                      block\n                      color=\"primary\"\n                      variant=\"outlined\"\n                      @click=\"addPayment\"\n                      class=\"mt-4\"\n                      height=\"48\"\n                    >\n                      <v-icon start>mdi-plus</v-icon>\n                      Add Another Payment Method\n                    </v-btn>\n                  </div>\n                </v-col>\n              </v-row>\n\n              <!-- Error Message -->\n              <v-alert\n                v-if=\"error\"\n                type=\"error\"\n                variant=\"tonal\"\n                closable\n                class=\"error-alert\"\n                @click:close=\"error = null\"\n              >\n                {{ error }}\n              </v-alert>\n\n              <!-- Process Payment Button -->\n              <div class=\"process-payment-footer\">\n                <v-btn\n                  color=\"primary\"\n                  size=\"large\"\n                  block\n                  height=\"56\"\n                  @click=\"processPayment\"\n                  :loading=\"processing\"\n                  :disabled=\"!isValid || processing\"\n                  class=\"process-payment-btn\"\n                >\n                  <v-icon start>mdi-cash-register</v-icon>\n                  Process Payment\n                </v-btn>\n              </div>\n            </v-container>\n          </template>\n        </div>\n      </v-card>\n    </v-dialog>\n\n    <!-- Tip Dialog -->\n    <v-dialog v-model=\"showTipDialog\" max-width=\"400px\">\n      <v-card>\n        <v-card-title class=\"text-h6\">\n          Select Tip Amount\n        </v-card-title>\n        <v-card-text>\n          <p class=\"text-subtitle-2 mb-4\">Choose a tip percentage or enter a custom amount.</p>\n          \n          <!-- Preset Tip Percentages -->\n          <v-row class=\"mb-4\">\n            <v-col v-for=\"percent in tipPercentages\" :key=\"percent\" cols=\"3\">\n              <v-btn\n                block\n                :variant=\"selectedTipPercent === percent ? 'flat' : 'outlined'\"\n                :color=\"selectedTipPercent === percent ? 'primary' : undefined\"\n                @click=\"selectTipPercent(percent)\"\n              >\n                {{ percent }}%\n              </v-btn>\n            </v-col>\n          </v-row>\n\n          <!-- Custom Tip Input -->\n          <v-row>\n            <v-col cols=\"12\">\n              <v-text-field\n                v-model=\"customTipPercent\"\n                label=\"Custom %\"\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                append-inner-text=\"%\"\n                @input=\"handleCustomTipInput\"\n              ></v-text-field>\n            </v-col>\n          </v-row>\n\n          <!-- Tip Amount Display -->\n          <v-row v-if=\"calculatedTip > 0\">\n            <v-col cols=\"12\">\n              <div class=\"d-flex justify-space-between\">\n                <span>Tip Amount:</span>\n                <strong>{{ formatCurrency(calculatedTip) }}</strong>\n              </div>\n            </v-col>\n          </v-row>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey\" variant=\"text\" @click=\"cancelTip\">\n            Cancel\n          </v-btn>\n          <v-btn color=\"primary\" @click=\"confirmTip\">\n            Confirm Tip\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- Add PDF Viewer Dialog -->\n    <PdfViewerDialog\n      v-model=\"showPdfViewer\"\n      :pdf-url=\"currentPdfUrl\"\n      title=\"Invoice\"\n      @closed=\"handlePdfViewerClosed\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { usePayment } from '../../composables/usePayment'\nimport { useTableManagement } from '../../composables/useTableManagement'\nimport { convertHeldOrderToInvoice } from '../held-orders/utils/invoiceConverter'\nimport { posApi } from '@/services/api/pos-api'\nimport { PriceUtils } from '@/utils/price'\nimport PdfViewerDialog from '@/components/common/PdfViewerDialog.vue'\n\nconst emit = defineEmits(['update:modelValue', 'paymentComplete'])\n\nconst props = defineProps({\n  modelValue: Boolean,\n  invoice: {\n    type: Object,\n    required: false,\n    default: () => ({})\n  }\n})\n\n// Get invoice total in cents from the invoice object\nconst invoiceTotal = computed(() => {\n  const total = props.invoice?.invoice?.total || 0\n  console.log('PaymentDialog - Raw invoice total:', {\n    rawTotal: total,\n    invoice: props.invoice?.invoice,\n    isDollarAmount: PriceUtils.isInDollars(total),\n    isCentsAmount: total > 100\n  })\n  return total // Already in cents\n})\n\nconst {\n  loading: paymentLoading,\n  error: paymentError,\n  paymentMethods,\n  settings,\n  createPayment,\n  fetchPaymentMethods,\n  fetchSettings,\n  getDenominations,\n  calculateFees,\n  getPaymentMethod,\n  isCashOnly\n} = usePayment()\n\nconst {\n  loading: tableLoading,\n  error: tableError,\n  releaseTablesAfterPayment\n} = useTableManagement()\n\nconst loading = computed(() => paymentLoading.value || tableLoading.value)\nconst error = computed(() => paymentError.value || tableError.value)\n\nconst processing = ref(false)\nconst payments = ref([])\nconst showPdfViewer = ref(false)\nconst currentPdfUrl = ref('')\n\n// PDF viewer handlers\nconst handlePdfViewerClosed = () => {\n  currentPdfUrl.value = ''\n}\n\n// Tip related state\nconst showTipDialog = ref(false)\nconst tipPercentages = [15, 18, 20, 25]\nconst selectedTipPercent = ref(null)\nconst customTipPercent = ref('')\nconst tipAmount = ref(0)\nconst tipType = ref('percentage')\n\n// Computed properties for invoice details\nconst invoiceNumber = computed(() => {\n  return props.invoice?.invoice?.invoice_number || \n         `${props.invoice?.invoicePrefix}-${props.invoice?.nextInvoiceNumber}` || \n         ''\n})\n\nconst calculatedTip = computed(() => {\n  const percent = selectedTipPercent.value || Number(customTipPercent.value) || 0\n  const dollarAmount = PriceUtils.toDollars(invoiceTotal.value)\n  const tipAmount = Math.round((dollarAmount * (percent / 100)) * 100)\n  console.log('PaymentDialog - Tip calculation:', {\n    percent,\n    invoiceTotalInCents: invoiceTotal.value,\n    invoiceTotalInDollars: dollarAmount,\n    calculatedTipInCents: tipAmount\n  })\n  return tipAmount\n})\n\n// Dialog computed property\nconst dialog = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value)\n})\n\nconst remainingAmount = computed(() => {\n  const totalPaid = payments.value.reduce((sum, payment) => {\n    return sum + payment.amount // amounts are in cents\n  }, 0)\n  const remaining = invoiceTotal.value + tipAmount.value - totalPaid\n  console.log('PaymentDialog - Remaining amount:', {\n    invoiceTotalInCents: invoiceTotal.value,\n    tipAmountInCents: tipAmount.value,\n    totalPaidInCents: totalPaid,\n    remainingInCents: remaining\n  })\n  return remaining\n})\n\nconst totalPayments = computed(() => {\n  return payments.value.reduce((sum, payment) => {\n    return sum + payment.amount // amounts are in cents\n  }, 0)\n})\n\nconst totalFees = computed(() => {\n  return payments.value.reduce((sum, payment) => {\n    return sum + (payment.fees || 0)\n  }, 0)\n})\n\nconst canAddMorePayments = computed(() => {\n  return remainingAmount.value > 0 && payments.value.length < paymentMethods.value.length\n})\n\nconst isValidAmount = (payment) => {\n  if (!payment.displayAmount) return false\n  if (Number(payment.displayAmount) <= 0) return false\n  return Number(payment.displayAmount) === PriceUtils.toDollars(invoiceTotal.value + tipAmount.value)\n}\n\nconst isValidReceivedAmount = (payment) => {\n  if (!payment.displayReceived) return false\n  return Number(payment.displayReceived) >= Number(payment.displayAmount)\n}\n\nconst isValid = computed(() => {\n  return payments.value.every(payment => {\n    if (!payment.method_id || !payment.amount) return false\n    if (isCashOnly(payment.method_id) && !payment.received) return false\n    if (!isValidAmount(payment)) return false\n    if (isCashOnly(payment.method_id) && !isValidReceivedAmount(payment)) return false\n    return true\n  }) && remainingAmount.value === 0\n})\n\n// Methods\nconst formatCurrency = (amount) => {\n  console.log('PaymentDialog - Formatting currency:', {\n    inputAmount: amount,\n    isDollarAmount: PriceUtils.isInDollars(amount),\n    isCentsAmount: amount > 100,\n    formattedResult: PriceUtils.format(amount)\n  })\n  return PriceUtils.format(amount) // PriceUtils.format already handles cents to dollars conversion\n}\n\nconst hasPaymentFees = (methodId) => {\n  const method = getPaymentMethod(methodId)\n  return method?.IsPaymentFeeActive === 'YES'\n}\n\nconst getFeeDescription = (methodId, amount) => {\n  const method = getPaymentMethod(methodId)\n  if (!method?.registrationdatafees) return ''\n\n  const fees = method.registrationdatafees\n  switch (fees.type) {\n    case 'FIXED':\n      return `Fixed fee: ${formatCurrency(fees.value)}`\n    case 'PERCENTAGE':\n      return `${fees.value}% of transaction amount`\n    case 'FIXED_PLUS_PERCENTAGE':\n      return `${formatCurrency(fees.value.fixed)} + ${fees.value.percentage}% of transaction amount`\n    default:\n      return ''\n  }\n}\n\nconst getPaymentMethodIcon = (methodName) => {\n  const icons = {\n    'Cash': 'mdi-cash',\n    'Credit Card': 'mdi-credit-card',\n    'Debit Card': 'mdi-credit-card-outline',\n    'Check': 'mdi-checkbox-marked-circle-outline',\n    'Gift Card': 'mdi-gift',\n    'Mobile Payment': 'mdi-cellphone',\n    'Bank Transfer': 'mdi-bank',\n  }\n  return icons[methodName] || 'mdi-currency-usd'\n}\n\nconst isMethodSelected = (methodId) => {\n  return payments.value.some(payment => payment.method_id === methodId)\n}\n\nconst isMethodDisabled = (methodId) => {\n  return isMethodSelected(methodId) || payments.value.length >= paymentMethods.value.length\n}\n\nconst selectPaymentMethod = (methodId) => {\n  if (isMethodSelected(methodId) || isMethodDisabled(methodId)) return\n  \n  // Add new payment with remaining amount\n  const remaining = remainingAmount.value\n  const displayAmount = PriceUtils.toDollars(remaining).toString()\n  \n  payments.value.push({\n    method_id: methodId,\n    amount: remaining,\n    displayAmount,\n    received: remaining,\n    displayReceived: displayAmount,\n    returned: 0,\n    fees: 0\n  })\n  \n  validateAmount(payments.value.length - 1)\n}\n\nconst handleDenominationClick = (money, index) => {\n  const payment = payments.value[index]\n  const currentReceived = payment.displayReceived ? Number(payment.displayReceived) : 0\n  const amountToAdd = Number(money.amount)\n  const newTotal = currentReceived + amountToAdd\n  \n  // Update display amount (in dollars)\n  payment.displayReceived = newTotal.toFixed(2)\n  // Update internal amount (in cents)\n  payment.received = PriceUtils.toCents(payment.displayReceived)\n  \n  calculateChange(index)\n  \n  // Provide haptic feedback if available\n  if (window.navigator?.vibrate) {\n    window.navigator.vibrate(50)\n  }\n}\n\nconst calculateChange = (index) => {\n  const payment = payments.value[index]\n  if (!payment.displayReceived || !payment.displayAmount) return\n\n  // Convert display amounts to cents for calculations\n  const receivedInCents = PriceUtils.toCents(payment.displayReceived)\n  const amountInCents = payment.amount // Already in cents\n  \n  // Update internal values\n  payment.received = receivedInCents\n  \n  // Calculate change in cents\n  if (receivedInCents >= amountInCents) {\n    payment.returned = receivedInCents - amountInCents\n  } else {\n    payment.returned = 0\n  }\n}\n\nconst validateAmount = (index) => {\n  const payment = payments.value[index]\n  if (!payment) return\n\n  // Set display amount based on remaining total\n  const total = invoiceTotal.value + tipAmount.value\n  console.log('PaymentDialog - Validating payment amount:', {\n    paymentIndex: index,\n    totalInCents: total,\n    totalInDollars: PriceUtils.toDollars(total),\n    currentPayment: { ...payment }\n  })\n\n  payment.displayAmount = PriceUtils.toDollars(total).toString()\n  payment.amount = total\n\n  // Calculate fees if applicable\n  if (hasPaymentFees(payment.method_id)) {\n    payment.fees = calculateFees(payment.method_id, payment.amount)\n  }\n\n  const method = paymentMethods.value.find(m => m.id === payment.method_id)\n  if (method?.only_cash === 1) {\n    // Handle cash payments - received amount is in dollars, convert to cents\n    const receivedInCents = PriceUtils.toCents(payment.displayReceived)\n    console.log('PaymentDialog - Cash payment received:', {\n      displayReceived: payment.displayReceived,\n      receivedInCents,\n      paymentAmount: payment.amount\n    })\n    payment.received = receivedInCents\n    payment.returned = Math.max(0, payment.received - payment.amount)\n  } else {\n    payment.displayReceived = payment.displayAmount\n    payment.received = payment.amount\n    payment.returned = 0\n  }\n}\n\nconst addPayment = () => {\n  payments.value.push({ \n    method_id: null, \n    amount: 0,\n    displayAmount: PriceUtils.toDollars(invoiceTotal.value + tipAmount.value).toString(), // Include tip\n    received: 0,\n    displayReceived: '0',\n    returned: 0,\n    fees: 0 \n  })\n}\n\nconst removePayment = (index) => {\n  payments.value.splice(index, 1)\n  // Recalculate amounts for remaining payments\n  payments.value.forEach((payment, idx) => validateAmount(idx))\n}\n\nconst closeDialog = () => {\n  if (!processing.value) {\n    dialog.value = false\n  }\n}\n\n// Tip related methods\nconst selectTipPercent = (percent) => {\n  selectedTipPercent.value = percent\n  customTipPercent.value = ''\n}\n\nconst handleCustomTipInput = () => {\n  selectedTipPercent.value = null\n}\n\nconst cancelTip = () => {\n  showTipDialog.value = false\n  selectedTipPercent.value = null\n  customTipPercent.value = ''\n}\n\nconst confirmTip = () => {\n  tipAmount.value = calculatedTip.value\n  tipType.value = 'percentage'\n  showTipDialog.value = false\n  \n  // Update payment amounts after tip change\n  payments.value.forEach((payment, index) => validateAmount(index))\n}\n\nconst processPayment = async () => {\n  console.log(' [Payment] Starting payment processing...', {\n    isValid: isValid.value,\n    processing: processing.value,\n    invoiceTotal: invoiceTotal.value,\n    tipAmount: tipAmount.value,\n    payments: payments.value\n  })\n\n  if (!isValid.value || processing.value) {\n    console.log(' [Payment] Cannot process - validation failed or already processing')\n    return\n  }\n\n  processing.value = true\n  try {\n    console.log(' [Payment] Starting invoice creation with props:', {\n      invoice: props.invoice,\n      hasInvoiceData: !!props.invoice?.invoice,\n      invoiceTotal: invoiceTotal.value,\n      tipAmount: tipAmount.value\n    })\n\n    // Use the prepared invoice data\n    const holdInvoice = props.invoice.invoice\n    if (!holdInvoice) {\n      throw new Error('Invoice data not provided')\n    }\n    \n    // Calculate the total with tip (convert from dollars to cents for API)\n    const totalWithTip = invoiceTotal.value + tipAmount.value\n\n    console.log(' [Payment] Prepared hold invoice data:', {\n      id: holdInvoice.id,\n      total: totalWithTip,\n      originalTotal: holdInvoice.total,\n      tipAmount: tipAmount.value\n    })\n\n    // Format tip data according to API requirements\n    const tipPercentage = selectedTipPercent.value || Number(customTipPercent.value) || 0\n    holdInvoice.tip = String(Math.round(tipPercentage)) // Ensure clean integer string\n    holdInvoice.tip_type = \"percentage\"\n    holdInvoice.tip_val = tipAmount.value // Convert dollars to cents for API\n    holdInvoice.total = totalWithTip // Already in cents\n    holdInvoice.due_amount = totalWithTip // Already in cents\n    holdInvoice.sub_total = invoiceTotal.value // Already in cents\n    \n    // Log tip values for debugging\n    console.log('Tip values:', {\n      percentage: holdInvoice.tip,\n      type: holdInvoice.tip_type,\n      amount: holdInvoice.tip_val,\n      total: holdInvoice.total\n    })\n    \n    // Ensure other required fields are present\n    holdInvoice.is_hold_invoice = false\n    holdInvoice.is_invoice_pos = 1\n    holdInvoice.is_pdf_pos = true\n    holdInvoice.package_bool = false\n    holdInvoice.print_pdf = false\n    holdInvoice.save_as_draft = false\n    holdInvoice.send_email = false\n    holdInvoice.not_charge_automatically = false\n    holdInvoice.avalara_bool = false\n    holdInvoice.banType = true\n\n    // Set dates\n    const currentDate = new Date()\n    holdInvoice.invoice_date = currentDate.toISOString().split('T')[0]\n    const dueDate = new Date(currentDate)\n    dueDate.setDate(dueDate.getDate() + 7) // Default to 7 days\n    holdInvoice.due_date = dueDate.toISOString().split('T')[0]\n\n    // Create invoice with tip included\n    console.log(' [Payment] Converting held order to invoice...')\n    const invoiceResult = await convertHeldOrderToInvoice(holdInvoice)\n    console.log(' [Payment] Invoice creation result:', invoiceResult)\n    \n    if (!invoiceResult.success) {\n      console.error(' [Payment] Failed to create invoice:', invoiceResult)\n      throw new Error('Failed to create invoice')\n    }\n\n    console.log('Created invoice:', invoiceResult)\n\n    // Add to held orders if in create-invoice-only mode\n    if (props.createInvoiceOnly) {\n      try {\n        const heldOrderData = {\n          ...invoiceResult.invoice,\n          is_hold_invoice: true,\n          status: 'HELD',\n          description: invoiceResult.invoice.description || 'Delivery Order'\n        }\n        \n        // Add to held orders through the API\n        const holdResult = await posApi.holdInvoice.create(heldOrderData)\n        \n        if (!holdResult.success) {\n          throw new Error('Failed to add invoice to held orders')\n        }\n\n        window.toastr?.['success']('Invoice created and added to held orders')\n        emit('payment-complete', true)\n        dialog.value = false\n        return\n      } catch (err) {\n        console.error('Failed to add to held orders:', err)\n        throw new Error('Failed to add invoice to held orders')\n      }\n    }\n\n    // Format payments for API - amounts are already in cents\n    const formattedPayments = payments.value.map(payment => ({\n      method_id: payment.method_id,\n      amount: payment.amount, // Already in cents\n      received: payment.received, // Already in cents\n      returned: payment.returned, // Already in cents\n      fees: payment.fees || 0\n    }))\n    console.log(' [Payment] Formatted payments:', formattedPayments)\n\n    // Validate total payment amount matches invoice total (in cents)\n    const totalPaymentAmount = formattedPayments.reduce((sum, payment) => sum + payment.amount, 0)\n    if (totalPaymentAmount !== totalWithTip) {\n      throw new Error('Payment amount must match invoice total including tip')\n    }\n\n    // Create payment using the created invoice\n    console.log(' [Payment] Creating payment...')\n    const result = await createPayment(invoiceResult.invoice, formattedPayments)\n    console.log(' [Payment] Payment creation result:', result)\n    \n    // Show invoice PDF in modal\n    if (result?.invoice_id) {\n      console.log('📄 [Invoice PDF] Starting PDF preparation', {\n        paymentResult: result,\n        invoiceResult: invoiceResult\n      });\n\n      // Get the invoice details from the nested structure\n      const invoice = invoiceResult?.invoice?.invoice || invoiceResult?.invoice;\n      \n      if (!invoice?.unique_hash) {\n        console.error('📄 [Invoice PDF] Missing invoice hash:', invoice);\n        window.toastr?.['error']('Could not generate invoice PDF');\n        return;\n      }\n\n      // Get invoice PDF URL directly from invoice response\n      const invoicePdfUrl = invoice.invoicePdfUrl || \n        `${import.meta.env.VITE_API_URL.replace('/api/v1', '')}/invoices/pdf/${invoice.unique_hash}`\n\n      console.log('📄 [Invoice PDF] Using invoice details:', {\n        invoiceId: invoice.id,\n        invoiceHash: invoice.unique_hash,\n        directPdfUrl: invoice.invoicePdfUrl,\n        constructedUrl: invoicePdfUrl,\n        fullInvoice: invoice\n      });\n\n      // Set PDF viewer state\n      console.log('📄 [Invoice PDF] Opening PDF viewer with URL:', invoicePdfUrl)\n      currentPdfUrl.value = invoicePdfUrl\n      showPdfViewer.value = true\n    } else {\n      console.error('💰 [Payment] Missing invoice ID in payment result:', result)\n      window.toastr?.['error']('Could not get invoice PDF')\n    }\n    \n    // Release tables if this was a dine-in order\n    if (invoiceResult.invoice.type === 'DINE_IN' && invoiceResult.invoice.tables_selected?.length) {\n      try {\n        await releaseTablesAfterPayment(invoiceResult.invoice.tables_selected)\n      } catch (err) {\n        console.error('Failed to release tables:', err)\n        // Don't throw error here, as payment was successful\n        window.toastr?.['warning']('Payment successful, but failed to update table status')\n      }\n    }\n    \n    // Emit success and close dialog\n    emit('payment-complete', result)\n    dialog.value = false\n  } catch (err) {\n    console.error(' [Payment] Payment failed:', err)\n    window.toastr?.['error'](err.message || 'Failed to process payment')\n  } finally {\n    processing.value = false\n  }\n}\n\n// Initialize\nwatch(() => dialog.value, async (newValue) => {\n  if (newValue) {\n    try {\n      // Get company settings\n      await fetchSettings()\n\n      // Reset payments array\n      payments.value = []\n      processing.value = false\n      \n      // Reset tip state\n      tipAmount.value = 0\n      selectedTipPercent.value = null\n      customTipPercent.value = ''\n      \n      // Fetch payment methods\n      await fetchPaymentMethods()\n    } catch (error) {\n      console.error('Failed to initialize payment dialog:', error)\n      window.toastr?.['error']('Failed to initialize payment')\n      dialog.value = false\n    }\n  }\n})\n</script>\n\n<style scoped>\n.modal-card {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: rgb(var(--v-theme-surface));\n}\n\n.v-toolbar {\n  position: relative;\n  z-index: 1;\n}\n\n.payment-content {\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  background-color: rgb(var(--v-theme-background));\n}\n\n.loading-state {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 300px;\n}\n\n.payment-container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 16px;\n}\n\n.invoice-summary-card {\n  position: sticky;\n  top: 16px;\n  z-index: 1;\n}\n\n.payment-methods-grid {\n  margin: -8px;\n}\n\n.payment-method-btn {\n  height: 64px !important;\n  border-radius: 12px;\n  text-transform: none;\n  letter-spacing: 0.5px;\n  font-size: 1rem;\n  font-weight: 500;\n  \n  &:hover {\n    transform: translateY(-2px);\n    transition: transform 0.2s ease;\n  }\n  \n  &.v-btn--disabled {\n    opacity: 0.7;\n  }\n}\n\n.active-payments-section {\n  margin-top: 24px;\n}\n\n.payment-section {\n  margin-bottom: 16px;\n  \n  .v-card {\n    border-radius: 12px;\n    transition: all 0.3s ease;\n    \n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n    }\n  }\n}\n\n.tip-button {\n  border-radius: 12px;\n  font-weight: 500;\n}\n\n.process-payment-footer {\n  position: sticky;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 16px;\n  background: rgb(var(--v-theme-surface));\n  border-top: thin solid rgba(var(--v-border-color), var(--v-border-opacity));\n  margin: 0 -16px -16px;\n}\n\n.process-payment-btn {\n  max-width: 600px;\n  margin: 0 auto;\n  border-radius: 12px;\n  text-transform: none;\n  letter-spacing: 0.5px;\n  font-size: 1.1rem;\n  font-weight: 500;\n}\n\n.error-alert {\n  position: fixed;\n  bottom: 88px;\n  left: 16px;\n  right: 16px;\n  z-index: 2;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n/* Touch-friendly form inputs */\n:deep(.v-text-field .v-field__input),\n:deep(.v-select .v-field__input) {\n  min-height: 44px;\n  padding-top: 8px;\n  font-size: 1rem;\n}\n\n:deep(.v-text-field .v-field__input input) {\n  font-size: 1rem;\n}\n\n/* Enhanced spacing and layout */\n:deep(.v-row) {\n  margin-bottom: 20px;\n}\n\n:deep(.v-col) {\n  padding: 12px;\n}\n\n/* Modern amount display styling */\n.amount-display {\n  margin-bottom: 24px;\n  \n  &__label {\n    font-size: 1rem;\n    font-weight: 500;\n    color: rgba(var(--v-theme-on-surface), 0.87);\n    margin-bottom: 8px;\n  }\n  \n  &__value-container {\n    background: rgb(var(--v-theme-surface));\n    border: 2px solid rgba(var(--v-theme-primary), 0.15);\n    border-radius: 16px;\n    padding: 16px 20px;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 0 2px 8px rgba(0,0,0,0.04);\n    \n    &:hover {\n      border-color: rgba(var(--v-theme-primary), 0.3);\n      box-shadow: 0 4px 12px rgba(0,0,0,0.08);\n      transform: translateY(-1px);\n    }\n    \n    &.is-error {\n      border-color: rgb(var(--v-theme-error));\n      background: linear-gradient(rgba(var(--v-theme-error), 0.02), rgba(var(--v-theme-error), 0.04));\n    }\n  }\n  \n  &__amount {\n    font-size: 2rem;\n    font-weight: 600;\n    color: rgb(var(--v-theme-on-surface));\n    font-feature-settings: \"tnum\";\n    font-variant-numeric: tabular-nums;\n    letter-spacing: -0.02em;\n    display: flex;\n    align-items: center;\n  }\n\n  &__input {\n    font-size: 2rem;\n    font-weight: 600;\n    color: rgb(var(--v-theme-on-surface));\n    font-feature-settings: \"tnum\";\n    font-variant-numeric: tabular-nums;\n    letter-spacing: -0.02em;\n    border: none;\n    background: transparent;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    \n    &:focus {\n      outline: none;\n    }\n    \n    /* Hide spinner buttons */\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    &[type=number] {\n      -moz-appearance: textfield;\n    }\n  }\n  \n  &__currency {\n    font-size: 2rem;\n    font-weight: 600;\n    color: rgba(var(--v-theme-on-surface), 0.87);\n    margin-right: 2px;\n  }\n  \n  &__error {\n    margin-top: 8px;\n    font-size: 0.875rem;\n    color: rgb(var(--v-theme-error));\n    display: flex;\n    align-items: center;\n    padding: 8px 12px;\n    background: rgba(var(--v-theme-error), 0.05);\n    border-radius: 8px;\n  }\n}\n\n/* Fade transition for error messages */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n  \n  :deep(.v-field__outline) {\n    --v-field-border-width: 2px;\n  }\n  \n  :deep(.v-label) {\n    position: absolute;\n    top: 8px;\n    left: 36px;\n    font-size: 0.875rem;\n    color: rgba(var(--v-theme-on-surface), 0.7);\n    background: transparent;\n    padding: 0;\n    margin: 0;\n    line-height: 1;\n    pointer-events: none;\n    transform: none !important;\n    opacity: 1;\n  }\n\n  :deep(.v-field--focused .v-label),\n  :deep(.v-field--active .v-label) {\n    color: rgb(var(--v-theme-primary));\n  }\n  \n  :deep(.currency-symbol) {\n    position: absolute;\n    left: 16px;\n    top: 58%;\n    transform: translateY(-50%);\n    color: rgba(var(--v-theme-on-surface), 0.85);\n    font-size: 1.25rem;\n    font-weight: 500;\n    z-index: 1;\n  }\n\n  :deep(.v-field) {\n    border-radius: 12px;\n    background-color: rgb(var(--v-theme-surface));\n    box-shadow: 0 2px 6px rgba(0,0,0,0.08);\n    transition: all 0.2s ease;\n\n    &:hover {\n      box-shadow: 0 4px 12px rgba(0,0,0,0.12);\n      transform: translateY(-1px);\n    }\n\n    &.v-field--focused {\n      box-shadow: 0 6px 16px rgba(var(--v-theme-primary), 0.2);\n      transform: translateY(-2px);\n      \n      .v-field__outline {\n        border-color: rgb(var(--v-theme-primary));\n        opacity: 1;\n      }\n    }\n  }\n\n  /* Improve number input appearance */\n  :deep(input[type=\"number\"]) {\n    font-feature-settings: \"tnum\";\n    font-variant-numeric: tabular-nums;\n  }\n\n/* Quick amount selection buttons */\n.denomination-btn {\n  min-height: 44px;\n  border-radius: 8px;\n  font-size: 1rem;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n}\n\n/* Payment section cards */\n.payment-section {\n  .v-card {\n    border-radius: 12px;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.05);\n    transition: all 0.3s ease;\n    \n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 8px 16px rgba(0,0,0,0.1);\n    }\n  }\n}\n\n/* Responsive adjustments */\n@media (max-width: 600px) {\n  .payment-input {\n    :deep(.v-field__input) {\n      font-size: 1rem;\n    }\n  }\n  \n  .denomination-btn {\n    min-height: 40px;\n    font-size: 0.95rem;\n  }\n}\n\n/* Dialog transition */\n.dialog-bottom-transition-enter-active,\n.dialog-bottom-transition-leave-active {\n  transition: transform 0.3s ease-in-out;\n}\n\n.dialog-bottom-transition-enter-from,\n.dialog-bottom-transition-leave-to {\n  transform: translateY(100%);\n}\n\n/* Responsive adjustments */\n@media (max-width: 960px) {\n  .payment-container {\n    padding: 12px;\n  }\n  \n  .process-payment-footer {\n    margin: 0 -12px -12px;\n  }\n  \n  .invoice-summary-card {\n    position: relative;\n    top: 0;\n  }\n}\n\n@media (max-width: 600px) {\n  .payment-method-btn {\n    height: 56px !important;\n  }\n  \n  :deep(.v-card-title) {\n    font-size: 1.1rem;\n  }\n  \n  :deep(.v-card-text) {\n    font-size: 0.95rem;\n  }\n}\n</style>\n","<!-- src/views/pos/components/dialogs/PaymentDialog.vue -->\n<template>\n  <v-dialog \n    v-model=\"dialog\" \n    fullscreen\n    transition=\"dialog-bottom-transition\"\n    :scrim=\"false\"\n    class=\"payment-dialog\"\n  >\n    <v-card class=\"modal-card\">\n      <v-toolbar \n        color=\"primary\"\n        :elevation=\"1\"\n      >\n        <v-toolbar-title class=\"text-h6 font-weight-medium\">\n          <v-icon icon=\"mdi-cash-register\" size=\"large\" class=\"mr-2\"></v-icon>\n          Process Payment\n        </v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn\n          color=\"primary\"\n          variant=\"text\"\n          class=\"mr-2\"\n          @click=\"loadToCart\"\n          :disabled=\"!canLoadToCart\"\n        >\n          <v-icon start>mdi-cart-arrow-down</v-icon>\n          Load to Cart\n        </v-btn>\n        <v-btn\n          icon=\"mdi-close\"\n          variant=\"text\"\n          @click=\"closeDialog\"\n          class=\"ml-2\"\n          size=\"large\"\n        ></v-btn>\n      </v-toolbar>\n\n      <div class=\"payment-content\">\n          <v-container class=\"payment-container\">\n          <!-- Loading State -->\n          <v-row v-if=\"loading\">\n            <v-col cols=\"12\">\n              <v-sheet class=\"pa-3\">\n                <v-skeleton-loader\n                  type=\"article, actions\"\n                  class=\"mx-auto\"\n                ></v-skeleton-loader>\n              </v-sheet>\n            </v-col>\n          </v-row>\n\n          <template v-else>\n            <v-row>\n              <!-- Left Column - Invoice Summary & Tip -->\n              <v-col cols=\"12\" md=\"4\">\n                <v-card\n                  variant=\"elevated\"\n                  class=\"invoice-summary-card mb-4\"\n                  elevation=\"2\"\n                >\n                  <v-card-item>\n                    <template v-slot:prepend>\n                      <v-icon\n                        icon=\"mdi-receipt\"\n                        size=\"large\"\n                        color=\"primary\"\n                        class=\"mr-4\"\n                      ></v-icon>\n                    </template>\n                    <v-card-title class=\"text-h6 pb-2\">\n                      Invoice Summary\n                    </v-card-title>\n                  </v-card-item>\n                  <v-divider></v-divider>\n                  <v-card-text class=\"py-4\">\n                    <div class=\"d-flex justify-space-between mb-2\">\n                      <span>Invoice Number:</span>\n                      <strong>{{ invoiceNumber }}</strong>\n                    </div>\n                    <div class=\"d-flex justify-space-between mb-2\">\n                      <span>Subtotal:</span>\n                      <strong>{{ formatCurrency(invoiceTotal) }}</strong>\n                    </div>\n                    <div class=\"d-flex justify-space-between mb-2\" v-if=\"tipAmount > 0\">\n                      <span>Tip:</span>\n                      <strong>{{ formatCurrency(tipAmount) }}</strong>\n                    </div>\n                    <div class=\"d-flex justify-space-between\">\n                      <span>Total Amount:</span>\n                      <strong>{{ formatCurrency(invoiceTotal + tipAmount) }}</strong>\n                    </div>\n                  </v-card-text>\n                </v-card>\n\n                <!-- Tip Button -->\n                <v-btn\n                  block\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  @click=\"showTipDialog = true\"\n                  class=\"mb-4\"\n                >\n                  {{ tipAmount > 0 ? `Update Tip (${formatCurrency(tipAmount / 100)})` : 'Add Tip' }}\n                </v-btn>\n              </v-col>\n\n              <!-- Right Column - Payment Methods -->\n              <v-col cols=\"12\" md=\"8\">\n                <div class=\"text-subtitle-1 mb-3 font-weight-medium\">Select Payment Method</div>\n                <v-row class=\"payment-methods-grid\">\n                  <v-col v-for=\"method in paymentMethods\" \n                         :key=\"method.id\" \n                         cols=\"6\" \n                         sm=\"4\">\n                    <v-btn\n                      block\n                      :color=\"isMethodSelected(method.id) ? 'primary' : undefined\"\n                      :variant=\"isMethodSelected(method.id) ? 'flat' : 'outlined'\"\n                      class=\"payment-method-btn\"\n                      height=\"64\"\n                      :disabled=\"isMethodDisabled(method.id)\"\n                      @click=\"selectPaymentMethod(method.id)\"\n                    >\n                      <v-icon :icon=\"getPaymentMethodIcon(method.name)\" class=\"mr-2\"></v-icon>\n                      {{ method.name }}\n                    </v-btn>\n                  </v-col>\n                </v-row>\n              </v-col>\n            </v-row>\n\n            <!-- Active Payment Methods -->\n            <v-row v-if=\"payments.length > 0\">\n              <v-col cols=\"12\">\n                <div v-for=\"(payment, index) in payments\" :key=\"index\" class=\"payment-section mb-4\">\n                  <v-card variant=\"outlined\" class=\"pa-4\">\n                    <div class=\"d-flex align-center mb-4\">\n                      <v-icon :icon=\"getPaymentMethodIcon(getPaymentMethod(payment.method_id)?.name)\" class=\"mr-2\"></v-icon>\n                      <span class=\"text-h6\">{{ getPaymentMethod(payment.method_id)?.name }}</span>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                        icon=\"mdi-close\"\n                        variant=\"text\"\n                        density=\"comfortable\"\n                        @click=\"removePayment(index)\"\n                      ></v-btn>\n                    </div>\n\n                  <!-- Amount Display -->\n                  <div class=\"amount-display\">\n                    <div class=\"amount-display__label\">Amount</div>\n                    <div class=\"amount-display__value-container\"\n                         :class=\"{ 'is-error': !isValidAmount(payment) }\">\n                      <div class=\"amount-display__amount\">\n                        <span class=\"amount-display__currency\">$</span>{{ PriceUtils.toDollars(payment.amount).toFixed(2) }}\n                      </div>\n                    </div>\n                    <transition name=\"fade\">\n                      <div v-if=\"!isValidAmount(payment)\" class=\"amount-display__error\">\n                        <v-icon icon=\"mdi-alert-circle\" size=\"small\" color=\"error\" class=\"mr-1\" />\n                        Full payment amount is required\n                      </div>\n                    </transition>\n                  </div>\n\n                  <!-- Cash Payment Fields -->\n                  <template v-if=\"isCashOnly(payment.method_id)\">\n                    <!-- Denominations Grid -->\n                    <div v-if=\"getDenominations(payment.method_id)?.length\" class=\"mb-4\">\n                      <div class=\"text-subtitle-2 mb-2\">Quick Amount Selection</div>\n                      <v-row>\n                        <v-col v-for=\"money in getDenominations(payment.method_id)\" \n                              :key=\"money.id\" \n                              cols=\"4\" \n                              class=\"pa-1\">\n                          <v-btn block\n                                variant=\"outlined\"\n                                size=\"small\"\n                                @click=\"handleDenominationClick(money, index)\">\n                            {{ formatCurrency(PriceUtils.toCents(money.amount)) }}\n                          </v-btn>\n                        </v-col>\n                      </v-row>\n                    </div>\n\n                    <!-- Received Amount -->\n                    <div class=\"amount-display\">\n                      <div class=\"amount-display__label\">Amount Received</div>\n                      <div class=\"amount-display__value-container\"\n                           :class=\"{ 'is-error': !isValidReceivedAmount(payment) }\">\n                        <div class=\"amount-display__amount\">\n                          <span class=\"amount-display__currency\">$</span>\n                          <input\n                            v-model=\"payment.displayReceived\"\n                            type=\"number\"\n                            class=\"amount-display__input\"\n                            step=\"0.01\"\n                            min=\"0\"\n                            @input=\"calculateChange(index)\"\n                          />\n                        </div>\n                      </div>\n                      <transition name=\"fade\">\n                        <div v-if=\"!isValidReceivedAmount(payment)\" class=\"amount-display__error\">\n                          <v-icon icon=\"mdi-alert-circle\" size=\"small\" color=\"error\" class=\"mr-1\" />\n                          Received amount must be greater than or equal to payment amount\n                        </div>\n                      </transition>\n                    </div>\n\n                    <!-- Change Amount Display -->\n                    <v-card\n                      v-if=\"payment.returned > 0\"\n                      color=\"primary\"\n                      class=\"change-amount-card mb-2\"\n                    >\n                      <v-card-text class=\"pa-3\">\n                        <div class=\"d-flex justify-space-between align-center\">\n                          <span class=\"text-h6 font-weight-medium\">Change Due:</span>\n                          <span class=\"text-h5 font-weight-bold\">{{ formatCurrency(payment.returned / 100) }}</span>\n                        </div>\n                      </v-card-text>\n                    </v-card>\n                  </template>\n\n                  <!-- Payment Fees -->\n                  <div v-if=\"hasPaymentFees(payment.method_id)\" class=\"text-caption mb-2\">\n                    <div class=\"d-flex justify-space-between\">\n                      <span>Service Fee:</span>\n                      <strong>{{ formatCurrency(payment.fees / 100) }}</strong>\n                    </div>\n                    <div class=\"text-grey\">\n                      {{ getFeeDescription(payment.method_id, payment.amount) }}\n                    </div>\n                  </div>\n\n                  <v-divider v-if=\"index < payments.length - 1\" class=\"my-4\"></v-divider>\n                  </v-card>\n                </div>\n\n                <!-- Add Payment Method Button -->\n                <v-btn\n                  v-if=\"canAddMorePayments\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  class=\"mt-2\"\n                  @click=\"addPayment\"\n                >\n                  Add Payment Method\n                </v-btn>\n\n                <!-- Total with Fees -->\n                <v-card v-if=\"totalFees > 0\" variant=\"outlined\" class=\"mt-4\">\n                  <v-card-text>\n                    <div class=\"d-flex justify-space-between mb-2\">\n                      <span>Subtotal:</span>\n                      <strong>{{ formatCurrency(totalPayments / 100) }}</strong>\n                    </div>\n                    <div class=\"d-flex justify-space-between mb-2\">\n                      <span>Service Fees:</span>\n                      <strong>{{ formatCurrency(totalFees / 100) }}</strong>\n                    </div>\n                    <div class=\"d-flex justify-space-between\">\n                      <span>Total:</span>\n                      <strong>{{ formatCurrency((totalPayments + totalFees) / 100) }}</strong>\n                    </div>\n                  </v-card-text>\n                </v-card>\n              </v-col>\n            </v-row>\n\n            <!-- Error Message -->\n            <v-row v-if=\"error\">\n              <v-col cols=\"12\">\n                <v-alert type=\"error\" variant=\"tonal\">\n                  {{ error }}\n                </v-alert>\n              </v-col>\n            </v-row>\n          </template>\n        </v-container>\n        <PdfViewerDialog\n          v-model=\"showPdfViewer\"\n          :pdfUrl=\"currentPdfUrl\"\n          @closed=\"handlePdfViewerClosed\"\n        />\n      </div>\n\n      <v-card-actions class=\"pa-4\">\n        <v-btn\n          block\n          color=\"primary\"\n          variant=\"flat\"\n          size=\"large\"\n          height=\"56\"\n          :loading=\"processing\"\n          :disabled=\"!isValid || processing\"\n          @click=\"processPayment\"\n          class=\"process-payment-btn\"\n        >\n          Process Payment\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <!-- Tip Dialog -->\n  <v-dialog v-model=\"showTipDialog\" max-width=\"400px\">\n    <v-card>\n      <v-card-title class=\"text-h6\">\n        Select Tip Amount\n      </v-card-title>\n      <v-card-text>\n        <p class=\"text-subtitle-2 mb-4\">Choose a tip percentage or enter a custom amount.</p>\n        \n        <!-- Preset Tip Percentages -->\n        <v-row class=\"mb-4\">\n          <v-col v-for=\"percent in tipPercentages\" :key=\"percent\" cols=\"3\">\n            <v-btn\n              block\n              :variant=\"selectedTipPercent === percent ? 'flat' : 'outlined'\"\n              :color=\"selectedTipPercent === percent ? 'primary' : undefined\"\n              @click=\"selectTipPercent(percent)\"\n            >\n              {{ percent }}%\n            </v-btn>\n          </v-col>\n        </v-row>\n\n        <!-- Custom Tip Input -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-text-field\n              v-model=\"customTipPercent\"\n              label=\"Custom %\"\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              append-inner-text=\"%\"\n              @input=\"handleCustomTipInput\"\n            ></v-text-field>\n          </v-col>\n        </v-row>\n\n        <!-- Tip Amount Display -->\n        <v-row v-if=\"calculatedTip > 0\">\n          <v-col cols=\"12\">\n            <div class=\"d-flex justify-space-between\">\n              <span>Tip Amount:</span>\n              <strong>{{ formatCurrency(calculatedTip / 100) }}</strong>\n            </div>\n          </v-col>\n        </v-row>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"grey\" variant=\"text\" @click=\"cancelTip\">\n          Cancel\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"confirmTip\">\n          Confirm Tip\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { usePayment } from '../../composables/usePayment'\nimport { useTableManagement } from '../../composables/useTableManagement'\nimport { useCartStore } from '@/stores/cart-store'\nimport { useCompanyStore } from '@/stores/company'\nimport { convertHeldOrderToInvoice } from '../held-orders/utils/invoiceConverter'\nimport { posApi } from '@/services/api/pos-api'\nimport { PriceUtils } from '@/utils/price'\nimport PdfViewerDialog from '@/components/common/PdfViewerDialog.vue'\n\nconst cartStore = useCartStore()\nconst companyStore = useCompanyStore()\n\nconst props = defineProps({\n  modelValue: Boolean,\n  createInvoiceOnly: {\n    type: Boolean,\n    default: false\n  },\n  invoice: {\n    type: Object,\n    required: false,\n    default: () => ({\n      invoice: {},\n      invoicePrefix: '',\n      nextInvoiceNumber: ''\n    })\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'payment-complete'])\n\nconst {\n  loading: paymentLoading,\n  error: paymentError,\n  paymentMethods,\n  settings,\n  createPayment,\n  fetchPaymentMethods,\n  fetchSettings,\n  getDenominations,\n  calculateFees,\n  getPaymentMethod,\n  isCashOnly\n} = usePayment()\n\nconst {\n  loading: tableLoading,\n  error: tableError,\n  releaseTablesAfterPayment\n} = useTableManagement()\n\nconst loading = computed(() => paymentLoading.value || tableLoading.value)\nconst error = computed(() => paymentError.value || tableError.value)\n\nconst processing = ref(false)\nconst payments = ref([])\n\nconst canLoadToCart = computed(() => {\n  return ['DRAFT', 'SENT'].includes(props.invoice?.invoice?.status)\n})\n\nconst loadToCart = async () => {\n  try {\n    await cartStore.loadInvoice(props.invoice.invoice)\n    window.toastr?.success('Invoice loaded to cart successfully')\n    dialog.value = false\n  } catch (error) {\n    console.error('Failed to load invoice to cart:', error)\n    window.toastr?.error('Failed to load invoice to cart')\n  }\n}\n\n// Tip related state\nconst showTipDialog = ref(false)\nconst tipPercentages = [15, 18, 20, 25]\nconst selectedTipPercent = ref(null)\nconst customTipPercent = ref('')\nconst tipAmount = ref(0)\nconst tipType = ref('percentage')\nconst showPdfViewer = ref(false)\nconst currentPdfUrl = ref('')\n\n// Computed properties for invoice details\nconst invoiceNumber = computed(() => {\n  return props.invoice?.invoice?.invoice_number || \n         `${props.invoice?.invoicePrefix}-${props.invoice?.nextInvoiceNumber}` || \n         ''\n})\n\nconst invoiceTotal = computed(() => {\n  return PriceUtils.normalizePrice(props.invoice?.invoice?.total || 0)\n})\n\nconst calculatedTip = computed(() => {\n  const percent = selectedTipPercent.value || Number(customTipPercent.value) || 0\n  return Math.round((invoiceTotal.value * percent) / 100)\n})\n\n// Dialog computed property\nconst dialog = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value)\n})\n\nconst remainingAmount = computed(() => {\n  const totalPaid = payments.value.reduce((sum, payment) => {\n    return sum + PriceUtils.normalizePrice(payment.amount)\n  }, 0)\n  return PriceUtils.normalizePrice(invoiceTotal.value + tipAmount.value - totalPaid)\n})\n\nconst totalPayments = computed(() => {\n  return payments.value.reduce((sum, payment) => {\n    return sum + payment.amount\n  }, 0)\n})\n\nconst totalFees = computed(() => {\n  return payments.value.reduce((sum, payment) => {\n    return sum + (payment.fees || 0)\n  }, 0)\n})\n\nconst canAddMorePayments = computed(() => {\n  return remainingAmount.value > 0 && payments.value.length < paymentMethods.value.length\n})\n\nconst isValidAmount = (payment) => {\n  if (!payment.displayAmount) return false\n  if (Number(payment.displayAmount) <= 0) return false\n  return Number(payment.displayAmount) === PriceUtils.toDollars(invoiceTotal.value + tipAmount.value)\n}\n\nconst isValidReceivedAmount = (payment) => {\n  if (!payment.displayReceived) return false\n  return Number(payment.displayReceived) >= Number(payment.displayAmount)\n}\n\nconst isValid = computed(() => {\n  return payments.value.every(payment => {\n    if (!payment.method_id || !payment.amount) return false\n    if (isCashOnly(payment.method_id) && !payment.received) return false\n    if (!isValidAmount(payment)) return false\n    if (isCashOnly(payment.method_id) && !isValidReceivedAmount(payment)) return false\n    return true\n  }) && remainingAmount.value === 0\n})\n\n// Methods\nconst formatCurrency = (amount) => {\n  return PriceUtils.formatInvoiceAmount(amount)\n}\n\nconst handlePdfViewerClosed = () => {\n  showPdfViewer.value = false\n  currentPdfUrl.value = ''\n}\n\nconst hasPaymentFees = (methodId) => {\n  const method = getPaymentMethod(methodId)\n  return method?.IsPaymentFeeActive === 'YES'\n}\n\nconst getFeeDescription = (methodId, amount) => {\n  const method = getPaymentMethod(methodId)\n  if (!method?.registrationdatafees) return ''\n\n  const fees = method.registrationdatafees\n  switch (fees.type) {\n    case 'FIXED':\n      return `Fixed fee: ${formatCurrency(fees.value)}`\n    case 'PERCENTAGE':\n      return `${fees.value}% of transaction amount`\n    case 'FIXED_PLUS_PERCENTAGE':\n      return `${formatCurrency(fees.value.fixed)} + ${fees.value.percentage}% of transaction amount`\n    default:\n      return ''\n  }\n}\n\nconst getPaymentMethodIcon = (methodName) => {\n  const icons = {\n    'Cash': 'mdi-cash',\n    'Credit Card': 'mdi-credit-card',\n    'Debit Card': 'mdi-credit-card-outline',\n    'Check': 'mdi-checkbox-marked-circle-outline',\n    'Gift Card': 'mdi-gift',\n    'Mobile Payment': 'mdi-cellphone',\n    'Bank Transfer': 'mdi-bank',\n  }\n  return icons[methodName] || 'mdi-currency-usd'\n}\n\nconst isMethodSelected = (methodId) => {\n  return payments.value.some(payment => payment.method_id === methodId)\n}\n\nconst isMethodDisabled = (methodId) => {\n  return isMethodSelected(methodId) || payments.value.length >= paymentMethods.value.length\n}\n\nconst selectPaymentMethod = (methodId) => {\n  if (isMethodSelected(methodId) || isMethodDisabled(methodId)) return\n  \n  // Add new payment with remaining amount\n  const remaining = remainingAmount.value\n  const displayAmount = (remaining / 100).toString()\n  \n  payments.value.push({\n    method_id: methodId,\n    amount: remaining,\n    displayAmount,\n    received: remaining,\n    displayReceived: displayAmount,\n    returned: 0,\n    fees: 0\n  })\n  \n  validateAmount(payments.value.length - 1)\n}\n\nconst handleDenominationClick = (money, index) => {\n  const payment = payments.value[index]\n  payment.displayReceived = money.amount.toString()\n  payment.received = Math.round(Number(money.amount) * 100)\n  calculateChange(index)\n}\n\nconst calculateChange = (index) => {\n  const payment = payments.value[index]\n  if (!payment.displayReceived || !payment.displayAmount) return\n\n  const received = Math.round(Number(payment.displayReceived) * 100)\n  const amount = payment.amount\n  \n  payment.received = received\n  \n  if (received >= amount) {\n    payment.returned = received - amount\n  } else {\n    payment.returned = 0\n  }\n}\n\nconst validateAmount = (index) => {\n  const payment = payments.value[index]\n  if (!payment.displayAmount) return\n\n  // Set full payment amount including tip\n  payment.displayAmount = ((invoiceTotal.value + tipAmount.value) / 100).toString()\n\n  // Convert display amount to cents\n  payment.amount = Math.round(Number(payment.displayAmount) * 100)\n\n  // Calculate fees if applicable\n  if (hasPaymentFees(payment.method_id)) {\n    payment.fees = calculateFees(payment.method_id, payment.amount)\n  }\n\n  // Set initial received amount for cash payments\n  if (isCashOnly(payment.method_id)) {\n    payment.displayReceived = payment.displayAmount\n    payment.received = payment.amount\n    payment.returned = 0\n  }\n}\n\nconst addPayment = () => {\n  payments.value.push({ \n    method_id: null, \n    amount: 0,\n    displayAmount: ((invoiceTotal.value + tipAmount.value) / 100).toString(), // Include tip\n    received: 0,\n    displayReceived: '0',\n    returned: 0,\n    fees: 0 \n  })\n}\n\nconst removePayment = (index) => {\n  payments.value.splice(index, 1)\n  // Recalculate amounts for remaining payments\n  payments.value.forEach((payment, idx) => validateAmount(idx))\n}\n\nconst closeDialog = () => {\n  if (!processing.value) {\n    dialog.value = false\n  }\n}\n\n// Tip related methods\nconst selectTipPercent = (percent) => {\n  selectedTipPercent.value = percent\n  customTipPercent.value = ''\n}\n\nconst handleCustomTipInput = () => {\n  selectedTipPercent.value = null\n}\n\nconst cancelTip = () => {\n  showTipDialog.value = false\n  selectedTipPercent.value = null\n  customTipPercent.value = ''\n}\n\nconst confirmTip = () => {\n  tipAmount.value = calculatedTip.value\n  tipType.value = 'percentage'\n  showTipDialog.value = false\n  \n  // Update payment amounts after tip change\n  payments.value.forEach((payment, index) => validateAmount(index))\n}\n\nconst processPayment = async () => {\n  console.log('PaymentDialog: Starting payment processing', {\n    isValid: isValid.value,\n    processing: processing.value,\n    invoiceTotal: invoiceTotal.value,\n    tipAmount: tipAmount.value,\n    payments: payments.value,\n    invoice: props.invoice\n  })\n\n  if (!isValid.value || processing.value) {\n    console.log('PaymentDialog: Cannot process - validation failed or already processing')\n    return\n  }\n\n  processing.value = true\n  try {\n    console.log('PaymentDialog: Starting invoice creation with props:', {\n      invoice: props.invoice,\n      hasInvoiceData: !!props.invoice?.invoice,\n      invoiceTotal: invoiceTotal.value,\n      tipAmount: tipAmount.value\n    })\n\n    let finalInvoice\n    const invoiceData = props.invoice?.invoice || props.invoice\n\n    if (!invoiceData) {\n      throw new Error('Invoice data not provided')\n    }\n\n    console.log('PaymentDialog: Processing invoice data:', {\n      invoiceData,\n      isHoldInvoice: invoiceData.is_hold_invoice,\n      total: invoiceData.total,\n      dueAmount: invoiceData.due_amount\n    })\n\n    // Calculate the total with tip\n    const totalWithTip = invoiceTotal.value + tipAmount.value\n    const tipPercentage = selectedTipPercent.value || Number(customTipPercent.value) || 0\n\n    // Check if we're dealing with a hold invoice or a regular invoice\n    if (invoiceData.is_hold_invoice) {\n      console.log('PaymentDialog: Processing hold invoice conversion')\n      \n      // First convert the hold invoice to a regular invoice\n      const holdInvoice = {\n        ...invoiceData,\n        tip: String(Math.round(tipPercentage)),\n        tip_type: \"percentage\",\n        tip_val: tipAmount.value,\n        total: totalWithTip,\n        due_amount: totalWithTip,\n        sub_total: invoiceTotal.value\n      }\n\n      // Convert hold invoice to regular invoice using the converter\n      const invoiceResult = await convertHeldOrderToInvoice(holdInvoice)\n      \n      if (!invoiceResult.success) {\n        console.error('Hold invoice conversion failed:', invoiceResult.error)\n        throw new Error(invoiceResult.error || 'Failed to create invoice from hold order')\n      }\n\n      // Log the conversion result\n      console.log('Hold invoice converted successfully:', {\n        holdInvoiceId: holdInvoice.id,\n        newInvoiceId: invoiceResult.invoice.id,\n        invoiceNumber: invoiceResult.invoice.invoice_number\n      })\n\n      // Structure the final invoice with the new invoice data\n      finalInvoice = {\n        invoice: {\n          ...invoiceResult.invoice,\n          // Ensure we use the new invoice ID and number\n          id: invoiceResult.invoice.id,\n          invoice_number: invoiceResult.invoice.invoice_number,\n          // Preserve reference to original hold invoice\n          hold_invoice_id: holdInvoice.id,\n          // Include payment-specific fields\n          tip: String(Math.round(tipPercentage)),\n          tip_type: \"percentage\",\n          tip_val: tipAmount.value,\n          total: totalWithTip,\n          due_amount: totalWithTip,\n          sub_total: invoiceTotal.value\n        }\n      }\n    } else {\n      // Process regular invoice\n      finalInvoice = {\n        invoice: {\n          ...invoiceData,\n          tip: String(Math.round(tipPercentage)),\n          tip_type: \"percentage\",\n          tip_val: tipAmount.value,\n          total: totalWithTip,\n          due_amount: totalWithTip,\n          sub_total: invoiceTotal.value\n        }\n      }\n    }\n\n    // Add to held orders if in create-invoice-only mode\n    if (props.createInvoiceOnly) {\n      try {\n        const heldOrderData = {\n          ...finalInvoice,\n          is_hold_invoice: true,\n          status: 'HELD',\n          description: finalInvoice.description || 'Delivery Order'\n        }\n        \n        // Add to held orders through the API\n        const holdResult = await posApi.holdInvoice.create(heldOrderData)\n        \n        if (!holdResult.success) {\n          throw new Error('Failed to add invoice to held orders')\n        }\n\n        window.toastr?.['success']('Invoice created and added to held orders')\n        emit('payment-complete', true)\n        dialog.value = false\n        return\n      } catch (err) {\n        console.error('Failed to add to held orders:', err)\n        throw new Error('Failed to add invoice to held orders')\n      }\n    }\n\n    // Get current company store\n    const companyStore = useCompanyStore()\n\n    // Format payments for API - amounts are already in cents\n    const formattedPayments = payments.value.map(payment => ({\n      method_id: payment.method_id,\n      name: getPaymentMethod(payment.method_id).name,\n      amount: payment.amount,\n      received: payment.received,\n      returned: payment.returned,\n      valid: true\n    }))\n\n    // Validate total payment amount matches invoice total\n    const totalPaymentAmount = formattedPayments.reduce((sum, payment) => sum + payment.amount, 0)\n    console.log('Payment validation:', {\n      totalPaymentAmount,\n      totalWithTip,\n      difference: Math.abs(totalPaymentAmount - totalWithTip)\n    })\n    \n    if (Math.abs(totalPaymentAmount - totalWithTip) > 1) { // Allow for 1 cent rounding difference\n      throw new Error(`Payment amount (${totalPaymentAmount}) must match invoice total including tip (${totalWithTip})`)\n    }\n\n    // Create payment using the final invoice\n    console.log('Final invoice for payment:', finalInvoice)\n    \n    // Ensure we have the correct invoice ID and number\n    const invoiceId = finalInvoice.invoice?.id || finalInvoice.id\n    const invoiceNumber = finalInvoice.invoice?.invoice_number || finalInvoice.invoice_number || invoiceId\n    \n    if (!invoiceId) {\n      throw new Error('Invalid invoice: missing ID')\n    }\n\n    console.log('PaymentDialog: Final invoice details:', {\n      invoiceId,\n      invoiceNumber,\n      total: finalInvoice.total || finalInvoice.invoice?.total,\n      dueAmount: finalInvoice.due_amount || finalInvoice.invoice?.due_amount\n    })\n\n    console.log('Processing payment with:', {\n      invoiceId,\n      invoiceNumber,\n      finalInvoice,\n      payments: formattedPayments\n    })\n\n    // Create payment with the correct invoice reference\n    const result = await createPayment({\n      ...finalInvoice,\n      id: invoiceId,\n      invoice_number: invoiceNumber\n    }, formattedPayments)\n    \n    // Release tables if this was a dine-in order\n    if (finalInvoice.type === 'DINE_IN' && finalInvoice.tables_selected?.length) {\n      try {\n        await releaseTablesAfterPayment(invoiceResult.invoice.tables_selected)\n      } catch (err) {\n        console.error('Failed to release tables:', err)\n        // Don't throw error here, as payment was successful\n        window.toastr?.['warning']('Payment successful, but failed to update table status')\n      }\n    }\n    \n    try {\n      // Get invoice details from the result\n      const invoice = finalInvoice?.invoice?.invoice || finalInvoice?.invoice\n      \n      if (!invoice?.unique_hash) {\n        console.error('📄 [Invoice PDF] Missing invoice hash:', invoice)\n        throw new Error('Could not generate invoice PDF: Missing invoice hash')\n      }\n\n      // Get invoice PDF URL with fallback\n      const invoicePdfUrl = invoice.invoicePdfUrl || \n        `${import.meta.env.VITE_API_URL.replace('/api/v1', '')}/invoices/pdf/${invoice.unique_hash}`\n\n      console.log('📄 [Invoice PDF] Opening PDF viewer with URL:', invoicePdfUrl)\n      currentPdfUrl.value = invoicePdfUrl\n      showPdfViewer.value = true\n\n      // Emit success with invoice PDF URL\n      emit('payment-complete', { ...result, invoicePdfUrl })\n      dialog.value = false\n    } catch (error) {\n      console.error('📄 [Invoice PDF] Failed to display invoice:', error)\n      window.toastr?.['error'](error.message || 'Failed to display invoice PDF')\n      \n      // Still emit success since payment was successful\n      emit('payment-complete', result)\n      dialog.value = false\n    }\n  } catch (error) {\n    console.error('Payment processing error:', error)\n    window.toastr?.['error'](error.message || 'Failed to process payment')\n  } finally {\n    processing.value = false\n  }\n}\n\n// Initialize\nwatch(() => dialog.value, async (newValue) => {\n  if (newValue) {\n    try {\n      // Get company settings\n      await fetchSettings()\n\n      // Reset payments array\n      payments.value = []\n      processing.value = false\n      \n      // Reset tip state\n      tipAmount.value = 0\n      selectedTipPercent.value = null\n      customTipPercent.value = ''\n      \n      // Fetch payment methods\n      await fetchPaymentMethods()\n    } catch (error) {\n      console.error('Failed to initialize payment dialog:', error)\n      window.toastr?.['error']('Failed to initialize payment')\n      dialog.value = false\n    }\n  }\n})\n</script>\n\n<style scoped>\n/* Modern amount display styling */\n.amount-display {\n  margin-bottom: 24px;\n  \n  &__label {\n    font-size: 1rem;\n    font-weight: 500;\n    color: rgba(var(--v-theme-on-surface), 0.87);\n    margin-bottom: 8px;\n  }\n  \n  &__value-container {\n    background: rgb(var(--v-theme-surface));\n    border: 2px solid rgba(var(--v-theme-primary), 0.15);\n    border-radius: 16px;\n    padding: 16px 20px;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 0 2px 8px rgba(0,0,0,0.04);\n    \n    &:hover {\n      border-color: rgba(var(--v-theme-primary), 0.3);\n      box-shadow: 0 4px 12px rgba(0,0,0,0.08);\n      transform: translateY(-1px);\n    }\n    \n    &.is-error {\n      border-color: rgb(var(--v-theme-error));\n      background: linear-gradient(rgba(var(--v-theme-error), 0.02), rgba(var(--v-theme-error), 0.04));\n    }\n  }\n  \n  &__amount {\n    font-size: 2rem;\n    font-weight: 600;\n    color: rgb(var(--v-theme-on-surface));\n    font-feature-settings: \"tnum\";\n    font-variant-numeric: tabular-nums;\n    letter-spacing: -0.02em;\n    display: flex;\n    align-items: center;\n  }\n  \n  &__currency {\n    font-size: 2rem;\n    font-weight: 600;\n    color: rgba(var(--v-theme-on-surface), 0.87);\n    margin-right: 2px;\n  }\n\n  &__input {\n    font-size: 2rem;\n    font-weight: 600;\n    color: rgb(var(--v-theme-on-surface));\n    font-feature-settings: \"tnum\";\n    font-variant-numeric: tabular-nums;\n    letter-spacing: -0.02em;\n    border: none;\n    background: transparent;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    \n    &:focus {\n      outline: none;\n    }\n    \n    /* Hide spinner buttons */\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    &[type=number] {\n      -moz-appearance: textfield;\n    }\n  }\n\n  &__error {\n    margin-top: 8px;\n    font-size: 0.875rem;\n    color: rgb(var(--v-theme-error));\n    display: flex;\n    align-items: center;\n    padding: 8px 12px;\n    background: rgba(var(--v-theme-error), 0.05);\n    border-radius: 8px;\n  }\n}\n\n/* Fade transition for error messages */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.modal-card {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: rgb(var(--v-theme-surface));\n}\n\n.v-toolbar {\n  position: relative;\n  z-index: 1;\n}\n\n.payment-content {\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  background-color: rgb(var(--v-theme-background));\n}\n\n.payment-container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 16px;\n}\n\n.invoice-summary-card {\n  position: sticky;\n  top: 16px;\n  z-index: 1;\n  background: linear-gradient(145deg, var(--v-surface-variant) 0%, var(--v-surface-base) 100%);\n  border-radius: 12px;\n  transition: all 0.3s ease;\n}\n\n.invoice-summary-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 12px rgba(0,0,0,0.1);\n}\n\n.payment-method-btn {\n  height: 64px !important;\n  border-radius: 12px;\n  text-transform: none;\n  letter-spacing: 0.5px;\n  font-size: 1rem;\n  font-weight: 500;\n  \n  &:hover {\n    transform: translateY(-2px);\n    transition: transform 0.2s ease;\n  }\n  \n  &.v-btn--disabled {\n    opacity: 0.7;\n  }\n}\n\n.payment-method-btn:hover {\n  transform: translateY(-2px);\n}\n\n.v-card-text {\n  font-size: 1.1rem;\n  line-height: 1.6;\n}\n\n/* Responsive Typography */\n.text-h5 {\n  font-size: 1.1rem !important;\n  font-weight: 500;\n}\n\n.text-h6 {\n  font-size: 1rem !important;\n  font-weight: 500;\n}\n\n.text-subtitle-1 {\n  font-size: 0.9rem !important;\n}\n\n/* Touch Targets */\n@media (max-width: 600px) {\n  .payment-method-btn {\n    min-height: 56px;\n    width: 100%;\n  }\n  \n  .v-btn {\n    min-height: 48px;\n  }\n  \n  .v-text-field :deep(input) {\n    font-size: 16px !important; /* Prevent zoom on iOS */\n  }\n}\n\n/* Transitions */\n.v-enter-active,\n.v-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.v-enter-from,\n.v-leave-to {\n  opacity: 0;\n}\n\n.v-card-title {\n  font-size: 1.2rem !important;\n  padding: 16px 20px !important;\n}\n\n.text-h5 {\n  font-size: 1.2rem !important;\n}\n\n.text-h6 {\n  font-size: 1.1rem !important;\n}\n\n.text-subtitle-1 {\n  font-size: 1rem !important;\n  font-weight: 500;\n}\n\n.text-subtitle-2 {\n  font-size: 0.9rem !important;\n}\n\n.payment-method-btn {\n  text-transform: none;\n  letter-spacing: normal;\n  font-size: 1rem;\n  height: 60px !important;\n}\n\n.payment-method-btn .v-icon {\n  font-size: 1.8rem;\n  margin-right: 12px;\n}\n\n.payment-section {\n  border-radius: 12px;\n  transition: all 0.3s ease;\n  margin-bottom: 24px !important;\n}\n\n.payment-section:hover {\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.v-text-field {\n  font-size: 1rem;\n}\n\n.v-text-field :deep(input) {\n  font-size: 1rem !important;\n}\n\n.v-text-field :deep(label) {\n  font-size: 0.9rem !important;\n}\n\n.v-btn {\n  font-size: 0.9rem;\n  padding: 0 16px;\n  height: 36px;\n}\n\n.v-btn--size-small {\n  height: 32px;\n  font-size: 0.85rem;\n}\n\n/* Responsive adjustments */\n@media (max-width: 960px) {\n  .payment-container {\n    padding: 12px;\n  }\n  \n  .process-payment-footer {\n    margin: 0 -12px -12px;\n  }\n  \n  .invoice-summary-card {\n    position: relative;\n    top: 0;\n  }\n}\n\n@media (max-width: 600px) {\n  .payment-method-btn {\n    height: 56px !important;\n  }\n  \n  :deep(.v-card-title) {\n    font-size: 1.1rem;\n  }\n  \n  :deep(.v-card-text) {\n    font-size: 0.95rem;\n  }\n  \n  .v-card {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .v-card-text {\n    flex: 1;\n    overflow-y: auto;\n  }\n}\n\n.process-payment-btn {\n  font-size: 1.1rem !important;\n  letter-spacing: 0.5px;\n  font-weight: 500;\n  border-radius: 12px;\n  text-transform: none;\n}\n\n.change-amount-card {\n  border-radius: 8px;\n  background: linear-gradient(135deg, var(--v-primary-base) 0%, var(--v-primary-darken1) 100%);\n  color: white !important;\n  \n  .v-card-text {\n    color: white !important;\n  }\n  \n  .text-h5 {\n    color: white !important;\n  }\n  \n  .text-h6 {\n    color: white !important;\n  }\n}\n\n/* Additional spacing improvements */\n.v-container {\n  padding: 8px;\n}\n\n.v-row {\n  margin-bottom: 8px;\n}\n\n.v-col {\n  padding: 2px;\n}\n\n.mb-2 {\n  margin-bottom: 8px !important;\n}\n\n.mb-4 {\n  margin-bottom: 16px !important;\n}\n\n.mr-2 {\n  margin-right: 8px !important;\n}\n\n.pa-4 {\n  padding: 16px !important;\n}\n</style>\n","<!-- src/views/pos/components/held-orders/components/OrderInvoicesTable.vue -->\n<template>\n  <div class=\"order-invoices-table\" :class=\"$attrs.class\">\n    <div class=\"table-container\">\n      <v-table\n        fixed-header\n        class=\"invoices-table\"\n      >\n        <thead>\n          <tr>\n            <th class=\"text-left date-col\">Date</th>\n            <th class=\"text-left invoice-col\">Invoice #</th>\n            <th class=\"text-left customer-col\">Customer</th>\n            <th class=\"text-left status-col\">Status</th>\n            <th class=\"text-left payment-col\">Payment</th>\n            <th class=\"text-right total-col\">Total</th>\n            <th class=\"text-center actions-col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"invoice in invoices\" :key=\"invoice.id\">\n            <td>{{ invoice?.created_at ? formatDate(invoice.created_at) : 'N/A' }}</td>\n            <td>{{ invoice?.invoice_number || 'N/A' }}</td>\n            <td class=\"text-truncate\">\n              {{ invoice?.contact?.name || invoice?.first_name || invoice?.name || 'Walk-in Customer' }}\n            </td>\n            <td>\n              <v-chip\n                :color=\"getStatusColor(invoice.status)\"\n                size=\"small\"\n                variant=\"flat\"\n                class=\"status-chip\"\n              >\n                {{ invoice.status }}\n              </v-chip>\n            </td>\n            <td>\n              <v-chip\n                :color=\"getPaidStatusColor(invoice.paid_status)\"\n                size=\"small\"\n                variant=\"flat\"\n                class=\"status-chip\"\n              >\n                {{ invoice.paid_status || 'UNPAID' }}\n              </v-chip>\n            </td>\n            <td class=\"text-right\">{{ PriceUtils.format(invoice.total) }}</td>\n            <td>\n              <div class=\"actions-wrapper\">\n                <v-btn\n                  v-if=\"invoice.paid_status === 'UNPAID'\"\n                  color=\"success\"\n                  size=\"small\"\n                  variant=\"flat\"\n                  @click=\"handlePayClick(invoice)\"\n                >\n                  <v-icon size=\"small\" class=\"mr-1\">mdi-cash-register</v-icon>\n                  PAY\n                </v-btn>\n                <v-btn\n                  color=\"info\"\n                  size=\"small\"\n                  variant=\"flat\"\n                  @click=\"showInvoiceDetails(invoice)\"\n                >\n                  <v-icon size=\"small\" class=\"mr-1\">mdi-information</v-icon>\n                  DETAILS\n                </v-btn>\n                <v-btn\n                  v-if=\"['DRAFT', 'SENT'].includes(invoice.status)\"\n                  color=\"primary\"\n                  size=\"small\"\n                  variant=\"flat\"\n                  @click=\"loadInvoiceToCart(invoice)\"\n                >\n                  <v-icon size=\"small\" class=\"mr-1\">mdi-cart-arrow-down</v-icon>\n                  LOAD TO CART\n                </v-btn>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </v-table>\n    </div>\n\n    <div v-if=\"showPagination\" class=\"pagination-container\">\n      <v-pagination\n        :model-value=\"page\"\n        @update:model-value=\"$emit('page-change', $event)\"\n        :length=\"totalPages\"\n        :total-visible=\"5\"\n      ></v-pagination>\n    </div>\n  </div>\n\n  <!-- Payment Confirmation Dialog -->\n  <v-dialog v-model=\"showConfirmDialog\" max-width=\"400\">\n    <v-card>\n      <v-card-title class=\"text-h6\">\n        Confirm Payment\n      </v-card-title>\n      <v-card-text>\n        Are you sure you want to process payment for invoice #{{ selectedInvoice?.invoice_number }}?\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          color=\"grey-darken-1\"\n          variant=\"text\"\n          @click=\"showConfirmDialog = false\"\n        >\n          Cancel\n        </v-btn>\n        <v-btn\n          color=\"success\"\n          @click=\"confirmPayment\"\n        >\n          Proceed to Payment\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <!-- Payment Dialog -->\n  <PaymentDialog\n    v-model=\"showPaymentDialog\"\n    :invoice=\"{\n      invoice: selectedInvoice,\n      invoicePrefix: selectedInvoice?.invoice_prefix || 'INV',\n      nextInvoiceNumber: selectedInvoice?.id\n    }\"\n    @payment-complete=\"handlePaymentComplete\"\n  />\n  <PdfViewerDialog\n      v-model=\"showPdfViewer\"\n      :pdfUrl=\"currentPdfUrl\"\n      @closed=\"handlePdfViewerClosed\"\n  />\n\n  <!-- Invoice Details Dialog -->\n  <v-dialog v-model=\"showDetailsDialog\" max-width=\"700\">\n    <v-card>\n      <v-toolbar color=\"primary\" density=\"comfortable\">\n        <v-toolbar-title class=\"text-h6\">\n          Invoice Details\n        </v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn icon=\"mdi-close\" variant=\"text\" @click=\"showDetailsDialog = false\" />\n      </v-toolbar>\n\n      <v-card-text class=\"pa-4\">\n        <template v-if=\"selectedInvoiceDetails\">\n          <!-- Basic Information -->\n          <v-row>\n            <v-col cols=\"12\" sm=\"6\">\n              <div class=\"text-subtitle-1 font-weight-bold mb-2\">Basic Information</div>\n              <div class=\"mb-2\">\n                <strong>Invoice Number:</strong> {{ selectedInvoiceDetails.invoice_number }}\n              </div>\n              <div class=\"mb-2\">\n                <strong>Date:</strong> {{ formatDate(selectedInvoiceDetails.created_at) }}\n              </div>\n              <div class=\"mb-2\">\n                <strong>Status:</strong>\n                <v-chip\n                  :color=\"getStatusColor(selectedInvoiceDetails.status)\"\n                  size=\"small\"\n                  class=\"text-uppercase ml-2\"\n                >\n                  {{ selectedInvoiceDetails.status }}\n                </v-chip>\n              </div>\n              <div class=\"mb-2\">\n                <strong>Payment Status:</strong>\n                <v-chip\n                  :color=\"getPaidStatusColor(selectedInvoiceDetails.paid_status)\"\n                  size=\"small\"\n                  class=\"text-uppercase ml-2\"\n                >\n                  {{ selectedInvoiceDetails.paid_status || 'UNPAID' }}\n                </v-chip>\n              </div>\n            </v-col>\n            <v-col cols=\"12\" sm=\"6\">\n              <div class=\"text-subtitle-1 font-weight-bold mb-2\">Customer Information</div>\n              <div class=\"mb-2\">\n                <strong>Name:</strong> {{ selectedInvoiceDetails.contact?.name || selectedInvoiceDetails.first_name || selectedInvoiceDetails.name || 'N/A' }}\n              </div>\n              <div class=\"mb-2\">\n                <strong>Phone:</strong> {{ selectedInvoiceDetails.contact?.phone || selectedInvoiceDetails.customer?.phone || selectedInvoiceDetails.phone || 'N/A' }}\n              </div>\n              <div class=\"mb-2\">\n                <strong>Email:</strong> {{ selectedInvoiceDetails.contact?.email || selectedInvoiceDetails.email || 'N/A' }}\n              </div>\n            </v-col>\n          </v-row>\n\n          <!-- Items Table -->\n          <v-row class=\"mt-4\">\n            <v-col cols=\"12\">\n              <div class=\"text-subtitle-1 font-weight-bold mb-2\">Order Items</div>\n              <v-table density=\"comfortable\">\n                <thead>\n                  <tr>\n                    <th>Item</th>\n                    <th class=\"text-right\">Quantity</th>\n                    <th class=\"text-right\">Price</th>\n                    <th class=\"text-right\">Total</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"item in selectedInvoiceDetails.items\" :key=\"item.id\">\n                    <td>{{ item.name }}</td>\n                    <td class=\"text-right\">{{ item.quantity }}</td>\n                    <td class=\"text-right\">{{ PriceUtils.format(normalizePriceFromBackend(item.price)) }}</td>\n                    <td class=\"text-right\">{{ PriceUtils.format(normalizePriceFromBackend(item.total)) }}</td>\n                  </tr>\n                </tbody>\n              </v-table>\n            </v-col>\n          </v-row>\n\n          <!-- Totals -->\n          <v-row class=\"mt-4\">\n            <v-col cols=\"12\" sm=\"6\" offset-sm=\"6\">\n              <div class=\"d-flex justify-space-between mb-2\">\n                <strong>Subtotal:</strong>\n                <span>{{ PriceUtils.format(normalizePriceFromBackend(selectedInvoiceDetails.sub_total)) }}</span>\n              </div>\n              <div class=\"d-flex justify-space-between mb-2\">\n                <strong>Tax:</strong>\n                <span>{{ PriceUtils.format(normalizePriceFromBackend(selectedInvoiceDetails.tax)) }}</span>\n              </div>\n              <v-divider class=\"my-2\"></v-divider>\n              <div class=\"d-flex justify-space-between\">\n                <strong>Total:</strong>\n                <span>{{ PriceUtils.format(normalizePriceFromBackend(selectedInvoiceDetails.total)) }}</span>\n              </div>\n            </v-col>\n          </v-row>\n\n          <!-- Notes -->\n          <v-row v-if=\"selectedInvoiceDetails.notes\" class=\"mt-4\">\n            <v-col cols=\"12\">\n              <div class=\"text-subtitle-1 font-weight-bold mb-2\">Notes</div>\n              <v-card variant=\"outlined\" class=\"pa-3\">\n                {{ selectedInvoiceDetails.notes }}\n              </v-card>\n            </v-col>\n          </v-row>\n        </template>\n      </v-card-text>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport PaymentDialog from '../../../components/dialogs/PaymentInvoiceDialog.vue'\nimport PdfViewerDialog from '@/components/common/PdfViewerDialog.vue'\nimport { PriceUtils } from '@/utils/price'\nimport { ref, computed, watch } from 'vue'\nimport { useCartStore } from '@/stores/cart-store'\n\nconst props = defineProps({\n  invoices: {\n    type: Array,\n    required: true,\n    default: () => []\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  },\n  page: {\n    type: Number,\n    default: 1\n  },\n  totalPages: {\n    type: Number,\n    default: 1\n  },\n  getOrderType: {\n    type: Function,\n    required: false\n  },\n  getOrderTypeColor: {\n    type: Function,\n    required: false\n  },\n  formatDate: {\n    type: Function,\n    required: false\n  },\n  showPagination: {\n    type: Boolean,\n    default: false\n  },\n  selectedFilter: {\n    type: String,\n    default: 'all'\n  }\n})\n\nconst cartStore = useCartStore()\n\n// Log initial props\nconsole.log('OrderInvoicesTable - Initial props:', {\n  invoicesCount: props.invoices.length,\n  loading: props.loading,\n  page: props.page,\n  totalPages: props.totalPages\n})\n\n// Watch for invoice changes\nwatch(() => props.invoices, (newInvoices, oldInvoices) => {\n  console.log('OrderInvoicesTable - Invoices changed:', {\n    oldCount: oldInvoices?.length || 0,\n    newCount: newInvoices.length,\n    invoices: newInvoices.map(invoice => ({\n      id: invoice.id,\n      invoice_number: invoice.invoice_number,\n      status: invoice.status,\n      paid_status: invoice.paid_status,\n      total: invoice.total,\n      formatted_total: PriceUtils.format(invoice.total)\n    }))\n  })\n}, { deep: true })\n\nconst emit = defineEmits(['invoice-paid', 'page-change'])\n\n// Payment Dialog\nconst showPaymentDialog = ref(false)\nconst showConfirmDialog = ref(false)\nconst selectedInvoice = ref(null)\nconst showDetailsDialog = ref(false)\nconst selectedInvoiceDetails = ref(null)\nconst showPdfViewer = ref(false)\nconst currentPdfUrl = ref('')\n\n// Computed\nconst showPaginationComputed = computed(() => props.totalPages > 1)\n\n// Format date helper\nconst formatDate = (date) => {\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })\n}\n\n// Helper function to detect and normalize price\nconst normalizePriceFromBackend = (price) => {\n  if (!price) return 0;\n  // First ensure we have a valid number\n  const numericPrice = typeof price === 'string' ? parseFloat(price) : price;\n  \n  // If the price is already in cents (large number), convert to dollars for display\n  if (numericPrice > 1000) { // Threshold to detect if price is in cents\n    return PriceUtils.toDollars(numericPrice);\n  }\n  \n  // Otherwise, assume it's already in dollars\n  return numericPrice;\n}\n\nconst handlePdfViewerClosed = () => {\n  showPdfViewer.value = false\n  currentPdfUrl.value = ''\n}\n\nconst loadInvoiceToCart = async (invoice) => {\n  // Transform invoice data to match expected format\n  const transformedInvoice = {\n    ...invoice,\n    total: normalizePriceFromBackend(invoice.total),\n    hold_items: invoice.items?.map(item => ({\n      item_id: item.item_id || item.id, // Handle both formats\n      name: item.name,\n      description: item.description,\n      price: normalizePriceFromBackend(item.price),\n      total: normalizePriceFromBackend(item.total),\n      quantity: item.quantity,\n      unit_name: item.unit_name\n    })),\n    type: invoice.type || 'DINE_IN', // Default to DINE_IN if not specified\n  }\n\n  console.log('OrderInvoicesTable - Loading invoice to cart:', {\n    id: transformedInvoice.id,\n    invoice_number: transformedInvoice.invoice_number,\n    total: transformedInvoice.total,\n    formatted_total: PriceUtils.format(transformedInvoice.total),\n    items: transformedInvoice.hold_items?.map(item => ({\n      id: item.item_id,\n      name: item.name,\n      price: item.price,\n      formatted_price: PriceUtils.format(item.price),\n      quantity: item.quantity\n    }))\n  })\n\n  try {\n    await cartStore.loadInvoice(transformedInvoice)\n    window.toastr?.success('Invoice loaded to cart successfully')\n    console.log('OrderInvoicesTable - Invoice loaded to cart successfully:', {\n      invoice_id: transformedInvoice.id,\n      invoice_number: transformedInvoice.invoice_number\n    })\n    emit('page-change', 1)\n  } catch (error) {\n    console.error('OrderInvoicesTable - Failed to load invoice to cart:', error)\n    window.toastr?.error('Failed to load invoice to cart')\n  }\n}\n\nconst getStatusColor = (status) => {\n  const color = {\n    'DRAFT': 'grey',\n    'SENT': 'info',\n    'VIEWED': 'warning',\n    'EXPIRED': 'error',\n    'DECLINED': 'error',\n    'ACCEPTED': 'success',\n    'COMPLETED': 'success'\n  }[status?.toUpperCase()] || 'grey'\n\n  console.log('OrderInvoicesTable - Status color:', {\n    status,\n    color\n  })\n  \n  return color\n}\n\nconst getPaidStatusColor = (status) => {\n  const color = {\n    'PAID': 'success',\n    'PARTIALLY_PAID': 'warning',\n    'UNPAID': 'error'\n  }[status?.toUpperCase()] || 'error'\n\n  console.log('OrderInvoicesTable - Paid status color:', {\n    status,\n    color\n  })\n  \n  return color\n}\n\nconst showInvoiceDetails = async (invoice) => {\n  console.log('OrderInvoicesTable - Showing invoice details:', {\n    id: invoice.id,\n    invoice_number: invoice.invoice_number,\n    status: invoice.status,\n    paid_status: invoice.paid_status,\n    total: invoice.total,\n    formatted_total: PriceUtils.format(invoice.total)\n  })\n  \n  selectedInvoiceDetails.value = invoice\n  showDetailsDialog.value = true\n}\n\nconst handlePayClick = (invoice) => {\n  console.log('OrderInvoicesTable - Pay clicked:', {\n    id: invoice.id,\n    invoice_number: invoice.invoice_number,\n    total: invoice.total,\n    formatted_total: PriceUtils.format(invoice.total)\n  })\n  \n  selectedInvoice.value = invoice\n  showConfirmDialog.value = true\n}\n\nconst confirmPayment = () => {\n  console.log('OrderInvoicesTable - Payment confirmed:', {\n    invoice_id: selectedInvoice.value?.id,\n    invoice_number: selectedInvoice.value?.invoice_number\n  })\n  \n  showConfirmDialog.value = false\n  showPaymentDialog.value = true\n}\n\nconst handlePaymentComplete = async (result) => {\n  try {\n    console.log('OrderInvoicesTable - Payment completed:', {\n      result,\n      invoice_id: selectedInvoice.value?.id,\n      invoice_number: selectedInvoice.value?.invoice_number\n    })\n\n    // Get payment PDF URL from result\n    if (result?.invoicePdfUrl) {\n      console.log('📄 [Invoice PDF] Opening PDF viewer with URL:', result.invoicePdfUrl)\n      currentPdfUrl.value = result.invoicePdfUrl\n      showPdfViewer.value = true\n    } else {\n      console.warn('📄 [Invoice PDF] No payment PDF URL provided in result:', result)\n    }\n\n    // Close payment dialog and clean up\n    showPaymentDialog.value = false\n    selectedInvoice.value = null\n\n    // Emit success\n    emit('invoice-paid', result)\n  } catch (error) {\n    console.error('📄 [Invoice PDF] Failed to display invoice:', error)\n    window.toastr?.['error'](error.message || 'Failed to display invoice PDF')\n    \n    // Still emit success since payment was successful\n    showPaymentDialog.value = false\n    selectedInvoice.value = null\n    emit('invoice-paid', result)\n  }\n}\n</script>\n\n<style scoped>\n.order-invoices-table {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  background-color: rgb(var(--v-theme-background));\n}\n\n.table-container {\n  flex: 1;\n  min-height: 0;\n  overflow: auto;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n.invoices-table {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n:deep(.v-table) {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n:deep(.v-table__wrapper) {\n  flex: 1;\n  overflow: auto;\n}\n\n:deep(.v-table__wrapper > table) {\n  width: 100%;\n  border-spacing: 0;\n}\n\n:deep(.v-table__wrapper > table > thead) {\n  position: sticky;\n  top: 0;\n  z-index: 2;\n  background-color: rgb(var(--v-theme-surface));\n}\n\n:deep(.v-table__wrapper > table > thead > tr > th) {\n  font-weight: 600;\n  color: rgb(var(--v-theme-on-surface));\n  white-space: nowrap;\n  border-bottom: 1px solid rgba(var(--v-border-color), var(--v-border-opacity));\n  padding: 0 16px;\n  height: 48px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep(.v-table__wrapper > table > tbody > tr > td) {\n  padding: 0 16px;\n  height: 48px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep(.v-table__wrapper > table > tbody > tr:not(:last-child) > td) {\n  border-bottom: 1px solid rgba(var(--v-border-color), var(--v-border-opacity));\n}\n\n.pagination-container {\n  padding: 8px 0;\n  display: flex;\n  justify-content: center;\n  background-color: rgb(var(--v-theme-surface));\n  border-top: 1px solid rgba(var(--v-border-color), var(--v-border-opacity));\n}\n\n.actions-wrapper {\n  display: flex;\n  gap: 8px;\n  justify-content: flex-end;\n}\n\n.status-chip {\n  min-width: 80px;\n  justify-content: center;\n}\n\n.date-col {\n  width: 120px;\n}\n\n.invoice-col {\n  width: 120px;\n}\n\n.customer-col {\n  width: 200px;\n}\n\n.status-col {\n  width: 120px;\n}\n\n.payment-col {\n  width: 120px;\n}\n\n.total-col {\n  width: 100px;\n}\n\n.actions-col {\n  width: 280px;\n}\n</style>\n","<!-- src/views/pos/components/held-orders/HeldOrdersModal.vue -->\n<template>\n  <div class=\"held-orders-container\">\n    <v-btn\n      color=\"primary\"\n      prepend-icon=\"mdi-clipboard-list\"\n      @click=\"updateModelValue(true)\"\n      :disabled=\"disabled\"\n      class=\"text-none px-6 text-capitalize\"\n      rounded=\"pill\"\n      :elevation=\"$vuetify.display.mobile ? 1 : 2\"\n      size=\"large\"\n      :block=\"$vuetify.display.mobile\"\n    >\n      <span class=\"text-subtitle-1 font-weight-medium\">ORDERS</span>\n    </v-btn>\n\n    <v-dialog\n      :model-value=\"modelValue\"\n      @update:model-value=\"updateModelValue\"\n      fullscreen\n      transition=\"dialog-bottom-transition\"\n      :scrim=\"false\"\n    >\n      <v-card class=\"modal-card\">\n        <v-toolbar\n          color=\"primary\"\n          density=\"comfortable\"\n        >\n          <v-toolbar-title class=\"text-h6 font-weight-medium\">\n            Orders Management\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            @click=\"updateModelValue(false)\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n\n        <v-tabs\n          v-model=\"activeTab\"\n          bg-color=\"transparent\"\n          class=\"orders-tabs px-2\"\n          :show-arrows=\"false\"\n        >\n          <v-tab \n            value=\"active\" \n            class=\"tab-item flex-1 dine-in-tab\"\n            :class=\"{ 'tab-active': activeTab === 'active' }\"\n          >\n            <v-icon start>mdi-silverware</v-icon>\n            DINE IN | TOGO\n          </v-tab>\n          <v-tab \n            value=\"delivery\" \n            class=\"tab-item flex-1 delivery-tab\"\n            :class=\"{ 'tab-active': activeTab === 'delivery' }\"\n          >\n            <v-icon start>mdi-bike-fast</v-icon>\n            DELIVERY | PICKUP\n          </v-tab>\n          <v-tab \n            value=\"invoices\" \n            class=\"tab-item flex-1 history-tab\"\n            :class=\"{ 'tab-active': activeTab === 'invoices' }\"\n          >\n            <v-icon start>mdi-history</v-icon>\n            ORDER HISTORY\n          </v-tab>\n        </v-tabs>\n\n        <v-window v-model=\"activeTab\" class=\"window-content\">\n          <v-window-item value=\"active\" class=\"window-item\">\n            <held-orders-table\n              :invoices=\"filteredActiveOrders\"\n              :loading-order=\"loadingOrder\"\n              :converting-order=\"convertingOrder\"\n              :deleting-order=\"deletingOrder\"\n              :get-order-type=\"getOrderType\"\n              :get-order-type-color=\"getOrderTypeColor\"\n              :format-date=\"formatDate\"\n              :format-currency=\"formatCurrency\"\n              @load=\"handleLoadOrder\"\n              @convert=\"handleConvertOrder\"\n              @delete=\"handleDeleteOrder\"\n              @order-loaded=\"handleOrderLoaded\"\n              class=\"table-component\"\n            />\n          </v-window-item>\n\n          <v-window-item value=\"delivery\" class=\"window-item\">\n            <v-row no-gutters>\n              <v-col cols=\"12\">\n                <div class=\"filters-container\">\n                  <v-row>\n                    <v-col cols=\"12\" sm=\"4\">\n                      <v-text-field\n                        v-model=\"deliverySearch\"\n                        label=\"Search\"\n                        density=\"comfortable\"\n                        hide-details\n                        prepend-inner-icon=\"mdi-magnify\"\n                        variant=\"outlined\"\n                        class=\"mb-2\"\n                      />\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"4\">\n                      <v-select\n                        v-model=\"deliverySelectedStatus\"\n                        :items=\"['ALL', 'DRAFT', 'SENT', 'COMPLETED']\"\n                        label=\"Status\"\n                        density=\"comfortable\"\n                        hide-details\n                        variant=\"outlined\"\n                        class=\"mb-2\"\n                      />\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"4\">\n                      <v-select\n                        v-model=\"deliverySelectedPaymentStatus\"\n                        :items=\"['ALL', 'PAID', 'UNPAID']\"\n                        label=\"Payment Status\"\n                        density=\"comfortable\"\n                        hide-details\n                        variant=\"outlined\"\n                        class=\"mb-2\"\n                      />\n                    </v-col>\n                  </v-row>\n                </div>\n              </v-col>\n              <v-col cols=\"12\">\n                <order-invoices-table\n                  :loading=\"deliveryLoading\"\n                  :invoices=\"filteredDeliveryOrders\"\n                  :get-order-type=\"getOrderType\"\n                  :get-order-type-color=\"getOrderTypeColor\"\n                  :format-date=\"formatDate\"\n                  :show-pagination=\"true\"\n                  :page=\"deliveryPage\"\n                  :total-pages=\"totalDeliveryPages\"\n                  @update:page=\"(page) => deliveryPage = page\"\n                  @refresh=\"fetchInvoices\"\n                  @load=\"handleLoadOrder\"\n                  @order-loaded=\"handleOrderLoaded\"\n                  class=\"table-component\"\n                />\n              </v-col>\n            </v-row>\n          </v-window-item>\n\n          <v-window-item value=\"invoices\" class=\"window-item\">\n            <v-row no-gutters>\n              <v-col cols=\"12\">\n                <div class=\"filters-container\">\n                  <v-row>\n                    <v-col cols=\"12\" sm=\"4\">\n                      <v-text-field\n                        v-model=\"invoiceSearch\"\n                        label=\"Search\"\n                        density=\"comfortable\"\n                        hide-details\n                        prepend-inner-icon=\"mdi-magnify\"\n                        variant=\"outlined\"\n                        class=\"mb-2\"\n                      />\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"4\">\n                      <v-select\n                        v-model=\"invoiceSelectedStatus\"\n                        :items=\"['ALL', 'DRAFT', 'SENT', 'COMPLETED']\"\n                        label=\"Status\"\n                        density=\"comfortable\"\n                        hide-details\n                        variant=\"outlined\"\n                        class=\"mb-2\"\n                      />\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"4\">\n                      <v-select\n                        v-model=\"invoiceSelectedPaymentStatus\"\n                        :items=\"['ALL', 'PAID', 'UNPAID']\"\n                        label=\"Payment Status\"\n                        density=\"comfortable\"\n                        hide-details\n                        variant=\"outlined\"\n                        class=\"mb-2\"\n                      />\n                    </v-col>\n                  </v-row>\n                </div>\n              </v-col>\n              <v-col cols=\"12\">\n                <order-invoices-table\n                  :loading=\"invoicesLoading\"\n                  :invoices=\"filteredInvoiceOrders\"\n                  :get-order-type=\"getOrderType\"\n                  :get-order-type-color=\"getOrderTypeColor\"\n                  :format-date=\"formatDate\"\n                  :show-pagination=\"true\"\n                  :page=\"invoicePage\"\n                  :total-pages=\"totalInvoicePages\"\n                  @update:page=\"(page) => invoicePage = page\"\n                  @refresh=\"fetchInvoices\"\n                  @load=\"handleLoadOrder\"\n                  @order-loaded=\"handleOrderLoaded\"\n                  class=\"table-component\"\n                />\n              </v-col>\n            </v-row>\n          </v-window-item>\n        </v-window>\n      </v-card>\n    </v-dialog>\n\n    <DeleteConfirmationDialog\n      v-model=\"deleteDialog\"\n      :loading=\"isDeleting\"\n      :order-description=\"selectedInvoice?.description\"\n      @confirm=\"confirmDelete\"\n    />\n\n    <PaymentDialog\n      v-model=\"showPaymentDialog\"\n      :invoice=\"currentInvoice || {}\"\n      @payment-complete=\"handlePaymentComplete\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.modal-card {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: rgb(var(--v-theme-background));\n}\n\n.window-content {\n  flex: 1;\n  min-height: 0;\n  overflow: hidden;\n}\n\n.window-item {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.filters-container {\n  padding: 8px 16px;\n  background-color: rgb(var(--v-theme-background));\n  border-bottom: 1px solid rgb(var(--v-theme-divider));\n  margin: 0;\n}\n\n.filters-container :deep(.v-text-field),\n.filters-container :deep(.v-select) {\n  margin-bottom: 0 !important;\n}\n\n.filters-container :deep(.v-col) {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.table-component {\n  flex: 1;\n  min-height: 0;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.orders-tabs {\n  flex: 0 0 auto;\n  width: 100%;\n  display: flex;\n  background-color: rgb(var(--v-theme-primary));\n}\n\n.orders-tabs :deep(.v-tabs-bar) {\n  width: 100%;\n}\n\n.orders-tabs :deep(.v-slide-group__wrapper) {\n  width: 100%;\n}\n\n.orders-tabs :deep(.v-slide-group__content) {\n  width: 100%;\n  display: flex;\n  gap: 8px;\n}\n\n.tab-item {\n  flex: 1;\n  width: 100%;\n  justify-content: center;\n  text-transform: uppercase;\n  font-weight: 500;\n  letter-spacing: 0.0892857143em;\n  border-radius: 12px 12px 0 0 !important;\n  min-height: 56px;\n  transition: all 0.2s ease-in-out;\n  opacity: 0.85;\n  border: 2px solid transparent;\n  border-bottom: none;\n  font-size: 1rem;\n  padding-bottom: 8px;\n}\n\n.tab-item :deep(.v-tab__content) {\n  font-size: 1.1rem;\n  line-height: 1.2;\n}\n\n.tab-item :deep(.v-icon) {\n  font-size: 1.4rem;\n  margin-right: 8px;\n}\n\n.tab-item:hover {\n  opacity: 0.95;\n}\n\n.tab-active {\n  opacity: 1;\n  transform: translateY(4px);\n  padding-bottom: 12px;\n}\n\n.dine-in-tab {\n  background-color: #2196F3 !important;\n  color: white !important;\n}\n\n.dine-in-tab.tab-active {\n  background-color: #1976D2 !important;\n  border-color: #1565C0;\n}\n\n.delivery-tab {\n  background-color: #4CAF50 !important;\n  color: white !important;\n}\n\n.delivery-tab.tab-active {\n  background-color: #388E3C !important;\n  border-color: #2E7D32;\n}\n\n.history-tab {\n  background-color: #FF9800 !important;\n  color: white !important;\n}\n\n.history-tab.tab-active {\n  background-color: #F57C00 !important;\n  border-color: #EF6C00;\n}\n\n@media (max-width: 600px) {\n  .tab-item {\n    font-size: 0.95rem;\n    min-height: 48px;\n    padding-bottom: 6px;\n  }\n  \n  .tab-active {\n    padding-bottom: 10px;\n  }\n\n  .tab-item :deep(.v-icon) {\n    font-size: 1.2rem;\n  }\n  \n  .orders-tabs {\n    padding: 8px 8px 0 8px !important;\n  }\n  \n  .filters-container {\n    padding: 8px;\n  }\n  \n  .filters-container :deep(.v-col) {\n    padding: 4px;\n  }\n}\n</style>\n\n<script setup>\nimport { ref, watch, computed } from 'vue'\nimport { logger } from '../../../../utils/logger'\nimport { useHeldOrders } from './composables/useHeldOrders'\nimport { useInvoices } from './composables/useInvoices'\nimport { PriceUtils } from '@/utils/price'\nimport HeldOrdersFilters from './components/HeldOrdersFilters.vue'\nimport HeldOrdersTable from './components/HeldOrdersTable.vue'\nimport DeleteConfirmationDialog from './components/DeleteConfirmationDialog.vue'\nimport PaymentDialog from '../dialogs/PaymentDialog.vue'\nimport OrderInvoicesTable from './components/OrderInvoicesTable.vue'\nimport { PaidStatus } from '../../../../types/order'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    required: true\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:model-value'])\n\nconst deleteDialog = ref(false)\nconst isDeleting = ref(false)\nconst selectedInvoice = ref(null)\nconst activeTab = ref('active')\n\n// Active orders filters\nconst search = ref('')\nconst selectedStatus = ref('ALL')\n\n// Invoice filters\nconst invoiceSearch = ref('')\nconst invoiceSelectedStatus = ref('COMPLETED')\nconst invoiceSelectedPaymentStatus = ref('PAID')\nconst invoicePage = ref(1)\nconst invoiceItemsPerPage = ref(10)\n\n// Delivery & Pickup filters\nconst deliverySearch = ref('')\nconst deliverySelectedStatus = ref('SENT')\nconst deliverySelectedPaymentStatus = ref('UNPAID')\nconst deliveryPage = ref(1)\nconst deliveryLoading = ref(false)\n\nconst updateModelValue = (value) => {\n  emit('update:model-value', value)\n}\n\nconst {\n  loading: holdOrdersLoading,\n  loadingOrder,\n  deletingOrder,\n  convertingOrder,\n  holdInvoices,\n  getOrderType,\n  getOrderTypeColor,\n  formatDate,\n  formatCurrency,\n  convertToInvoice,\n  loadOrder,\n  deleteOrder,\n  fetchHoldInvoices,\n  showPaymentDialog,\n  currentInvoice,\n  handlePaymentComplete,\n  clearOrderHistory\n} = useHeldOrders()\n\nconst {\n  loading: invoicesLoading,\n  invoices,\n  error: invoicesError,\n  pagination: invoicesPagination,\n  fetchInvoices\n} = useInvoices()\n\nconst loading = computed(() => holdOrdersLoading || invoicesLoading)\n\n// Computed properties for active orders\nconst activeOrders = computed(() => \n  holdInvoices.value.filter(invoice => invoice.paid_status === PaidStatus.UNPAID)\n)\n\nconst filteredActiveOrders = computed(() => {\n  let filtered = activeOrders.value\n\n  if (selectedStatus.value !== 'ALL') {\n    filtered = filtered.filter(invoice => invoice.paid_status === selectedStatus.value)\n  }\n\n  if (search.value) {\n    const searchTerm = search.value.toLowerCase()\n    filtered = filtered.filter(invoice => \n      invoice.description?.toLowerCase().includes(searchTerm) ||\n      invoice.id?.toString().includes(searchTerm)\n    )\n  }\n\n  // Calculate pagination\n  const startIndex = (invoicePage.value - 1) * invoiceItemsPerPage.value\n  const paginatedData = filtered.slice(startIndex, startIndex + invoiceItemsPerPage.value)\n\n  return paginatedData\n})\n\nconst totalInvoicePages = computed(() => {\n  return invoicesPagination.value.lastPage || 1\n})\n\nconst filteredDeliveryOrders = computed(() => {\n  if (!Array.isArray(invoices.value)) {\n    logger.warn('Invoices is not an array:', invoices.value)\n    return []\n  }\n\n  let filtered = invoices.value\n\n  if (deliverySelectedStatus.value !== 'ALL') {\n    filtered = filtered.filter(invoice => \n      invoice?.status === deliverySelectedStatus.value\n    )\n  }\n\n  if (deliverySelectedPaymentStatus.value !== 'ALL') {\n    filtered = filtered.filter(invoice =>\n      invoice?.paid_status === deliverySelectedPaymentStatus.value\n    )\n  }\n\n  if (deliverySearch.value) {\n    const searchTerm = deliverySearch.value.toLowerCase()\n    filtered = filtered.filter(invoice => \n      invoice?.invoice_number?.toLowerCase().includes(searchTerm) ||\n      invoice?.customer?.name?.toLowerCase().includes(searchTerm) ||\n      invoice?.id?.toString().includes(searchTerm)\n    )\n  }\n\n  logger.debug('Filtered delivery orders:', {\n    total: invoices.value.length,\n    filtered: filtered.length,\n    filters: {\n      status: deliverySelectedStatus.value,\n      paymentStatus: deliverySelectedPaymentStatus.value,\n      search: deliverySearch.value\n    }\n  })\n\n  return filtered\n})\n\nconst totalDeliveryPages = computed(() => {\n  return invoicesPagination.value.lastPage || 1\n})\n\n// Computed property for filtered invoices\nconst filteredInvoiceOrders = computed(() => {\n  if (!Array.isArray(invoices.value)) {\n    logger.warn('Invoices is not an array:', invoices.value)\n    return []\n  }\n\n  let filtered = invoices.value\n\n  if (invoiceSelectedStatus.value !== 'ALL') {\n    filtered = filtered.filter(invoice => \n      invoice?.status === invoiceSelectedStatus.value\n    )\n  }\n\n  if (invoiceSelectedPaymentStatus.value !== 'ALL') {\n    filtered = filtered.filter(invoice =>\n      invoice?.paid_status === invoiceSelectedPaymentStatus.value\n    )\n  }\n\n  if (invoiceSearch.value) {\n    const searchTerm = invoiceSearch.value.toLowerCase()\n    filtered = filtered.filter(invoice => \n      invoice?.invoice_number?.toLowerCase().includes(searchTerm) ||\n      invoice?.customer?.name?.toLowerCase().includes(searchTerm) ||\n      invoice?.id?.toString().includes(searchTerm)\n    )\n  }\n\n  logger.debug('Filtered invoice orders:', {\n    total: invoices.value.length,\n    filtered: filtered.length,\n    filters: {\n      status: invoiceSelectedStatus.value,\n      search: invoiceSearch.value\n    }\n  })\n\n  return filtered\n})\n\nconst handleLoadOrder = async (invoice) => {\n  logger.info('Loading order:', {\n    id: invoice.id,\n    description: invoice.description,\n    type: invoice.type\n  })\n  \n  const success = await loadOrder(invoice)\n  if (success) {\n    window.toastr?.['success']('Order loaded successfully')\n    updateModelValue(false)\n  } else {\n    window.toastr?.['error']('Failed to load order')\n  }\n}\n\nconst handleConvertOrder = async (invoice) => {\n  console.log('HeldOrdersModal - Initial invoice data:', {\n    id: invoice.id,\n    description: invoice.description,\n    rawTotal: invoice.total,\n    items: invoice.hold_items?.length,\n    holdItems: invoice.hold_items?.map(item => ({\n      name: item.name,\n      price: item.price,\n      quantity: item.quantity\n    }))\n  })\n  \n  // Ensure the total is in cents using PriceUtils\n  let finalTotal = PriceUtils.ensureCents(invoice.total)\n  console.log('HeldOrdersModal - Normalized total:', {\n    originalTotal: invoice.total,\n    finalTotal: finalTotal,\n    asDollars: PriceUtils.toDollars(finalTotal)\n  })\n  invoice.total = finalTotal\n  \n  // Also normalize item prices if they're in dollars\n  if (invoice.hold_items) {\n    invoice.hold_items = invoice.hold_items.map(item => ({\n      ...item,\n      price: item.price % 1 !== 0 ? PriceUtils.ensureCents(item.price) : item.price\n    }))\n  }\n  \n  const result = await convertToInvoice(invoice)\n  console.log('HeldOrdersModal - Convert to invoice result:', {\n    success: result.success,\n    finalTotal: invoice.total,\n    asDollars: PriceUtils.toDollars(invoice.total)\n  })\n  \n  if (result.success) {\n    console.log('HeldOrdersModal - Conversion successful')\n  } else {\n    console.error('HeldOrdersModal - Conversion failed:', result.error)\n  }\n}\n\nconst handleDeleteOrder = (invoice) => {\n  if (!invoice?.id) {\n    window.toastr?.['error']('Invalid order selected')\n    return\n  }\n  selectedInvoice.value = invoice\n  deleteDialog.value = true\n}\n\nconst confirmDelete = async () => {\n  if (!selectedInvoice.value?.id) {\n    window.toastr?.['error']('Invalid order selected')\n    return\n  }\n\n  try {\n    isDeleting.value = true\n    const success = await deleteOrder(selectedInvoice.value.id)\n    \n    if (success) {\n      deleteDialog.value = false\n      await fetchHoldInvoices()\n      window.toastr?.['success']('Order deleted successfully')\n    }\n  } catch (error) {\n    window.toastr?.['error'](error.message || 'Failed to delete order')\n  } finally {\n    isDeleting.value = false\n    selectedInvoice.value = null\n  }\n}\n\nconst handleOrderLoaded = (invoice) => {\n  logger.info('Order loaded to cart:', {\n    id: invoice.id,\n    invoice_number: invoice.invoice_number\n  })\n  updateModelValue(false) // Close the modal\n}\n\n// Watch for dialog open to refresh the lists\nwatch(() => props.modelValue, async (newValue) => {\n  if (newValue) {\n    await Promise.all([\n      fetchHoldInvoices(),\n      fetchInvoices()\n    ])\n  }\n})\n\n// Watch for tab activation\nwatch(activeTab, async (newValue) => {\n  if (newValue === 'invoices') {\n    await fetchInvoices({\n      status: invoiceSelectedStatus.value !== 'ALL' ? invoiceSelectedStatus.value : '',\n      invoiceNumber: invoiceSearch.value\n    })\n  } else if (newValue === 'delivery') {\n    deliveryLoading.value = true\n    try {\n      await fetchInvoices({\n        type: ['DELIVERY', 'PICKUP'],\n        status: deliverySelectedStatus.value !== 'ALL' ? deliverySelectedStatus.value : '',\n        invoiceNumber: deliverySearch.value,\n        page: deliveryPage.value,\n        orderByField: 'invoice_number',\n        orderBy: 'desc'\n      })\n    } finally {\n      deliveryLoading.value = false\n    }\n  }\n})\n\n// Watch for delivery filters changes\nwatch([deliverySearch, deliverySelectedStatus, deliverySelectedPaymentStatus, deliveryPage], async () => {\n  if (activeTab.value === 'delivery') {\n    deliveryLoading.value = true\n    try {\n      const params = {\n        type: ['DELIVERY', 'PICKUP'],\n        invoiceNumber: deliverySearch.value,\n        page: deliveryPage.value,\n        orderByField: 'invoice_number',\n        orderBy: 'desc',\n        per_page: 10\n      }\n\n      // Only add status and paid_status if they're not 'ALL'\n      if (deliverySelectedStatus.value !== 'ALL') {\n        params.status = deliverySelectedStatus.value\n      }\n      \n      if (deliverySelectedPaymentStatus.value !== 'ALL') {\n        params.paid_status = deliverySelectedPaymentStatus.value\n      }\n\n      await fetchInvoices(params)\n    } finally {\n      deliveryLoading.value = false\n    }\n  }\n})\n\n// Watch for invoice filters changes\nwatch([invoiceSearch, invoiceSelectedStatus, invoicePage], async () => {\n  if (activeTab.value === 'invoices') {\n    await fetchInvoices({\n      status: invoiceSelectedStatus.value !== 'ALL' ? invoiceSelectedStatus.value : '',\n      invoiceNumber: invoiceSearch.value,\n      page: invoicePage.value,\n      orderByField: 'invoice_number',\n      orderBy: 'desc'\n    })\n  }\n})\n\n// Watch for payment completion\nwatch(showPaymentDialog, async (newValue) => {\n  console.log('HeldOrdersModal: Payment dialog state changed:', {\n    showPaymentDialog: newValue,\n    hasCurrentInvoice: !!currentInvoice.value\n  })\n  \n  if (!newValue) {\n    // Payment dialog was closed\n    if (currentInvoice.value) {\n      console.log('HeldOrdersModal: Payment dialog closed with current invoice, refreshing list')\n      // Refresh the list\n      await fetchHoldInvoices()\n      // Close the main dialog\n      updateModelValue(false)\n    }\n  }\n})\n\n// Initial fetch\nfetchHoldInvoices()\n</script>\n","<template>\r\n  <v-dialog \r\n    v-model=\"dialog\" \r\n    fullscreen\r\n    transition=\"dialog-bottom-transition\"\r\n    :scrim=\"false\"\r\n  >\r\n    <template v-slot:activator=\"{ props: dialogProps }\">\r\n      <v-btn\r\n        color=\"primary\"\r\n        v-bind=\"dialogProps\"\r\n        prepend-icon=\"mdi-table-furniture\"\r\n        :loading=\"loading\"\r\n        :disabled=\"disabled || cartStore.isEmpty\"\r\n        class=\"text-none px-6\"\r\n        rounded=\"pill\"\r\n        :elevation=\"$vuetify.display.mobile ? 1 : 2\"\r\n        size=\"large\"\r\n        :block=\"$vuetify.display.mobile\"\r\n      >\r\n        <span class=\"text-subtitle-1 font-weight-medium\">DINE IN</span>\r\n      </v-btn>\r\n    </template>\r\n\r\n    <v-card class=\"modal-card\">\r\n      <v-toolbar\r\n        color=\"primary\"\r\n        density=\"comfortable\"\r\n      >\r\n        <v-toolbar-title class=\"text-h6 font-weight-medium\">\r\n          Table Selection\r\n        </v-toolbar-title>\r\n        <v-spacer></v-spacer>\r\n        <v-btn\r\n          icon\r\n          @click=\"closeModal\"\r\n        >\r\n          <v-icon>mdi-close</v-icon>\r\n        </v-btn>\r\n      </v-toolbar>\r\n\r\n      <v-card-text class=\"pa-0 fill-height d-flex flex-column\">\r\n        <v-container fluid class=\"flex-grow-1 pa-4\">\r\n          <!-- Loading State -->\r\n          <v-row v-if=\"loading\" class=\"fill-height\">\r\n            <v-col cols=\"12\" class=\"d-flex align-center justify-center\">\r\n              <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <!-- Error State -->\r\n          <v-row v-else-if=\"error\" class=\"fill-height\">\r\n            <v-col cols=\"12\" class=\"d-flex align-center justify-center\">\r\n              <v-alert type=\"error\" variant=\"tonal\" width=\"100%\" max-width=\"500\">\r\n                {{ error }}\r\n                <template v-slot:append>\r\n                  <v-btn color=\"error\" variant=\"text\" @click=\"retryLoadTables\">\r\n                    Retry\r\n                  </v-btn>\r\n                </template>\r\n              </v-alert>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <!-- No Tables State -->\r\n          <v-row v-else-if=\"!tables.length\" class=\"fill-height\">\r\n            <v-col cols=\"12\" class=\"d-flex align-center justify-center\">\r\n              <v-alert type=\"info\" variant=\"tonal\" width=\"100%\" max-width=\"500\">\r\n                No tables available for this cash register\r\n              </v-alert>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <!-- Table Grid -->\r\n          <v-row v-else class=\"table-grid\">\r\n            <v-col\r\n              v-for=\"table in tables\"\r\n              :key=\"table.id\"\r\n              cols=\"12\"\r\n              sm=\"6\"\r\n              md=\"4\"\r\n              lg=\"3\"\r\n              class=\"table-col pa-2\"\r\n            >\r\n              <v-hover v-slot=\"{ isHovering, props: hoverProps }\">\r\n                <v-card\r\n                  v-bind=\"hoverProps\"\r\n                  :elevation=\"isHovering ? 4 : 1\"\r\n                  :class=\"[\r\n                    'table-card',\r\n                    'transition-swing',\r\n                    isTableSelected(table.id) ? 'selected' : '',\r\n                    isTableAvailable(table) ? 'available' : 'occupied'\r\n                  ]\"\r\n                  @click=\"handleTableClick(table)\"\r\n                >\r\n                  <v-card-item class=\"pa-2\">\r\n                    <div class=\"d-flex justify-space-between align-center\">\r\n                      <v-card-title class=\"text-h6 font-weight-bold pa-0\">\r\n                        {{ table.name }}\r\n                      </v-card-title>\r\n                      <v-chip\r\n                        :color=\"isTableAvailable(table) ? 'success' : 'error'\"\r\n                        size=\"small\"\r\n                        class=\"font-weight-medium text-caption\"\r\n                        variant=\"elevated\"\r\n                      >\r\n                        {{ isTableAvailable(table) ? 'Available' : 'In Use' }}\r\n                      </v-chip>\r\n                    </div>\r\n                  </v-card-item>\r\n\r\n                  <v-card-text class=\"text-center pa-2\">\r\n                    <!-- Selected Table View -->\r\n                    <template v-if=\"isTableSelected(table.id)\">\r\n                      <div class=\"d-flex flex-column align-center\">\r\n                        <div class=\"text-subtitle-2 mb-1\">Number of People</div>\r\n                        <div class=\"d-flex align-center justify-center\">\r\n                          <v-btn\r\n                            icon=\"mdi-minus\"\r\n                            size=\"small\"\r\n                            variant=\"text\"\r\n                            density=\"compact\"\r\n                            @click.stop=\"decrementQuantity(table.id)\"\r\n                            :disabled=\"getTableQuantity(table.id) <= 1\"\r\n                          >\r\n                          </v-btn>\r\n                          <span class=\"mx-2 text-h6\">{{ getTableQuantity(table.id) }}</span>\r\n                          <v-btn\r\n                            icon=\"mdi-plus\"\r\n                            size=\"small\"\r\n                            variant=\"text\"\r\n                            density=\"compact\"\r\n                            @click.stop=\"incrementQuantity(table.id)\"\r\n                          >\r\n                          </v-btn>\r\n                        </div>\r\n                      </div>\r\n                    </template>\r\n\r\n                    <!-- Occupied Table View -->\r\n                    <template v-else-if=\"!isTableAvailable(table)\">\r\n                      <div class=\"d-flex align-center justify-center\">\r\n                        <v-icon color=\"error\" size=\"small\" class=\"mr-1\">mdi-account-group</v-icon>\r\n                        <span class=\"text-body-1\">{{ table.quantity }} People</span>\r\n                      </div>\r\n                    </template>\r\n\r\n                    <!-- Available Table View -->\r\n                    <template v-else>\r\n                      <div class=\"d-flex align-center justify-center\">\r\n                        <v-icon size=\"small\" color=\"success\" class=\"mr-1\">mdi-cursor-pointer</v-icon>\r\n                        <span class=\"text-body-2\">Click to Select</span>\r\n                      </div>\r\n                    </template>\r\n                  </v-card-text>\r\n                </v-card>\r\n              </v-hover>\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n\r\n        <!-- Footer with Button -->\r\n        <v-container fluid class=\"pa-4 pt-0\">\r\n          <v-row>\r\n            <v-col cols=\"12\">\r\n              <v-btn\r\n                block\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                :loading=\"processing\"\r\n                :disabled=\"!selectedTables.length || processing\"\r\n                @click=\"processOrder\"\r\n                class=\"text-none\"\r\n              >\r\n                CONFIRM AND HOLD ORDER\r\n              </v-btn>\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </v-card-text>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, onMounted } from 'vue'\r\nimport { useTableManagement } from '../../composables/useTableManagement'\r\nimport { useOrderType } from '../../composables/useOrderType'\r\nimport { usePosStore } from '../../../../stores/pos-store'\r\nimport { useCartStore } from '../../../../stores/cart-store'\r\nimport { logger } from '../../../../utils/logger'\r\nimport { OrderType } from '../../../../types/order'\r\n\r\n// Props\r\nconst props = defineProps({\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\nimport { useCompanyStore } from '@/stores/company'\r\n\r\n// Store access\r\nconst posStore = usePosStore()\r\nconst cartStore = useCartStore()\r\nconst companyStore = useCompanyStore()\r\n\r\n// Composables\r\nconst {\r\n  loading: tableLoading,\r\n  error,\r\n  getTables,\r\n  isTableOccupied,\r\n  setTableOccupancy,\r\n  currentCashRegister\r\n} = useTableManagement()\r\n\r\n// Computed properties for store and cashier state\r\nconst selectedStore = computed(() => companyStore.selectedStore)\r\nconst selectedCashier = computed(() => companyStore.selectedCashier)\r\n\r\n// Validation computed\r\nconst canProcessOrder = computed(() => {\r\n  const hasStore = !!selectedStore.value\r\n  const hasCashier = !!selectedCashier.value\r\n  const hasItems = !cartStore.isEmpty\r\n  \r\n  logger.debug('[DineInModal] Order prerequisites:', {\r\n    hasStore,\r\n    hasCashier,\r\n    hasItems,\r\n    selectedStore: selectedStore.value,\r\n    selectedCashier: selectedCashier.value,\r\n    companyStoreState: {\r\n      store: companyStore.selectedStore,\r\n      cashier: companyStore.selectedCashier\r\n    }\r\n  })\r\n  \r\n  return hasStore && hasCashier && hasItems\r\n})\r\n\r\nconst {\r\n  setOrderType,\r\n  setCustomerInfo,\r\n  canCreateOrder\r\n} = useOrderType()\r\n\r\n// Local state\r\nconst dialog = ref(false)\r\nconst loading = computed(() => tableLoading.value)\r\nconst processing = ref(false)\r\nconst tables = ref([])\r\nconst selectedTables = ref([])\r\n\r\n// Methods\r\nconst isTableAvailable = (table) => {\r\n  return !isTableOccupied(table.id) || isTableSelected(table.id)\r\n}\r\n\r\nconst isTableSelected = (tableId) => {\r\n  return selectedTables.value.some(t => t.id === tableId)\r\n}\r\n\r\nconst getTableQuantity = (tableId) => {\r\n  const table = selectedTables.value.find(t => t.id === tableId)\r\n  return table ? table.quantity : 1\r\n}\r\n\r\nconst handleTableClick = (table) => {\r\n  if (!isTableAvailable(table)) {\r\n    window.toastr?.['warning']('This table is currently occupied')\r\n    return\r\n  }\r\n\r\n  const index = selectedTables.value.findIndex(t => t.id === table.id)\r\n  if (index >= 0) {\r\n    selectedTables.value.splice(index, 1)\r\n  } else {\r\n    selectedTables.value.push({\r\n      id: table.id,\r\n      name: table.name,\r\n      quantity: 1\r\n    })\r\n  }\r\n}\r\n\r\nconst incrementQuantity = (tableId) => {\r\n  const table = selectedTables.value.find(t => t.id === tableId)\r\n  if (table) {\r\n    table.quantity++\r\n  }\r\n}\r\n\r\nconst decrementQuantity = (tableId) => {\r\n  const table = selectedTables.value.find(t => t.id === tableId)\r\n  if (table && table.quantity > 1) {\r\n    table.quantity--\r\n  }\r\n}\r\n\r\nconst retryLoadTables = async () => {\r\n  try {\r\n    tables.value = await getTables()\r\n  } catch (err) {\r\n    logger.error('Failed to retry loading tables:', err)\r\n    window.toastr?.['error']('Failed to load tables')\r\n  }\r\n}\r\n\r\n// Process the order\r\nconst processOrder = async () => {\r\n  if (!selectedTables.value.length || !canCreateOrder.value) {\r\n    return\r\n  }\r\n\r\n  // Validate store and cashier selection\r\n  if (!selectedStore.value || !selectedCashier.value) {\r\n    window.toastr?.['error']('Please select both store and cashier')\r\n    logger.warn('[DineInModal] Missing store or cashier selection', {\r\n      store: selectedStore.value,\r\n      cashier: selectedCashier.value\r\n    })\r\n    return\r\n  }\r\n\r\n  processing.value = true\r\n  logger.info('[DineInModal] Processing order with store/cashier:', {\r\n    store: selectedStore.value,\r\n    cashier: selectedCashier.value\r\n  })\r\n\r\n  try {\r\n    // Set order type\r\n    setOrderType(OrderType.DINE_IN)\r\n\r\n    // Prepare table information with both id and table_id fields\r\n    const selectedTablesData = selectedTables.value.map(table => ({\r\n      id: table.id, // Add id field for backend compatibility\r\n      table_id: table.id,\r\n      name: table.name,\r\n      quantity: table.quantity,\r\n      in_use: 1 // Mark table as occupied\r\n    }))\r\n    \r\n    const tableNames = selectedTablesData.map(t => t.name).join(', ')\r\n    const totalCustomers = selectedTablesData.reduce((sum, table) => sum + table.quantity, 0)\r\n\r\n    // Set customer info\r\n    setCustomerInfo({\r\n      tableNumbers: tableNames,\r\n      tables: selectedTablesData,\r\n      customerCount: totalCustomers\r\n    })\r\n\r\n    // Set cart store information\r\n    cartStore.setSelectedTables(selectedTablesData)\r\n    \r\n    // Set customer and table information in notes\r\n    const orderInfo = {\r\n      orderInfo: {\r\n        customer: {\r\n          tableNumbers: tableNames,\r\n          customerCount: totalCustomers\r\n        },\r\n        tables: selectedTablesData\r\n      }\r\n    }\r\n\r\n    cartStore.setNotes(JSON.stringify(orderInfo))\r\n\r\n    // Create hold invoice data with both tables arrays\r\n    const orderData = {\r\n      ...cartStore.prepareHoldInvoiceData(\r\n        selectedStore.value,\r\n        selectedCashier.value,\r\n        `DINE_IN_Table_${tableNames}`\r\n      ),\r\n      tables_selected: selectedTablesData.map(table => ({\r\n        id: table.id,\r\n        table_id: table.id,\r\n        name: table.name,\r\n        quantity: table.quantity,\r\n        in_use: 1\r\n      })),\r\n      hold_tables: selectedTablesData.map(table => ({\r\n        id: table.id,\r\n        table_id: table.id,\r\n        name: table.name,\r\n        quantity: table.quantity,\r\n        in_use: 1\r\n      }))\r\n    }\r\n\r\n    try {\r\n      // Hold the order\r\n      await posStore.holdOrder(orderData)\r\n      \r\n      // Mark tables as occupied\r\n      selectedTablesData.forEach(table => {\r\n        setTableOccupancy(table.table_id, true)\r\n      })\r\n\r\n      // Refresh tables list\r\n      await getTables()\r\n      \r\n      // If we get here, assume success since errors would be caught\r\n      cartStore.clearCart()\r\n      dialog.value = false\r\n      window.toastr?.['success']('Dine-in order held successfully')\r\n    } catch (holdError) {\r\n      // Log error but continue checking if order was created\r\n      logger.error('Hold order error:', holdError)\r\n\r\n      // Check if the order was actually created despite the error\r\n      await new Promise(resolve => setTimeout(resolve, 500))\r\n      await posStore.fetchHoldInvoices()\r\n      \r\n      // Look for our order in the latest invoices\r\n      const orderExists = posStore.holdInvoices.some(invoice => \r\n        invoice.type === OrderType.DINE_IN && \r\n        invoice.description?.includes(`DINE_IN_Table_${tableNames}`)\r\n      )\r\n\r\n      if (orderExists) {\r\n        // Order was created successfully despite the error\r\n        // Mark tables as occupied\r\n        selectedTablesData.forEach(table => {\r\n          setTableOccupancy(table.table_id, true)\r\n        })\r\n        // Refresh tables list\r\n        await getTables()\r\n        cartStore.clearCart()\r\n        dialog.value = false\r\n        window.toastr?.['success']('Dine-in order held successfully')\r\n      }\r\n    }\r\n  } catch (err) {\r\n    logger.error('Failed to hold dine-in order:', err)\r\n    window.toastr?.['error']('Failed to create dine-in order')\r\n  } finally {\r\n    processing.value = false\r\n  }\r\n}\r\n\r\n// Close modal handler\r\nconst closeModal = () => {\r\n  if (!processing.value) {\r\n    dialog.value = false\r\n    selectedTables.value = []\r\n  }\r\n}\r\n\r\n// Component initialization\r\nonMounted(() => {\r\n  logger.info('[DineInModal] Component mounted')\r\n  \r\n  // Initialize store asynchronously but don't block mounting\r\n  const initializeStores = async () => {\r\n    try {\r\n      if (!companyStore.isInitialized) {\r\n        logger.debug('[DineInModal] Initializing company store')\r\n        await companyStore.initializeStore()\r\n      }\r\n\r\n      logger.info('[DineInModal] Store state after mount:', {\r\n        store: selectedStore.value,\r\n        cashier: selectedCashier.value,\r\n        companyStore: {\r\n          selectedStore: companyStore.selectedStore,\r\n          selectedCashier: companyStore.selectedCashier\r\n        }\r\n      })\r\n    } catch (err) {\r\n      logger.error('[DineInModal] Initialization error:', err)\r\n      error.value = 'Failed to initialize store selections'\r\n    }\r\n  }\r\n\r\n  // Start initialization but don't await it\r\n  initializeStores()\r\n})\r\n\r\n// Watch for dialog open to load tables and set order type\r\nwatch(dialog, async (newValue) => {\r\n  if (newValue) {\r\n    try {\r\n      setOrderType(OrderType.DINE_IN)\r\n      tables.value = await getTables()\r\n    } catch (err) {\r\n      logger.error('Failed to initialize dine-in modal:', err)\r\n      window.toastr?.['error']('Failed to load tables')\r\n    }\r\n  } else {\r\n    selectedTables.value = []\r\n  }\r\n})\r\n\r\n// Expose dialog ref for parent component\r\ndefineExpose({\r\n  dialog\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.table-grid {\r\n  margin: 0;\r\n}\r\n\r\n.table-card {\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.table-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 3px;\r\n  background: transparent;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.table-card.available::before {\r\n  background-color: rgb(var(--v-theme-success));\r\n}\r\n\r\n.table-card.occupied::before {\r\n  background-color: rgb(var(--v-theme-error));\r\n}\r\n\r\n.table-card.selected {\r\n  border: 2px solid rgb(var(--v-theme-primary));\r\n  background-color: rgb(var(--v-theme-primary-lighten-1));\r\n}\r\n\r\n.table-card.selected::before {\r\n  background-color: rgb(var(--v-theme-primary));\r\n}\r\n\r\n.modal-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: rgb(var(--v-theme-background));\r\n}\r\n\r\n.table-col {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.dialog-bottom-transition-enter-active,\r\n.dialog-bottom-transition-leave-active {\r\n  transition: transform 0.3s ease-in-out;\r\n}\r\n\r\n.dialog-bottom-transition-enter-from,\r\n.dialog-bottom-transition-leave-to {\r\n  transform: translateY(100%);\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .table-card {\r\n    height: 180px;\r\n  }\r\n  \r\n  .table-grid {\r\n    margin: -4px;\r\n  }\r\n  \r\n  .table-col {\r\n    padding: 4px !important;\r\n  }\r\n}\r\n</style>\r\n","<template>\n  <v-dialog\n    v-model=\"dialog\"\n    fullscreen\n    transition=\"dialog-bottom-transition\"\n    :scrim=\"false\"\n  >\n    <template v-slot:activator=\"{ props: dialogProps }\">\n      <v-btn\n        color=\"primary\"\n        v-bind=\"dialogProps\"\n        prepend-icon=\"mdi-shopping\"\n        :loading=\"loading\"\n        :disabled=\"disabled || cartStore.isEmpty\"\n        class=\"text-none px-6\"\n        rounded=\"pill\"\n        :elevation=\"$vuetify.display.mobile ? 1 : 2\"\n        size=\"large\"\n        :block=\"$vuetify.display.mobile\"\n      >\n        <span class=\"text-subtitle-1 font-weight-medium\">TO GO</span>\n      </v-btn>\n    </template>\n\n    <v-card class=\"modal-card\">\n      <v-toolbar\n        color=\"primary\"\n        density=\"comfortable\"\n      >\n        <v-toolbar-title class=\"text-h6 font-weight-medium\">\n          <v-icon icon=\"mdi-shopping\" size=\"large\" class=\"mr-2\"></v-icon>\n          To Go Order\n        </v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn\n          icon\n          @click=\"closeModal\"\n        >\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </v-toolbar>\n\n      <v-card-text class=\"pa-0 fill-height d-flex flex-column\">\n        <v-container fluid class=\"flex-grow-1 pa-4\">\n          <v-fade-transition>\n            <!-- Loading State -->\n            <v-row v-if=\"loading\">\n              <v-col cols=\"12\" class=\"text-center\">\n                <v-progress-circular\n                  indeterminate\n                  color=\"primary\"\n                  size=\"64\"\n                ></v-progress-circular>\n              </v-col>\n            </v-row>\n\n            <!-- Error State -->\n            <v-row v-else-if=\"error\">\n              <v-col cols=\"12\">\n                <v-alert\n                  type=\"error\"\n                  variant=\"tonal\"\n                  closable\n                  class=\"mb-4\"\n                  @click:close=\"error = null\"\n                >\n                  {{ error }}\n                </v-alert>\n              </v-col>\n            </v-row>\n\n            <!-- Customer Information Form -->\n            <v-form\n              v-else\n              @submit.prevent=\"processOrder\"\n            >\n              <v-row>\n                <v-col cols=\"12\" md=\"6\">\n                  <div class=\"text-subtitle-1 mb-2\">Customer Information</div>\n                  <v-text-field\n                    v-model=\"customerInfo.name\"\n                    label=\"Customer Name\"\n                    variant=\"outlined\"\n                    density=\"comfortable\"\n                    :error-messages=\"validationErrors.name\"\n                    @input=\"clearError('name')\"\n                    required\n                    prepend-inner-icon=\"mdi-account\"\n                    placeholder=\"Enter customer name\"\n                    class=\"mb-4\"\n                    bg-color=\"surface\"\n                  ></v-text-field>\n\n                  <v-text-field\n                    v-model=\"customerInfo.phone\"\n                    label=\"Phone Number\"\n                    variant=\"outlined\"\n                    density=\"comfortable\"\n                    :error-messages=\"validationErrors.phone\"\n                    @input=\"clearError('phone')\"\n                    required\n                    prepend-inner-icon=\"mdi-phone\"\n                    placeholder=\"Enter phone number\"\n                    class=\"mb-4\"\n                    bg-color=\"surface\"\n                  ></v-text-field>\n\n                  <v-text-field\n                    v-model=\"customerInfo.email\"\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    density=\"comfortable\"\n                    :error-messages=\"validationErrors.email\"\n                    @input=\"clearError('email')\"\n                    prepend-inner-icon=\"mdi-email\"\n                    placeholder=\"Enter email address\"\n                    class=\"mb-4\"\n                    bg-color=\"surface\"\n                  ></v-text-field>\n                </v-col>\n\n                <v-col cols=\"12\" md=\"6\">\n                  <div class=\"text-subtitle-1 mb-2\">Order Notes</div>\n                  <v-textarea\n                    v-model=\"customerInfo.notes\"\n                    label=\"Special Instructions\"\n                    variant=\"outlined\"\n                    density=\"comfortable\"\n                    :error-messages=\"validationErrors.notes\"\n                    @input=\"updateNotes\"\n                    prepend-inner-icon=\"mdi-note-text\"\n                    placeholder=\"Enter any special instructions\"\n                    rows=\"4\"\n                    auto-grow\n                    bg-color=\"surface\"\n                  ></v-textarea>\n                </v-col>\n              </v-row>\n            </v-form>\n          </v-fade-transition>\n        </v-container>\n\n        <!-- Action Buttons -->\n        <v-divider></v-divider>\n        <v-card-actions class=\"pa-4\">\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            size=\"large\"\n            :loading=\"loading\"\n            :disabled=\"loading\"\n            @click=\"processOrder\"\n            class=\"px-6\"\n          >\n            <v-icon start>mdi-cash-register</v-icon>\n            Process Order\n          </v-btn>\n        </v-card-actions>\n      </v-card-text>\n    </v-card>\n\n    <!-- Payment Dialog -->\n    <PaymentDialog\n      v-model=\"showPaymentDialog\"\n      :invoice=\"currentInvoice\"\n      @payment-complete=\"handlePaymentComplete\"\n    />\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, computed, watch, reactive } from 'vue'\nimport { useCartStore } from '../../../../stores/cart-store'\nimport { useCompanyStore } from '../../../../stores/company'\nimport { logger } from '../../../../utils/logger'\nimport { OrderType } from '../../../../types/order'\nimport { usePosStore } from '../../../../stores/pos-store'\nimport { useOrderType } from '../../composables/useOrderType'\nimport { parseOrderNotes } from '../../../../stores/cart/helpers'\nimport PaymentDialog from '../dialogs/PaymentDialog.vue'\n\n// Props\ndefineProps({\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n})\n\n// Store access\nconst cartStore = useCartStore()\nconst companyStore = useCompanyStore()\nconst posStore = usePosStore()\nconst { customerNotes } = useOrderType()\n\n// Local state\nconst dialog = ref(false)\nconst loading = ref(false)\nconst processing = ref(false)\nconst error = ref(null)\nconst currentInvoice = ref(null)\nconst showPaymentDialog = ref(false)\n\n// Form state\nconst customerInfo = reactive({\n  name: '',\n  phone: '',\n  email: '',\n  notes: ''\n})\n\nconst validationErrors = reactive({\n  name: '',\n  phone: '',\n  email: '',\n  notes: ''\n})\n\n// Computed\nconst selectedStore = computed(() => companyStore.selectedStore)\nconst selectedCashier = computed(() => companyStore.selectedCashier)\n\n// Update notes in cart store\nconst updateNotes = (value) => {\n  try {\n    // If there are existing notes in the cart, parse them first\n    let existingNotes = {}\n    try {\n      if (cartStore.notes) {\n        existingNotes = JSON.parse(cartStore.notes)\n      }\n    } catch (e) {\n      logger.warn('Failed to parse existing notes:', e)\n    }\n\n    // Create new notes object, preserving existing data\n    const notesObj = {\n      ...existingNotes,\n      customerNotes: value,\n      timestamp: new Date().toISOString(),\n      orderType: OrderType.TO_GO,\n      orderInfo: {\n        ...existingNotes.orderInfo,\n        customer: {\n          ...existingNotes.orderInfo?.customer,\n          name: customerInfo.name.trim(),\n          phone: customerInfo.phone.replace(/\\D/g, ''),\n          email: customerInfo.email.trim(),\n          notes: value,\n          instructions: value // Keep for backward compatibility\n        }\n      }\n    }\n\n    cartStore.setNotes(JSON.stringify(notesObj))\n    logger.debug('Updated cart notes:', notesObj)\n  } catch (error) {\n    logger.error('Failed to update cart notes:', error)\n  }\n}\n\n// Methods\nconst validateForm = () => {\n  clearAllErrors()\n  let isValid = true\n\n  if (!customerInfo.name.trim()) {\n    validationErrors.name = 'Name is required'\n    isValid = false\n  }\n\n  if (!customerInfo.phone.trim()) {\n    validationErrors.phone = 'Phone number is required'\n    isValid = false\n  }\n\n  if (customerInfo.email && !customerInfo.email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n    validationErrors.email = 'Invalid email format'\n    isValid = false\n  }\n\n  return isValid\n}\n\nconst clearError = (field) => {\n  validationErrors[field] = ''\n}\n\nconst clearAllErrors = () => {\n  Object.keys(validationErrors).forEach(key => {\n    validationErrors[key] = ''\n  })\n}\n\nconst processOrder = async () => {\n  if (!validateForm()) return\n\n  processing.value = true\n  error.value = null\n\n  try {\n    // Format phone number\n    const formattedPhone = customerInfo.phone.replace(/\\D/g, '')\n\n    // Get base invoice data\n    const baseInvoiceData = cartStore.prepareHoldInvoiceData(\n      selectedStore.value,\n      selectedCashier.value,\n      `TO_GO_${customerInfo.name}`\n    )\n\n    // Create hold invoice data without tip fields\n    const holdInvoiceData = {\n      ...baseInvoiceData,\n      type: OrderType.TO_GO,\n      description: `TO_GO_${customerInfo.name}`,\n      cash_register_id: companyStore.selectedCashier?.id || companyStore.company?.id || 1,\n      hold_items: cartStore.items.map(item => ({\n        item_id: item.id,\n        name: item.name,\n        description: item.description || '',\n        price: item.price,\n        quantity: item.quantity,\n        unit_name: item.unit_name || 'units',\n        tax: item.tax || 0\n      }))\n    }\n\n    // Remove tip-related fields that aren't supported for hold invoices\n    delete holdInvoiceData.tip\n    delete holdInvoiceData.tip_type\n    delete holdInvoiceData.tip_val\n\n    // Validate items exist\n    if (!holdInvoiceData.hold_items?.length) {\n      throw new Error('No items found in cart')\n    }\n\n    // Ensure the notes are properly formatted for the invoice\n    const notesObj = {\n      customerNotes: customerInfo.notes,\n      timestamp: new Date().toISOString(),\n      orderType: OrderType.TO_GO,\n      orderInfo: {\n        customer: {\n          name: customerInfo.name.trim(),\n          phone: formattedPhone,\n          email: customerInfo.email.trim(),\n          notes: customerInfo.notes,\n          instructions: customerInfo.notes // Keep for backward compatibility\n        }\n      }\n    }\n\n    holdInvoiceData.notes = JSON.stringify(notesObj)\n\n    logger.debug('Processing TO-GO order with data:', {\n      type: holdInvoiceData.type,\n      description: holdInvoiceData.description,\n      total: holdInvoiceData.total,\n      items: holdInvoiceData.hold_items?.length,\n      notes: holdInvoiceData.notes\n    })\n\n    // Create hold order\n    const result = await posStore.holdOrder(holdInvoiceData)\n    \n    logger.debug('Hold order response:', result)\n\n    if (!result?.success) {\n      throw new Error(result?.message || 'Failed to create hold order')\n    }\n\n    // Fetch the latest hold invoices to get our new one\n    await posStore.fetchHoldInvoices()\n    \n    // Find our newly created hold invoice\n    const holdInvoice = posStore.holdInvoices.find(inv => \n      inv.description === holdInvoiceData.description &&\n      inv.type === OrderType.TO_GO\n    )\n\n    if (!holdInvoice) {\n      logger.error('Could not find newly created hold invoice')\n      throw new Error('Failed to retrieve created hold invoice')\n    }\n\n    // Validate essential fields\n    if (!holdInvoice.total || !holdInvoice.hold_items?.length) {\n      logger.error('Missing required hold invoice fields:', holdInvoice)\n      throw new Error('Invalid hold invoice data: missing total or items')\n    }\n\n    // Store the hold invoice ID\n    const holdInvoiceId = holdInvoice.id\n    cartStore.setHoldInvoiceId(holdInvoiceId)\n\n    logger.info('TO-GO hold order created successfully:', {\n      holdInvoiceId: holdInvoiceId,\n      description: holdInvoice.description,\n      total: holdInvoice.total,\n      items: holdInvoice.hold_items?.length\n    })\n\n    currentInvoice.value = {\n      invoice: holdInvoice,\n      invoicePrefix: 'TO-GO',\n      nextInvoiceNumber: holdInvoiceId,\n      description: holdInvoice.description\n    }\n\n    // Double check the invoice data is valid\n    if (!currentInvoice.value.invoice?.total) {\n      logger.error('Invalid invoice data for payment:', currentInvoice.value)\n      throw new Error('Invalid invoice data for payment')\n    }\n    showPaymentDialog.value = true\n    dialog.value = false\n  } catch (err) {\n    error.value = err.message || 'Failed to process order'\n    logger.error('Failed to process TO-GO order:', err)\n  } finally {\n    processing.value = false\n  }\n}\n\nconst handlePaymentComplete = (result) => {\n  logger.info('Payment completed:', result)\n  showPaymentDialog.value = false\n  dialog.value = false\n  // Clear form\n  Object.keys(customerInfo).forEach(key => {\n    customerInfo[key] = ''\n  })\n}\n\nconst closeModal = () => {\n  dialog.value = false\n  error.value = null\n  // Clear form\n  Object.keys(customerInfo).forEach(key => {\n    customerInfo[key] = ''\n  })\n}\n\n// Watch for dialog open to validate prerequisites and initialize notes\nwatch(dialog, (newValue) => {\n  if (newValue) {\n    if (!selectedStore.value || !selectedCashier.value) {\n      error.value = 'Please select both store and cashier first'\n      dialog.value = false\n      return\n    }\n    \n    // Initialize notes from cart store when dialog opens\n    try {\n      const notes = parseOrderNotes(cartStore.notes)\n      if (notes) {\n        customerInfo.notes = notes\n        logger.debug('Initialized notes from cart store:', { notes })\n      }\n    } catch (error) {\n      logger.error('Failed to parse cart notes:', error)\n    }\n  }\n})\n\n// Watch for changes in cart store notes\nwatch(() => cartStore.notes, (newNotes) => {\n  try {\n    const notes = parseOrderNotes(newNotes)\n    if (notes && notes !== customerInfo.notes) {\n      customerInfo.notes = notes\n      logger.debug('Updated notes from cart store:', { notes })\n    }\n  } catch (error) {\n    logger.error('Failed to parse cart notes:', error)\n  }\n})\n\n// Watch for changes in customer notes from useOrderType\nwatch(() => customerNotes.value, (newNotes) => {\n  if (newNotes !== customerInfo.notes) {\n    customerInfo.notes = newNotes\n    logger.debug('Updated notes from customer notes:', { newNotes })\n  }\n})\n</script>\n\n<style scoped>\n.modal-card {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\n.v-card-text {\n  flex: 1;\n  overflow-y: auto;\n}\n\n.v-form {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n:deep(.v-field) {\n  border-radius: 8px;\n  transition: all 0.2s ease;\n}\n\n:deep(.v-field:not(.v-field--disabled):hover) {\n  border-color: rgba(var(--v-theme-primary), 0.5);\n}\n\n:deep(.v-text-field .v-input__details) {\n  padding-inline-start: 16px;\n}\n</style>\n","import { apiClient } from './client'\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {number} id\r\n * @property {string} code\r\n * @property {string} name\r\n * @property {string} country_code\r\n */\r\n\r\n/**\r\n * @typedef {Object} StateResponse\r\n * @property {State[]} states\r\n */\r\n\r\nexport const statesApi = {\r\n  /**\r\n   * Fetches states for a given country code\r\n   * @param {string} [countryCode='US'] - The country code to fetch states for\r\n   * @returns {Promise<StateResponse>} The API response containing states\r\n   */\r\n  async getStates(countryCode = 'US') {\r\n    try {\r\n      const response = await apiClient.get(`/v1/states/${countryCode}`)\r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n","<template>\r\n  <v-autocomplete\r\n    v-model=\"selectedState\"\r\n    :items=\"states\"\r\n    :loading=\"loading\"\r\n    :error-messages=\"error\"\r\n    :label=\"label\"\r\n    :required=\"required\"\r\n    :disabled=\"disabled\"\r\n    item-title=\"name\"\r\n    item-value=\"code\"\r\n    variant=\"outlined\"\r\n    density=\"comfortable\"\r\n    :hint=\"loading ? 'Loading states...' : undefined\"\r\n    persistent-hint\r\n    @update:model-value=\"onStateSelect\"\r\n  >\r\n    <template v-slot:no-data>\r\n      <v-list-item v-if=\"loading\">\r\n        <v-list-item-title>\r\n          Loading states...\r\n        </v-list-item-title>\r\n      </v-list-item>\r\n      <v-list-item v-else>\r\n        <v-list-item-title>\r\n          No states found\r\n        </v-list-item-title>\r\n      </v-list-item>\r\n    </template>\r\n  </v-autocomplete>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, watch } from 'vue'\r\nimport { statesApi } from '@/services/api/states'\r\nimport { logger } from '@/utils/logger'\r\n\r\nconst props = defineProps({\r\n  modelValue: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  label: {\r\n    type: String,\r\n    default: 'State'\r\n  },\r\n  required: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  error: {\r\n    type: String,\r\n    default: undefined\r\n  },\r\n  countryCode: {\r\n    type: String,\r\n    default: 'US'\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'state-selected'])\r\n\r\nconst loading = ref(false)\r\n/** @type {import('vue').Ref<Array<{id: number, code: string, name: string, country_code: string}>>} */\r\nconst states = ref([])\r\nconst selectedState = ref(props.modelValue)\r\n\r\nconst fetchStates = async () => {\r\n  loading.value = true\r\n  try {\r\n    const response = await statesApi.getStates(props.countryCode)\r\n    states.value = response.states\r\n    logger.info(`Loaded ${states.value.length} states`)\r\n  } catch (error) {\r\n    logger.error('Failed to fetch states:', error)\r\n    throw error\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} stateCode\r\n */\r\nconst onStateSelect = (stateCode) => {\r\n  const selectedState = states.value.find(state => state.code === stateCode)\r\n  if (selectedState) {\r\n    emit('update:modelValue', stateCode)\r\n    emit('state-selected', selectedState)\r\n    logger.debug('State selected:', selectedState)\r\n  }\r\n}\r\n\r\nwatch(() => props.modelValue, (newValue) => {\r\n  selectedState.value = newValue\r\n})\r\n\r\nonMounted(() => {\r\n  fetchStates()\r\n})\r\n</script>\r\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","import { ref, computed } from 'vue'\r\nimport { apiClient } from '../../../services/api/client'\r\nimport { logger } from '../../../utils/logger'\r\nimport debounce from 'lodash/debounce'\r\n\r\nexport function useCustomerSearch() {\r\n  const searchResults = ref([])\r\n  const isSearching = ref(false)\r\n  const searchError = ref(null)\r\n  const lastSearchQuery = ref('')\r\n  \r\n  // Debounced search function\r\n  const searchCustomers = debounce(async (query) => {\r\n    if (!query || query.length < 3) {\r\n      searchResults.value = []\r\n      searchError.value = null\r\n      return\r\n    }\r\n\r\n    // Don't search if query hasn't changed\r\n    if (query === lastSearchQuery.value) return\r\n    \r\n    lastSearchQuery.value = query\r\n\r\n    isSearching.value = true\r\n    searchError.value = null\r\n\r\n    try {\r\n      const response = await apiClient.get('/v1/customers', {\r\n        params: {\r\n          search: query,\r\n          status_customer: 'A',\r\n          orderByField: 'created_at',\r\n          orderBy: 'desc',\r\n          page: 1\r\n        }\r\n      })\r\n\r\n      if (response.data?.customers?.data) {\r\n        searchResults.value = response.data.customers.data.map(customer => {\r\n          // Format phone number if present\r\n          const formattedPhone = customer.phone ? customer.phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1$2$3') : 'No phone'\r\n          \r\n          return {\r\n            title: customer.name,\r\n            subtitle: `${formattedPhone} • ${customer.email || ''}`,\r\n            value: customer\r\n          }\r\n        })\r\n      }\r\n    } catch (error) {\r\n      logger.error('Customer search failed:', error)\r\n      searchError.value = 'Failed to search customers'\r\n      searchResults.value = []\r\n    } finally {\r\n      isSearching.value = false\r\n    }\r\n  }, 350)\r\n\r\n  const createCustomer = async (customerData) => {\r\n    try {\r\n      const response = await apiClient.post('/v2/core-pos/customer', customerData)\r\n      return response.data\r\n    } catch (error) {\r\n      logger.error('Customer creation failed:', error)\r\n      const errorMessage = error.response?.data?.message || error.message || 'Failed to create customer'\r\n      throw new Error(errorMessage)\r\n    }\r\n  }\r\n\r\n  return {\r\n    searchResults,\r\n    isSearching,\r\n    searchError,\r\n    searchCustomers,\r\n    createCustomer\r\n  }\r\n}\r\n","<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"600\" :scrim=\"true\" transition=\"dialog-bottom-transition\" class=\"rounded-lg\">\r\n    <v-card class=\"rounded-lg\">\r\n      <v-toolbar color=\"primary\" density=\"comfortable\">\r\n        <v-toolbar-title class=\"text-h6 font-weight-medium\">\r\n          Create New Customer\r\n        </v-toolbar-title>\r\n        <v-spacer></v-spacer>\r\n        <v-btn icon=\"mdi-close\" variant=\"text\" @click=\"closeDialog\" />\r\n      </v-toolbar>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <!-- Customer Information Section -->\r\n          <v-row>\r\n            <v-col cols=\"12\">\r\n              <div class=\"text-subtitle-1 mb-2\">Customer Information</div>\r\n              <v-text-field\r\n                v-model=\"formData.name\"\r\n                label=\"Full Name\"\r\n                :error-messages=\"errors.name\"\r\n                @input=\"clearError('name')\"\r\n                required\r\n                variant=\"outlined\"\r\n                density=\"comfortable\"\r\n                class=\"mb-3\"\r\n              ></v-text-field>\r\n\r\n              <v-text-field\r\n                v-model=\"formData.phone\"\r\n                label=\"Phone Number\"\r\n                :error-messages=\"errors.phone\"\r\n                @input=\"clearError('phone')\"\r\n                required\r\n                variant=\"outlined\"\r\n                density=\"comfortable\"\r\n                class=\"mb-3\"\r\n              ></v-text-field>\r\n\r\n              <v-text-field\r\n                v-model=\"formData.email\"\r\n                label=\"Email (Optional)\"\r\n                variant=\"outlined\"\r\n                density=\"comfortable\"\r\n                class=\"mb-3\"\r\n              ></v-text-field>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <!-- Address Section -->\r\n          <v-row>\r\n            <v-col cols=\"12\">\r\n              <div class=\"text-subtitle-1 mb-2\">Address Information</div>\r\n              <v-text-field\r\n                v-model=\"formData.address\"\r\n                label=\"Street Address\"\r\n                :error-messages=\"errors.address\"\r\n                @input=\"clearError('address')\"\r\n                required\r\n                variant=\"outlined\"\r\n                density=\"comfortable\"\r\n                class=\"mb-3\"\r\n              ></v-text-field>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <v-row>\r\n            <v-col cols=\"12\" sm=\"6\">\r\n              <v-text-field\r\n                v-model=\"formData.unit\"\r\n                label=\"Apt/Suite/Unit (Optional)\"\r\n                variant=\"outlined\"\r\n                density=\"comfortable\"\r\n                class=\"mb-3\"\r\n              ></v-text-field>\r\n            </v-col>\r\n            <v-col cols=\"12\" sm=\"6\">\r\n              <v-text-field\r\n                v-model=\"formData.zipCode\"\r\n                label=\"ZIP Code\"\r\n                :error-messages=\"errors.zipCode\"\r\n                @input=\"clearError('zipCode')\"\r\n                required\r\n                variant=\"outlined\"\r\n                density=\"comfortable\"\r\n                class=\"mb-3\"\r\n              ></v-text-field>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <v-row>\r\n            <v-col cols=\"12\" sm=\"6\">\r\n              <v-text-field\r\n                v-model=\"formData.city\"\r\n                label=\"City\"\r\n                :error-messages=\"errors.city\"\r\n                @input=\"clearError('city')\"\r\n                required\r\n                variant=\"outlined\"\r\n                density=\"comfortable\"\r\n                class=\"mb-3\"\r\n              ></v-text-field>\r\n            </v-col>\r\n            <v-col cols=\"12\" sm=\"6\">\r\n              <StateDropdown\r\n                v-model=\"formData.state\"\r\n                :error=\"errors.state\"\r\n                @state-selected=\"onStateSelect\"\r\n                @update:model-value=\"clearError('state')\"\r\n                class=\"mb-3\"\r\n              />\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <v-container>\r\n          <v-row>\r\n            <v-col cols=\"12\">\r\n              <v-btn\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                block\r\n                height=\"56\"\r\n                @click=\"createCustomer\"\r\n                :loading=\"creating\"\r\n                :disabled=\"creating\"\r\n                elevation=\"2\"\r\n              >\r\n                <v-icon start>mdi-account-plus</v-icon>\r\n                Create Customer\r\n              </v-btn>\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, watch } from 'vue'\r\nimport StateDropdown from '@/components/common/StateDropdown.vue'\r\nimport { useCustomerSearch } from '../../composables/useCustomerSearch'\r\n\r\nconst props = defineProps({\r\n  modelValue: Boolean,\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'customer-created'])\r\n\r\nconst { createCustomer: apiCreateCustomer } = useCustomerSearch()\r\n\r\nconst dialog = computed({\r\n  get: () => props.modelValue,\r\n  set: (value) => emit('update:modelValue', value)\r\n})\r\n\r\nconst formData = reactive({\r\n  name: '',\r\n  phone: '',\r\n  email: '',\r\n  address: '',\r\n  unit: '',\r\n  city: '',\r\n  state: '',\r\n  state_id: null,\r\n  zipCode: '',\r\n})\r\n\r\nconst onStateSelect = (state) => {\r\n  formData.state_id = state.id\r\n}\r\n\r\nconst initialFormData = { ...formData }\r\n\r\nconst resetForm = () => {\r\n  Object.assign(formData, initialFormData)\r\n  clearAllErrors()\r\n}\r\n\r\nconst errors = reactive({\r\n  name: '',\r\n  phone: '',\r\n  address: '',\r\n  city: '',\r\n  state: '',\r\n  zipCode: '',\r\n})\r\n\r\nconst creating = ref(false)\r\n\r\nconst validateForm = () => {\r\n  let isValid = true\r\n  clearAllErrors()\r\n\r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Name is required'\r\n    isValid = false\r\n  } else if (formData.name.trim().length < 3) {\r\n    errors.name = 'Name must be at least 3 characters'\r\n    isValid = false\r\n  } else if (formData.name.trim().length > 100) {\r\n    errors.name = 'Name must not exceed 100 characters'\r\n    isValid = false\r\n  }\r\n\r\n  if (formData.phone.trim() && (formData.phone.trim().length < 3 || formData.phone.trim().length > 25)) {\r\n    errors.phone = 'Phone number must be between 3 and 25 characters'\r\n    isValid = false\r\n  }\r\n\r\n  if (formData.address.trim() && (formData.address.trim().length < 3 || formData.address.trim().length > 120)) {\r\n    errors.address = 'Address must be between 3 and 120 characters'\r\n    isValid = false\r\n  }\r\n\r\n  if (!formData.city.trim()) {\r\n    errors.city = 'City is required'\r\n    isValid = false\r\n  } else if (formData.city.trim().length > 50) {\r\n    errors.city = 'City must not exceed 50 characters'\r\n    isValid = false\r\n  }\r\n\r\n  if (!formData.state.trim()) {\r\n    errors.state = 'State is required'\r\n    isValid = false\r\n  } else if (formData.state.trim().length > 2) {\r\n    errors.state = 'Please use 2-letter state code'\r\n    isValid = false\r\n  }\r\n\r\n  if (!formData.zipCode.trim()) {\r\n    errors.zipCode = 'ZIP code is required'\r\n    isValid = false\r\n  } else if (!/^\\d{5}(-\\d{4})?$/.test(formData.zipCode.trim())) {\r\n    errors.zipCode = 'Invalid ZIP code format'\r\n    isValid = false\r\n  }\r\n\r\n  if (formData.email.trim()) {\r\n    if (formData.email.trim().length < 5 || formData.email.trim().length > 120) {\r\n      errors.email = 'Email must be between 5 and 120 characters'\r\n      isValid = false\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email.trim())) {\r\n      errors.email = 'Please enter a valid email address'\r\n      isValid = false\r\n    }\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\nconst clearError = (field) => {\r\n  errors[field] = ''\r\n}\r\n\r\nconst clearAllErrors = () => {\r\n  Object.keys(errors).forEach(key => {\r\n    errors[key] = ''\r\n  })\r\n}\r\n\r\nconst createCustomer = async () => {\r\n  if (!validateForm()) return\r\n\r\n  creating.value = true\r\n\r\n  try {\r\n    const customerData = {\r\n      name: formData.name.trim(),\r\n      phone: formData.phone.trim(),\r\n      // Only include email if it's not empty\r\n      ...(formData.email.trim() && { email: formData.email.trim() }),\r\n      address_street_1: formData.address.trim(),\r\n      address_street_2: formData.unit.trim() || null,\r\n      city: formData.city.trim(),\r\n      state: formData.state.trim(),\r\n      zip: formData.zipCode.trim(),\r\n      state_id: formData.state_id,\r\n      status_customer: 'A',\r\n      company_id: 1,\r\n      avalara_type: 0,\r\n      prepaid_option: 0,\r\n      notes: '',\r\n      // Add required fields for user creation\r\n      first_name: formData.name.trim(),\r\n      last_name: formData.name.trim(),\r\n      contact_name: formData.name.trim(),\r\n      customer_type: 'R',\r\n      role: 'customer',\r\n      sale_type: 'Retail',\r\n      language: 'en',\r\n      timezone: 'America/Chicago',\r\n      status_payment: 'prepaid',\r\n      type_vat_regime: 1,\r\n      incorporated: 1,\r\n      lfln: 1\r\n    }\r\n\r\n    try {\r\n      const response = await apiCreateCustomer(customerData)\r\n      \r\n      if (!response?.id) {\r\n        throw new Error('Invalid response from server')\r\n      }\r\n\r\n      const customer = {\r\n        id: response.id,\r\n        ...customerData\r\n      }\r\n\r\n      // Show success message\r\n      if (window.toastr) {\r\n        window.toastr.success('Customer created successfully')\r\n      }\r\n      \r\n      // Emit customer data and close dialog\r\n      emit('customer-created', customer)\r\n      resetForm()\r\n      closeDialog()\r\n    } catch (error) {\r\n      // Handle specific API error responses\r\n      if (error.response?.data) {\r\n        const apiError = error.response.data\r\n        \r\n        // Check for duplicate customer errors\r\n        if (apiError.code === 'DUPLICATE_ENTRY') {\r\n          if (apiError.field === 'phone') {\r\n            errors.phone = 'This phone number is already registered'\r\n          } else if (apiError.field === 'email') {\r\n            errors.email = 'This email is already registered'\r\n          } else {\r\n            throw new Error(apiError.message || 'Customer already exists')\r\n          }\r\n          return\r\n        }\r\n        \r\n        // Handle validation errors from API\r\n        if (apiError.details) {\r\n          Object.keys(apiError.details).forEach(field => {\r\n            if (errors.hasOwnProperty(field)) {\r\n              errors[field] = apiError.details[field]\r\n            }\r\n          })\r\n          return\r\n        }\r\n      }\r\n      \r\n      // If we get here, it's an unexpected error\r\n      throw error\r\n    }\r\n  } catch (error) {\r\n    console.error('Customer creation error:', error)\r\n    const errorMessage = error.response?.data?.message || \r\n      error.message || \r\n      'Failed to create customer'\r\n    \r\n    if (window.toastr) {\r\n      window.toastr.error(errorMessage)\r\n    } else {\r\n      console.error(errorMessage)\r\n    }\r\n  } finally {\r\n    creating.value = false\r\n  }\r\n}\r\n\r\nconst closeDialog = () => {\r\n  if (creating.value) {\r\n    return\r\n  }\r\n  \r\n  resetForm()\r\n  dialog.value = false\r\n}\r\n\r\n// Prevent closing dialog while submitting\r\nwatch(() => props.modelValue, (newVal) => {\r\n  if (!newVal && creating.value) {\r\n    dialog.value = true\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.v-card-text {\r\n  padding-top: 20px;\r\n}\r\n\r\n.text-subtitle-1 {\r\n  color: rgba(var(--v-theme-on-surface), 0.7);\r\n}\r\n</style>\r\n","<template>\r\n  <v-dialog\r\n    v-model=\"dialog\"\r\n    fullscreen\r\n    transition=\"dialog-bottom-transition\"\r\n    :scrim=\"false\"\r\n    class=\"payment-dialog\"\r\n  >\r\n    <v-card class=\"modal-card\">\r\n      <v-toolbar \r\n        color=\"primary\" \r\n        density=\"comfortable\"\r\n      >\r\n        <v-toolbar-title class=\"text-h6 font-weight-medium\">\r\n          <v-icon :icon=\"props.invoice?.invoice?.type === 'PICKUP' ? 'mdi-store-clock' : 'mdi-truck-delivery'\" size=\"large\" class=\"mr-2\"></v-icon>\r\n          {{ props.invoice?.invoice?.type === 'PICKUP' ? 'Process Pick Up Order' : 'Process Delivery Order' }}\r\n        </v-toolbar-title>\r\n        <v-spacer></v-spacer>\r\n        <v-btn\r\n          icon\r\n          @click=\"closeDialog\"\r\n        >\r\n          <v-icon>mdi-close</v-icon>\r\n        </v-btn>\r\n      </v-toolbar>\r\n\r\n      <v-card-text class=\"pa-0 fill-height d-flex flex-column\">\r\n        <v-container fluid class=\"flex-grow-1 pa-4\">\r\n          <v-row>\r\n            <v-col cols=\"12\" class=\"text-center\">\r\n              <v-icon icon=\"mdi-check-circle\" color=\"success\" size=\"64\" class=\"mb-4\"></v-icon>\r\n              <h2 class=\"text-h5 mb-4\">{{ props.invoice?.invoice?.type === 'PICKUP' ? 'Pick Up Order Created Successfully' : 'Delivery Order Created Successfully' }}</h2>\r\n              <v-card variant=\"outlined\" class=\"invoice-summary-card mb-4\">\r\n                <v-card-text class=\"py-4\">\r\n                  <div class=\"d-flex justify-space-between mb-2\">\r\n                    <span>Invoice Number:</span>\r\n                    <strong>{{ invoiceNumber }}</strong>\r\n                  </div>\r\n                  <div class=\"d-flex justify-space-between mb-2\">\r\n                    <span>Total Amount:</span>\r\n                    <strong>{{ formatCurrency(invoiceTotal / 100) }}</strong>\r\n                  </div>\r\n                </v-card-text>\r\n              </v-card>\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions class=\"pa-4\">\r\n        <v-spacer></v-spacer>\r\n        <v-btn\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          min-width=\"120\"\r\n          height=\"48\"\r\n          @click=\"closeDialog\"\r\n          class=\"text-none px-6\"\r\n          rounded=\"pill\"\r\n          elevation=\"2\"\r\n        >\r\n          <v-icon start icon=\"mdi-check\" class=\"mr-1\"></v-icon>\r\n          Done\r\n        </v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport { posApi } from '@/services/api/pos-api'\r\nimport { logger } from '@/utils/logger'\r\nimport { useCompanyStore } from '@/stores/company'\r\nimport { convertHeldOrderToInvoice } from '../held-orders/utils/invoiceConverter'\r\n\r\nconst props = defineProps({\r\n  modelValue: Boolean,\r\n  invoice: {\r\n    type: Object,\r\n    required: true,\r\n    default: () => ({\r\n      invoice: {},\r\n      invoicePrefix: '',\r\n      nextInvoiceNumber: ''\r\n    })\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'payment-complete'])\r\n\r\n// State\r\nconst loading = ref(false)\r\nconst processing = ref(false)\r\nconst error = ref(null)\r\n\r\n// Dialog computed property\r\nconst dialog = computed({\r\n  get: () => props.modelValue,\r\n  set: (value) => emit('update:modelValue', value)\r\n})\r\n\r\n// Computed properties for invoice details\r\nconst invoiceNumber = computed(() => {\r\n  return props.invoice?.invoice?.invoice_number || \r\n         `${props.invoice?.invoicePrefix}-${props.invoice?.nextInvoiceNumber}` || \r\n         ''\r\n})\r\n\r\nconst invoiceTotal = computed(() => {\r\n  return props.invoice?.invoice?.total || 0\r\n})\r\n\r\n// Methods\r\nconst formatCurrency = (amount) => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n  }).format(amount)\r\n}\r\n\r\nconst closeDialog = () => {\r\n  emit('payment-complete', true)\r\n  dialog.value = false\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: rgb(var(--v-theme-surface));\r\n}\r\n\r\n.v-toolbar {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.v-card-text {\r\n  overflow-y: auto;\r\n}\r\n\r\n.invoice-summary-card {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n:deep(.v-card-actions) {\r\n  background-color: rgb(var(--v-theme-surface));\r\n  border-top: thin solid rgba(var(--v-border-color), var(--v-border-opacity));\r\n  padding: 12px 24px;\r\n}\r\n</style>\r\n","// src/services/section-order.service.ts\r\n\r\nimport apiClient from './api/client'\r\nimport { logger } from '@/utils/logger'\r\nimport { Order, OrderStatus } from '@/types/order'\r\n\r\nexport interface SectionOrder {\r\n  id: number\r\n  description?: string | null\r\n  invoice_date: string\r\n  due_date: string\r\n  user_id: number\r\n  cash_register_id: number | null\r\n  type: 'holdInvoice' | 'Invoice'\r\n  invoice_number?: string\r\n  status?: OrderStatus\r\n  items?: OrderItem[]\r\n}\r\n\r\nexport interface OrderItem {\r\n  id: number\r\n  name: string\r\n  description: string | null\r\n  price: number\r\n  quantity: string\r\n  unit_name: string\r\n  discount: string\r\n  tax: number\r\n  total: number\r\n  section_id: number\r\n  section_type?: 'kitchen' | 'bar'\r\n}\r\n\r\nexport interface Section {\r\n  id: number\r\n  name: string\r\n  company_id: number\r\n}\r\n\r\nexport interface SectionResponse {\r\n  section: Section\r\n  items: OrderItem[]\r\n}\r\n\r\nclass SectionOrderService {\r\n  private async getOrdersBySectionAndType(sectionId: number, type: 'HOLD' | 'INVOICE', status: 'P' | 'C' = 'P') {\r\n    try {\r\n      const response = await apiClient.post('/v1/core-pos/listordersbysection', null, {\r\n        params: {\r\n          section_id: sectionId,\r\n          type,\r\n          status\r\n        }\r\n      })\r\n\r\n      if (!response.data?.orders) {\r\n        throw new Error('Invalid response format')\r\n      }\r\n\r\n      return response.data.orders.map((order: any) => ({\r\n        ...order,\r\n        type: order.type === 'Invoice' ? 'Invoice' : 'holdInvoice',\r\n        status: order.status || OrderStatus.PENDING\r\n      })) as SectionOrder[]\r\n    } catch (error) {\r\n      logger.error('Failed to fetch orders by section', {\r\n        sectionId,\r\n        type,\r\n        status,\r\n        error\r\n      })\r\n      throw error\r\n    }\r\n  }\r\n\r\n  private async getOrderDetails(orderId: number, type: 'HOLD' | 'INVOICE') {\r\n    try {\r\n      const response = await apiClient.post('/v1/core-pos/getsectionanditem', null, {\r\n        params: {\r\n          id: orderId,\r\n          type\r\n        }\r\n      })\r\n\r\n      if (!response.data?.data) {\r\n        throw new Error('Invalid response format')\r\n      }\r\n\r\n      return response.data.data as SectionResponse[]\r\n    } catch (error) {\r\n      logger.error('Failed to fetch order details', {\r\n        orderId,\r\n        type,\r\n        error\r\n      })\r\n      throw error\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets all pending orders for a section\r\n   * @param sectionId - The section ID to fetch orders for\r\n   * @returns Promise<SectionOrder[]> Array of orders with status 'P' (pending)\r\n   */\r\n  async getAllOrdersForSection(sectionId: number): Promise<SectionOrder[]> {\r\n    logger.debug('Fetching pending orders for section', { sectionId })\r\n    \r\n    try {\r\n      // Fetch both HOLD and INVOICE orders\r\n      const [holdOrders, invoiceOrders] = await Promise.all([\r\n        this.getOrdersBySectionAndType(sectionId, 'HOLD'),\r\n        this.getOrdersBySectionAndType(sectionId, 'INVOICE')\r\n      ])\r\n\r\n      // Fetch details for all orders\r\n      const orderDetailsPromises = [\r\n        ...holdOrders.map(order => this.getOrderDetails(order.id, 'HOLD')),\r\n        ...invoiceOrders.map(order => this.getOrderDetails(order.id, 'INVOICE'))\r\n      ]\r\n\r\n      const orderDetailsResults = await Promise.all(orderDetailsPromises)\r\n\r\n      // Combine orders with their details\r\n      const allOrders = [...holdOrders, ...invoiceOrders]\r\n      const enrichedOrders = allOrders.map((order, index) => {\r\n        const details = orderDetailsResults[index]\r\n        const items = details.flatMap(section => \r\n          section.items.map(item => ({\r\n            ...item,\r\n            section_type: section.section.name.toLowerCase()\r\n          }))\r\n        )\r\n\r\n        return {\r\n          ...order,\r\n          items\r\n        }\r\n      })\r\n\r\n      return enrichedOrders\r\n    } catch (error) {\r\n      logger.error('Failed to fetch all orders for section', {\r\n        sectionId,\r\n        error\r\n      })\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async updateOrderStatus(orderId: number, type: 'HOLD' | 'INVOICE', status: OrderStatus) {\r\n    try {\r\n      // Implementation depends on your API endpoint for status updates\r\n      // This is a placeholder - you'll need to implement the actual API call\r\n      const response = await apiClient.post(`/v1/core-pos/updateorderstatus`, {\r\n        id: orderId,\r\n        type,\r\n        status\r\n      })\r\n\r\n      return response.data\r\n    } catch (error) {\r\n      logger.error('Failed to update order status', {\r\n        orderId,\r\n        type,\r\n        status,\r\n        error\r\n      })\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport const sectionOrderService = new SectionOrderService()\r\nexport default sectionOrderService","// src/stores/section-orders.store.ts\r\nimport { defineStore } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\nimport { sectionOrderService, SectionOrder } from '@/services/section-order.service'\r\nimport { OrderStatus } from '@/types/order'\r\nimport { logger } from '@/utils/logger'\r\nimport debounce from 'lodash/debounce'\r\n\r\nexport const useSectionOrdersStore = defineStore('sectionOrders', () => {\r\n  // State\r\n  const orders = ref<SectionOrder[]>([])\r\n  const loading = ref(false)\r\n  const error = ref<string | null>(null)\r\n  const lastUpdated = ref<Date | null>(null)\r\n  const cache = new Map<string, { data: SectionOrder[], timestamp: number }>()\r\n  const CACHE_DURATION = 10000 // 10 seconds\r\n\r\n  // Getters\r\n  const getOrdersBySection = computed(() => (sectionType: 'kitchen' | 'bar') => {\r\n    return orders.value.filter(order => \r\n      order.items?.some(item => item.section_type === sectionType)\r\n    )\r\n  })\r\n\r\n  // Debounced fetch function\r\n  const debouncedFetch = debounce(async (sectionId: number) => {\r\n    await fetchOrdersForSection(sectionId)\r\n  }, 1000) // 1 second debounce\r\n\r\n  // Actions\r\n  async function fetchOrdersForSection(sectionId: number, force = false) {\r\n    const cacheKey = `section_${sectionId}`\r\n    const now = Date.now()\r\n    const cached = cache.get(cacheKey)\r\n\r\n    if (!force && cached && (now - cached.timestamp) < CACHE_DURATION) {\r\n      orders.value = cached.data\r\n      return\r\n    }\r\n\r\n    if (loading.value) return\r\n\r\n    loading.value = true\r\n    error.value = null\r\n\r\n    try {\r\n      const sectionOrders = await sectionOrderService.getAllOrdersForSection(sectionId)\r\n      orders.value = sectionOrders\r\n      lastUpdated.value = new Date()\r\n\r\n      // Update cache\r\n      cache.set(cacheKey, {\r\n        data: sectionOrders,\r\n        timestamp: now\r\n      })\r\n\r\n      logger.debug('Orders fetched and cached', {\r\n        count: sectionOrders.length,\r\n        sectionId\r\n      })\r\n    } catch (err) {\r\n      error.value = err instanceof Error ? err.message : 'Failed to fetch orders'\r\n      logger.error('Failed to fetch section orders', { err })\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  function refreshOrders(sectionId: number) {\r\n    return fetchOrdersForSection(sectionId, true)\r\n  }\r\n\r\n  return {\r\n    // State\r\n    orders,\r\n    loading,\r\n    error,\r\n    lastUpdated,\r\n\r\n    // Getters\r\n    getOrdersBySection,\r\n\r\n    // Actions\r\n    fetchOrdersForSection,\r\n    refreshOrders,\r\n    debouncedFetch\r\n  }\r\n})\r\n\r\nexport default useSectionOrdersStore","import { defineStore } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\nimport { logger } from '@/utils/logger'\r\nimport { OrderStatus } from '@/types/order'\r\nimport { useSectionOrdersStore } from './section-orders.store'\r\n\r\n// Define valid kitchen order types\r\nconst KITCHEN_ORDER_TYPES = [\r\n  OrderStatus.DINE_IN,\r\n  OrderStatus.TO_GO,\r\n  OrderStatus.DELIVERY,\r\n  OrderStatus.PICKUP\r\n]\r\n\r\nexport const useKitchenStore = defineStore('kitchen', () => {\r\n  // State\r\n  const orders = ref([])\r\n  const loading = ref(false)\r\n  const error = ref(null)\r\n\r\n  // Getters\r\n  const activeOrders = computed(() =>\r\n    orders.value.filter(order =>\r\n      // Only show non-completed orders\r\n      !order.completed_at &&\r\n      order.status !== 'completed' &&\r\n      order.status !== 'cancelled'\r\n    )\r\n  )\r\n\r\n  const completedOrders = computed(() =>\r\n    orders.value.filter(order =>\r\n      // Show completed or cancelled orders\r\n      (order.completed_at ||\r\n        order.status === 'completed' ||\r\n        order.status === 'cancelled')\r\n    )\r\n  )\r\n\r\n  // Actions\r\n  const initializeOrders = async (holdInvoices = [], directInvoices = []) => {\r\n    const sectionStore = useSectionOrdersStore()\r\n    loading.value = true\r\n\r\n    try {\r\n      // Ensure sections are loaded\r\n      await sectionStore.fetchSections()\r\n\r\n      // Process and filter orders\r\n      const processOrder = async (order, source) => {\r\n        // Skip non-kitchen orders\r\n        if (!KITCHEN_ORDER_TYPES.includes(order.type)) {\r\n          return null\r\n        }\r\n\r\n        // Process each item to include section info\r\n        const items = await Promise.all(\r\n          (order.items || []).map(async item => {\r\n            const sections = await sectionStore.getSectionsForItem(item.id)\r\n            const section = sections[0] // Get primary section\r\n            return {\r\n              ...item,\r\n              section_id: section?.id,\r\n              section_type: section?.type,\r\n              section_name: section?.name\r\n            }\r\n          })\r\n        )\r\n\r\n        // Only include orders with kitchen items\r\n        if (!items.some(item => item.section_type === 'kitchen')) {\r\n          return null\r\n        }\r\n\r\n        return {\r\n          ...order,\r\n          items,\r\n          source,\r\n          completed_at: order.completed_at || null,\r\n          status: order.status || 'pending',\r\n          created_at: order.created_at || new Date().toISOString(),\r\n          type: order.type || 'UNKNOWN'\r\n        }\r\n      }\r\n\r\n      // Process all orders\r\n      const processedOrders = await Promise.all([\r\n        ...holdInvoices.map(order => processOrder(order, 'hold_invoice')),\r\n        ...directInvoices.map(order => processOrder(order, 'direct_invoice'))\r\n      ])\r\n\r\n      // Filter out null orders and sort\r\n      orders.value = processedOrders\r\n        .filter(order => order !== null)\r\n        .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))\r\n\r\n      logger.info(`Initialized ${orders.value.length} kitchen orders`)\r\n      persistOrders()\r\n    } catch (err) {\r\n      error.value = 'Failed to initialize kitchen orders'\r\n      logger.error('Error initializing kitchen orders:', err)\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const addOrder = async (order) => {\r\n    if (!KITCHEN_ORDER_TYPES.includes(order.type)) {\r\n      logger.debug('Ignoring non-kitchen order:', order.type)\r\n      return\r\n    }\r\n\r\n    const sectionStore = useSectionOrdersStore()\r\n\r\n    try {\r\n      // Process items to include section info\r\n      const items = await Promise.all(\r\n        (order.items || []).map(async item => {\r\n          const sections = await sectionStore.getSectionsForItem(item.id)\r\n          const section = sections[0] // Get primary section\r\n          return {\r\n            ...item,\r\n            section_id: section?.id,\r\n            section_type: section?.type,\r\n            section_name: section?.name\r\n          }\r\n        })\r\n      )\r\n\r\n      // Only add if there are kitchen items\r\n      if (items.some(item => item.section_type === 'kitchen')) {\r\n        orders.value.unshift({\r\n          ...order,\r\n          items,\r\n          completed_at: null,\r\n          status: 'pending',\r\n          created_at: new Date().toISOString()\r\n        })\r\n\r\n        logger.info(`Added new ${order.type} order to kitchen`)\r\n        persistOrders()\r\n      } else {\r\n        logger.debug('Ignoring order with no kitchen items')\r\n      }\r\n    } catch (err) {\r\n      error.value = 'Failed to add kitchen order'\r\n      logger.error('Error adding kitchen order:', err)\r\n    }\r\n  }\r\n\r\n  const completeOrder = async (orderId) => {\r\n    loading.value = true\r\n    error.value = null\r\n\r\n    try {\r\n      // Find the order\r\n      const orderIndex = orders.value.findIndex(o => o.id === orderId)\r\n      if (orderIndex === -1) {\r\n        throw new Error(`Order #${orderId} not found`)\r\n      }\r\n\r\n      // Update the order\r\n      orders.value[orderIndex] = {\r\n        ...orders.value[orderIndex],\r\n        status: 'completed',\r\n        completed_at: new Date().toISOString()\r\n      }\r\n\r\n      // Store in localStorage for persistence\r\n      persistOrders()\r\n\r\n      logger.info(`Order #${orderId} marked as completed`)\r\n      return true\r\n    } catch (err) {\r\n      error.value = err.message\r\n      logger.error('Error completing order:', err)\r\n      return false\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  // Persistence helpers\r\n  const STORAGE_KEY = 'kitchen_orders'\r\n\r\n  const persistOrders = () => {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(orders.value))\r\n      logger.debug('Kitchen orders persisted to localStorage')\r\n    } catch (error) {\r\n      logger.error('Failed to persist kitchen orders:', error)\r\n    }\r\n  }\r\n\r\n  const loadPersistedOrders = () => {\r\n    try {\r\n      const stored = localStorage.getItem(STORAGE_KEY)\r\n      if (stored) {\r\n        orders.value = JSON.parse(stored)\r\n        logger.info(`Loaded ${orders.value.length} kitchen orders from localStorage`)\r\n      }\r\n    } catch (error) {\r\n      logger.error('Failed to load persisted kitchen orders:', error)\r\n    }\r\n  }\r\n\r\n  // Load persisted orders on store initialization\r\n  loadPersistedOrders()\r\n\r\n  // Add method to add direct invoice\r\n  const addDirectInvoice = (invoice) => {\r\n    if (!invoice || !KITCHEN_ORDER_TYPES.includes(invoice.type)) {\r\n      logger.debug('Ignoring invalid invoice:', invoice?.type)\r\n      return\r\n    }\r\n\r\n    const formattedInvoice = {\r\n      ...invoice,\r\n      source: 'direct_invoice',\r\n      completed_at: null,\r\n      status: 'pending',\r\n      created_at: new Date().toISOString()\r\n    }\r\n\r\n    orders.value.unshift(formattedInvoice)\r\n    logger.info(`Added new ${invoice.type} order to kitchen`)\r\n    persistOrders()\r\n  }\r\n\r\n  return {\r\n    // State\r\n    orders,\r\n    loading,\r\n    error,\r\n\r\n    // Getters\r\n    activeOrders,\r\n    completedOrders,\r\n\r\n    // Actions\r\n    initializeOrders,\r\n    addOrder,\r\n    addDirectInvoice,\r\n    completeOrder\r\n  }\r\n})\r\n","<template>\r\n  <v-dialog \r\n    v-model=\"dialog\" \r\n    fullscreen\r\n    transition=\"dialog-bottom-transition\"\r\n    :scrim=\"false\"\r\n  >\r\n    <DeliveryPaymentDialog\r\n      v-model=\"showPaymentDialog\"\r\n      :invoice=\"invoiceData\"\r\n      @payment-complete=\"onPaymentComplete\"\r\n    />\r\n    <template v-slot:activator=\"{ props: dialogProps }\">\r\n      <v-btn\r\n        color=\"primary\"\r\n        v-bind=\"dialogProps\"\r\n        prepend-icon=\"mdi-truck-delivery\"\r\n        :loading=\"loading\"\r\n        :disabled=\"disabled || cartStore.isEmpty\"\r\n        class=\"text-none px-6\"\r\n        rounded=\"pill\"\r\n        :elevation=\"$vuetify.display.mobile ? 1 : 2\"\r\n        size=\"large\"\r\n        :block=\"$vuetify.display.mobile\"\r\n      >\r\n        <span class=\"text-subtitle-1 font-weight-medium\">DELIVERY</span>\r\n      </v-btn>\r\n    </template>\r\n\r\n    <v-card class=\"modal-card\">\r\n      <v-toolbar \r\n        color=\"primary\"\r\n        density=\"comfortable\"\r\n      >\r\n        <v-toolbar-title class=\"text-h6 font-weight-medium\">\r\n          <v-icon icon=\"mdi-truck-delivery\" size=\"large\" class=\"mr-2\"></v-icon>\r\n          Delivery Order\r\n        </v-toolbar-title>\r\n        <v-spacer></v-spacer>\r\n        <v-btn\r\n          icon\r\n          @click=\"closeModal\"\r\n        >\r\n          <v-icon>mdi-close</v-icon>\r\n        </v-btn>\r\n      </v-toolbar>\r\n\r\n      <v-card-text class=\"pa-0 fill-height d-flex flex-column\">\r\n        <v-container fluid class=\"flex-grow-1 pa-4\">\r\n          <!-- Loading State -->\r\n          <v-row v-if=\"loading\">\r\n            <v-col cols=\"12\" class=\"text-center\">\r\n              <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <!-- Error State -->\r\n          <v-row v-else-if=\"error\">\r\n            <v-col cols=\"12\" class=\"text-center\">\r\n              <v-alert type=\"error\" variant=\"tonal\">\r\n                {{ error }}\r\n              </v-alert>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <!-- Delivery Information Form -->\r\n          <template v-else>\r\n            <!-- Customer Information Section -->\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <div class=\"text-subtitle-1 mb-2\">Customer Information</div>\r\n                <v-autocomplete\r\n                  v-model=\"selectedCustomer\"\r\n                  v-model:search=\"customerSearch\"\r\n                  :items=\"searchResults\"\r\n                  :loading=\"isSearching\"\r\n                  :error-messages=\"validationErrors.name\"\r\n                  label=\"Search Customer\"\r\n                  item-title=\"title\"\r\n                  item-value=\"value\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  persistent-hint\r\n                  hint=\"Search by name, phone, or email (min. 3 characters)\"\r\n                  return-object\r\n                  @update:search=\"onCustomerSearch\"\r\n                  @update:model-value=\"onCustomerSelect\"\r\n                >\r\n                  <template v-slot:append-inner>\r\n                    <v-icon\r\n                      v-if=\"selectedCustomer\"\r\n                      color=\"error\"\r\n                      @click.stop=\"clearSelectedCustomer\"\r\n                    >\r\n                      mdi-close\r\n                    </v-icon>\r\n                  </template>\r\n                  <template v-slot:no-data>\r\n                    <v-list-item>\r\n                      <v-list-item-title>\r\n                        No customers found\r\n                      </v-list-item-title>\r\n                      <template v-slot:append>\r\n                        <v-btn\r\n                          color=\"primary\"\r\n                          variant=\"text\"\r\n                          @click=\"showCreateCustomer = true\"\r\n                        >\r\n                          Create New\r\n                        </v-btn>\r\n                      </template>\r\n                    </v-list-item>\r\n                  </template>\r\n                  <template v-slot:item=\"{ props, item }\">\r\n                    <v-list-item v-bind=\"props\">\r\n                      <v-list-item-title>{{ item.raw.name }}</v-list-item-title>\r\n                      <v-list-item-subtitle>\r\n                        {{ item.raw.phone || 'No phone' }}\r\n                        {{ item.raw.email ? `• ${item.raw.email}` : '' }}\r\n                      </v-list-item-subtitle>\r\n                      <v-list-item-subtitle v-if=\"item.raw.address_street_1\">\r\n                        {{ item.raw.address_street_1 }}\r\n                        {{ item.raw.address_street_2 ? `, ${item.raw.address_street_2}` : '' }}\r\n                        {{ item.raw.city ? `, ${item.raw.city}` : '' }}\r\n                        {{ item.raw.state ? ` ${item.raw.state}` : '' }}\r\n                        {{ item.raw.zip_code ? ` ${item.raw.zip_code}` : '' }}\r\n                      </v-list-item-subtitle>\r\n                    </v-list-item>\r\n                  </template>\r\n                </v-autocomplete>\r\n\r\n                <CreateCustomerDialog\r\n                  v-model=\"showCreateCustomer\"\r\n                  @customer-created=\"onCustomerCreated\"\r\n                />\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <v-text-field\r\n                  v-model=\"customerInfo.phone\"\r\n                  label=\"Phone Number\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  :error-messages=\"validationErrors.phone\"\r\n                  @input=\"clearError('phone')\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <!-- Delivery Address Section -->\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <div class=\"text-subtitle-1 mb-2\">Delivery Address</div>\r\n                <v-text-field\r\n                  v-model=\"customerInfo.address\"\r\n                  label=\"Street Address\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  :error-messages=\"validationErrors.address\"\r\n                  @input=\"clearError('address')\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <v-row>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  v-model=\"customerInfo.unit\"\r\n                  label=\"Apt/Suite/Unit (Optional)\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  v-model=\"customerInfo.zipCode\"\r\n                  label=\"ZIP Code\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  :error-messages=\"validationErrors.zipCode\"\r\n                  @input=\"clearError('zipCode')\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <v-row>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  v-model=\"customerInfo.city\"\r\n                  label=\"City\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  :error-messages=\"validationErrors.city\"\r\n                  @input=\"clearError('city')\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <StateDropdown\r\n                  v-model=\"customerInfo.state\"\r\n                  :error=\"validationErrors.state\"\r\n                  @state-selected=\"onStateSelect\"\r\n                  @update:model-value=\"clearError('state')\"\r\n                />\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <!-- Delivery Instructions -->\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <v-textarea\r\n                  v-model=\"customerInfo.instructions\"\r\n                  label=\"Delivery Instructions (Optional)\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  rows=\"2\"\r\n                  hint=\"Special instructions for delivery driver\"\r\n                ></v-textarea>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <!-- SMS Toggle -->\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <v-switch\r\n                  v-model=\"sendSms\"\r\n                  color=\"primary\"\r\n                  label=\"Send invoice via SMS\"\r\n                  hint=\"Customer will receive an SMS with the invoice link\"\r\n                  persistent-hint\r\n                ></v-switch>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <!-- Submit Button -->\r\n            <v-row class=\"mt-4\">\r\n              <v-col cols=\"12\">\r\n                <v-btn\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  block\r\n                  height=\"56\"\r\n                  @click=\"processOrder\"\r\n                  :loading=\"processing\"\r\n                  :disabled=\"!canProcessOrder || processing\"\r\n                  elevation=\"2\"\r\n                >\r\n                  <v-icon start>mdi-check-circle</v-icon>\r\n                  Process Order\r\n                </v-btn>\r\n              </v-col>\r\n            </v-row>\r\n          </template>\r\n        </v-container>\r\n      </v-card-text>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, reactive } from 'vue'\r\nimport StateDropdown from '@/components/common/StateDropdown.vue'\r\nimport CreateCustomerDialog from '../customer/CreateCustomerDialog.vue'\r\nimport DeliveryPaymentDialog from '../dialogs/DeliveryPaymentDialog.vue'\r\nimport { useOrderType } from '../../composables/useOrderType'\r\nimport { useCustomerSearch } from '../../composables/useCustomerSearch'\r\nimport { usePosStore } from '@/stores/pos-store'\r\nimport { useCartStore } from '@/stores/cart-store'\r\nimport { useCompanyStore } from '@/stores/company'\r\nimport { useKitchenStore } from '@/stores/kitchen'\r\nimport { logger } from '../../../../utils/logger'\r\nimport { apiClient } from '@/services/api/client'\r\nimport { posApi } from '@/services/api/pos-api'\r\nimport { convertHeldOrderToInvoice } from '../held-orders/utils/invoiceConverter'\r\nimport { PriceUtils } from '@/utils/price'\r\nimport { parseOrderNotes } from '../../../../stores/cart/helpers'\r\nimport { OrderType } from '../../../../types/order'\r\n\r\nconst { customerNotes } = useOrderType()\r\n// Computed properties for store and cashier\r\nconst selectedStore = computed(() => companyStore.selectedStore)\r\nconst selectedCashier = computed(() => companyStore.selectedCashier)\r\n\r\n// Props\r\nconst props = defineProps({\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\n// Store access\r\nconst posStore = usePosStore()\r\nconst cartStore = useCartStore()\r\nconst companyStore = useCompanyStore()\r\nconst kitchenStore = useKitchenStore()\r\n\r\n// Composables\r\nconst { \r\n  setOrderType, \r\n  processOrder: processOrderType, \r\n  ORDER_TYPES, \r\n  error: orderError,\r\n  setCustomerInfo\r\n} = useOrderType()\r\n\r\n// Customer search integration\r\nconst { \r\n  searchResults,\r\n  isSearching,\r\n  searchError,\r\n  searchCustomers,\r\n  createCustomer\r\n} = useCustomerSearch()\r\n\r\n// Local state\r\nconst dialog = ref(false)\r\nconst loading = ref(false)\r\nconst processing = ref(false)\r\nconst sendSms = ref(false)\r\nconst showPaymentDialog = ref(false)\r\nconst error = computed(() => orderError.value || searchError.value)\r\n\r\nconst canProcessOrder = computed(() => {\r\n  return !cartStore.isEmpty && \r\n         (customerInfo.name || '').trim() && \r\n         (customerInfo.phone || '').trim() && \r\n         (customerInfo.address || '').trim() && \r\n         (customerInfo.city || '').trim() && \r\n         (customerInfo.state || '').trim() && \r\n         (customerInfo.zipCode || '').trim()\r\n})\r\nconst customerSearch = ref('')\r\nconst selectedCustomer = ref(null)\r\nconst showCreateCustomer = ref(false)\r\n\r\n// Customer search handlers\r\nconst onCustomerSearch = async (search) => {\r\n  customerSearch.value = search // Maintain search text\r\n  if (search && search.length >= 3) {\r\n    try {\r\n      // Check if search is a phone number (contains only digits, spaces, dashes or parentheses)\r\n      const isPhoneSearch = /^[\\d\\s\\-()]+$/.test(search)\r\n      // If it's a phone search, clean up the format before searching\r\n      const searchTerm = isPhoneSearch ? search.replace(/[\\s\\-()]/g, '') : search\r\n      \r\n      // Get the search results\r\n      const response = await apiClient.get('/v1/customers', {\r\n        params: {\r\n          search: searchTerm,\r\n          status_customer: 'A',\r\n          orderByField: 'created_at',\r\n          orderBy: 'desc',\r\n          page: 1\r\n        }\r\n      })\r\n      \r\n      // Extract and format the customers from the paginated response\r\n      const customers = response.data.customers?.data || []\r\n      \r\n      // Update the search results with properly formatted data for v-autocomplete\r\n      searchResults.value = customers.map(customer => {\r\n        const displayName = customer.name || customer.customer_username || 'Unknown'\r\n        const displayPhone = customer.phone ? customer.phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3') : 'No phone'\r\n        const displayEmail = customer.email ? ` • ${customer.email}` : ''\r\n        \r\n        return {\r\n          ...customer,\r\n          title: isPhoneSearch ? `${displayPhone} - ${displayName}` : displayName,\r\n          subtitle: isPhoneSearch ? displayEmail : `${displayPhone}${displayEmail}`,\r\n          value: customer.id\r\n        }\r\n      })\r\n      \r\n      logger.debug('Customer search results:', {\r\n        searchTerm,\r\n        isPhoneSearch,\r\n        results: searchResults.value\r\n      })\r\n    } catch (error) {\r\n      logger.error('Customer search failed:', error)\r\n      searchResults.value = []\r\n    }\r\n  } else {\r\n    searchResults.value = []\r\n  }\r\n}\r\n\r\nconst onCustomerSelect = async (customer) => {\r\n  if (customer) {\r\n    logger.debug('Customer selected:', customer)\r\n\r\n    try {\r\n      // Fetch full customer details including addresses\r\n      const response = await apiClient.get(`/v1/customers/${customer.id}`, {\r\n        params: {\r\n          include: 'billing_address,addresses'\r\n        }\r\n      })\r\n      \r\n      const fullCustomer = response.data.customer\r\n      const billingAddress = fullCustomer.billing_address || {}\r\n      \r\n      logger.debug('Full customer data:', fullCustomer)\r\n      logger.debug('Billing address:', billingAddress)\r\n\r\n      // Populate all available customer information with null checks\r\n      customerInfo.name = fullCustomer?.name?.trim() || fullCustomer?.first_name?.trim() || ''\r\n      customerInfo.phone = fullCustomer?.phone?.trim() || ''\r\n      customerInfo.email = fullCustomer?.email?.trim() || ''\r\n      \r\n      // Set address information from billing address with null checks\r\n      customerInfo.address = billingAddress?.address_street_1?.trim() || ''\r\n      customerInfo.unit = billingAddress?.address_street_2?.trim() || ''\r\n      customerInfo.city = billingAddress?.city?.trim() || ''\r\n      customerInfo.zipCode = billingAddress?.zip?.trim() || ''\r\n      \r\n      // Handle state information\r\n      if (billingAddress.state) {\r\n        customerInfo.state = billingAddress.state.code || ''\r\n        customerInfo.state_id = billingAddress.state.id || null\r\n      } else {\r\n        customerInfo.state = ''\r\n        customerInfo.state_id = null\r\n      }\r\n    \r\n      customerInfo.instructions = customer.notes || ''\r\n      \r\n      // Keep the search value after selection\r\n      customerSearch.value = customer.name\r\n      \r\n      // Log the populated data for debugging\r\n      logger.debug('Customer selected:', customer)\r\n      logger.debug('Billing address:', billingAddress)\r\n      logger.info('Customer data populated:', { \r\n        customer: customer.id,\r\n        fields: { ...customerInfo }\r\n      })\r\n\r\n      // Clear any existing validation errors\r\n      clearAllErrors()\r\n    } catch (error) {\r\n      logger.error('Error fetching customer details:', error)\r\n      if (window.toastr) {\r\n        window.toastr.error('Failed to load customer details')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst clearSelectedCustomer = () => {\r\n  selectedCustomer.value = null\r\n  customerSearch.value = ''\r\n  Object.keys(customerInfo).forEach(key => {\r\n    customerInfo[key] = ''\r\n  })\r\n}\r\n\r\nconst onCustomerCreated = async (customer) => {\r\n  try {\r\n    logger.info('New customer created:', customer)\r\n    \r\n    // Close the create customer dialog\r\n    showCreateCustomer.value = false\r\n    \r\n    // Set the selected customer and populate the form\r\n    selectedCustomer.value = customer\r\n    customerSearch.value = customer.name\r\n    \r\n    // Populate delivery form with customer data\r\n    customerInfo.name = customer.name\r\n    customerInfo.phone = customer.phone || ''\r\n    customerInfo.email = customer.email || ''\r\n    customerInfo.address = customer.address_street_1 || ''\r\n    customerInfo.unit = customer.address_street_2 || ''\r\n    customerInfo.city = customer.city || ''\r\n    customerInfo.state = customer.state || ''\r\n    customerInfo.zipCode = customer.zip || ''\r\n    customerInfo.instructions = customer.notes || ''\r\n    \r\n    // Clear any existing validation errors\r\n    clearAllErrors()\r\n    \r\n    // Show success message\r\n    if (window.toastr) {\r\n      window.toastr.success('Customer created and loaded successfully')\r\n    }\r\n  } catch (error) {\r\n    logger.error('Error handling new customer:', error)\r\n    if (window.toastr) {\r\n      window.toastr.error('Error loading customer data')\r\n    }\r\n  }\r\n}\r\n\r\nconst updateNotes = (value) => {\r\n  try {\r\n    // If there are existing notes in the cart, parse them first\r\n    let existingNotes = {}\r\n    try {\r\n      if (cartStore.notes) {\r\n        existingNotes = JSON.parse(cartStore.notes)\r\n      }\r\n    } catch (e) {\r\n      logger.warn('Failed to parse existing notes:', e)\r\n    }\r\n\r\n    // Create new notes object, preserving existing data\r\n    const notesObj = {\r\n      ...existingNotes,\r\n      customerNotes: value,\r\n      timestamp: new Date().toISOString(),\r\n      orderType: OrderType.DELIVERY,\r\n      orderInfo: {\r\n        ...existingNotes.orderInfo,\r\n        customer: {\r\n          ...existingNotes.orderInfo?.customer,\r\n          name: customerInfo.name.trim(),\r\n          phone: customerInfo.phone.replace(/\\D/g, ''),\r\n          email: customerInfo.email.trim(),\r\n          address: customerInfo.address,\r\n          unit: customerInfo.unit,\r\n          city: customerInfo.city,\r\n          state: customerInfo.state,\r\n          zipCode: customerInfo.zipCode,\r\n          notes: value,\r\n          instructions: value // Keep for backward compatibility\r\n        }\r\n      }\r\n    }\r\n\r\n    cartStore.setNotes(JSON.stringify(notesObj))\r\n    logger.debug('Updated cart notes:', notesObj)\r\n  } catch (error) {\r\n    logger.error('Failed to update cart notes:', error)\r\n  }\r\n}\r\n\r\n// Form state\r\nconst customerInfo = reactive({\r\n  name: '',\r\n  phone: '',\r\n  email: '',\r\n  address: '',\r\n  unit: '',\r\n  city: '',\r\n  state: '',\r\n  zipCode: '',\r\n  notes: ''\r\n})\r\n\r\nconst onStateSelect = (state) => {\r\n  customerInfo.state_id = state.id\r\n  customerInfo.state = state.code\r\n}\r\n\r\n// Validation\r\nconst validationErrors = reactive({\r\n  name: '',\r\n  phone: '',\r\n  address: '',\r\n  zip: '',\r\n  city: '',\r\n  state: ''\r\n})\r\n\r\n// Watch for dialog open to set order type\r\nwatch(dialog, (newValue) => {\r\n  if (newValue) {\r\n    setOrderType(ORDER_TYPES.DELIVERY)\r\n  } else {\r\n    // Reset form when dialog closes\r\n    Object.keys(customerInfo).forEach(key => {\r\n      customerInfo[key] = ''\r\n    })\r\n    clearAllErrors()\r\n  }\r\n})\r\n\r\n// Watch for dialog open to initialize notes\r\nwatch(dialog, (newValue) => {\r\n  if (newValue) {\r\n    if (!selectedStore.value || !selectedCashier.value) {\r\n      error.value = 'Please select both store and cashier first'\r\n      dialog.value = false\r\n      return\r\n    }\r\n    \r\n    // Initialize notes from cart store when dialog opens\r\n    try {\r\n      const notes = parseOrderNotes(cartStore.notes)\r\n      if (notes) {\r\n        customerInfo.notes = notes\r\n        logger.debug('Initialized notes from cart store:', { notes })\r\n      }\r\n    } catch (error) {\r\n      logger.error('Failed to parse cart notes:', error)\r\n    }\r\n  }\r\n})\r\n\r\n// Watch for changes in cart store notes\r\nwatch(() => cartStore.notes, (newNotes) => {\r\n  try {\r\n    const notes = parseOrderNotes(newNotes)\r\n    if (notes && notes !== customerInfo.notes) {\r\n      customerInfo.notes = notes\r\n      logger.debug('Updated notes from cart store:', { notes })\r\n    }\r\n  } catch (error) {\r\n    logger.error('Failed to parse cart notes:', error)\r\n  }\r\n})\r\n\r\n// Watch for changes in customer notes\r\nwatch(() => customerNotes.value, (newNotes) => {\r\n  if (newNotes !== customerInfo.notes) {\r\n    customerInfo.notes = newNotes\r\n    logger.debug('Updated notes from customer notes:', { newNotes })\r\n  }\r\n})\r\n\r\n// Validation helper\r\nconst validateForm = () => {\r\n  let isValid = true\r\n  clearAllErrors()\r\n\r\n  if (!selectedCustomer.value?.id) {\r\n    validationErrors.name = 'Please select a customer from the search results'\r\n    isValid = false\r\n  }\r\n\r\n  if (!customerInfo.phone.trim()) {\r\n    validationErrors.phone = 'Phone number is required'\r\n    isValid = false\r\n  }\r\n\r\n  if (!customerInfo.address.trim()) {\r\n    validationErrors.address = 'Delivery address is required'\r\n    isValid = false\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\n// Clear validation errors\r\nconst clearError = (field) => {\r\n  validationErrors[field] = ''\r\n}\r\n\r\nconst clearAllErrors = () => {\r\n  Object.keys(validationErrors).forEach(key => {\r\n    validationErrors[key] = ''\r\n  })\r\n}\r\n\r\n// Process the order\r\n// Add reactive invoice data state\r\nconst invoiceData = ref({\r\n  invoice: null,\r\n  invoicePrefix: '',\r\n  nextInvoiceNumber: ''\r\n})\r\n\r\nconst processOrder = async () => {\r\n  if (!validateForm()) return\r\n\r\n  processing.value = true\r\n\r\n  try {\r\n    // Format full address\r\n    const fullAddress = [\r\n      customerInfo.address.trim(),\r\n      customerInfo.unit.trim(),\r\n      customerInfo.zipCode.trim()\r\n    ].filter(Boolean).join(', ')\r\n\r\n    // Update customer info in the order type composable\r\n    const customerData = {\r\n      customer_id: selectedCustomer.value?.id || null,\r\n      name: (customerInfo.name || '').trim(),\r\n      phone: (customerInfo.phone || '').trim(),\r\n      address: (customerInfo.address || '').trim(),\r\n      unit: (customerInfo.unit || '').trim(),\r\n      zip: (customerInfo.zipCode || '').trim(),\r\n      city: (customerInfo.city || '').trim(),\r\n      state: (customerInfo.state || '').trim(),\r\n      state_id: customerInfo.state_id,\r\n      email: (customerInfo.email || '').trim(),\r\n      instructions: (customerInfo.instructions || '').trim(),\r\n      send_sms: sendSms.value ? 1 : 0\r\n    }\r\n    setCustomerInfo(customerData)\r\n\r\n    // Get current date and due date\r\n    const currentDate = new Date()\r\n    const dueDate = new Date(currentDate)\r\n    dueDate.setDate(dueDate.getDate() + 7) // Set due date to 7 days from now\r\n\r\n    // Create invoice data with required fields\r\n    const orderData = {\r\n      // Required fields first\r\n      invoice_date: currentDate.toISOString().split('T')[0],\r\n      due_date: dueDate.toISOString().split('T')[0],\r\n      invoice_number: `DEL-${Date.now()}`, // Temporary invoice number\r\n      sub_total: cartStore.subtotal, // Already in cents from the cart store\r\n      total: cartStore.total, // Already in cents from the cart store\r\n      tax: cartStore.taxAmount, // Already in cents from the cart store\r\n      items: cartStore.items.map(item => ({\r\n        item_id: item.id,\r\n        name: item.name,\r\n        description: item.description || '',\r\n        price: PriceUtils.normalizePrice(item.price),\r\n        quantity: item.quantity,\r\n        unit_name: item.unit_name || 'units',\r\n        total: PriceUtils.normalizePrice(item.total),\r\n        sub_total: PriceUtils.normalizePrice(item.sub_total),\r\n        tax: PriceUtils.normalizePrice(item.tax || 0)\r\n      })),\r\n\r\n      // Boolean flags\r\n      avalara_bool: false,\r\n      banType: true,\r\n      package_bool: false,\r\n      print_pdf: false,\r\n      save_as_draft: false,\r\n      send_email: false,\r\n      not_charge_automatically: false,\r\n      is_hold_invoice: true,\r\n      is_invoice_pos: 1,\r\n      is_pdf_pos: true,\r\n\r\n      // IDs and references\r\n      invoice_template_id: 1,\r\n      invoice_pbx_modify: 0,\r\n      store_id: companyStore.selectedStore?.id,\r\n      cash_register_id: companyStore.selectedCashier?.id,\r\n      user_id: selectedCustomer.value?.id || null,\r\n\r\n      // Order type and status\r\n      type: ORDER_TYPES.DELIVERY,\r\n      status: 'HELD',\r\n      description: 'Delivery Order',\r\n\r\n      // Customer contact info\r\n      contact: {\r\n        name: selectedCustomer.value?.name || customerInfo.name.trim(),\r\n        last_name: 'N/A',\r\n        email: selectedCustomer.value?.email || customerInfo.email.trim(),\r\n        phone: selectedCustomer.value?.phone || customerInfo.phone.trim(),\r\n        second_phone: 'N/A',\r\n        identification: 'N/A'\r\n      },\r\n\r\n      // Arrays\r\n      tables_selected: [],\r\n      packages: [],\r\n      taxes: [],\r\n\r\n      // Amounts and calculations\r\n      discount: \"0\",\r\n      discount_type: \"fixed\",\r\n      discount_val: Math.round(Number(0)),\r\n      discount_per_item: \"NO\",\r\n      \r\n      // SMS notification\r\n      send_sms: sendSms.value ? 1 : 0,\r\n\r\n      // Additional required fields\r\n      notes: JSON.stringify({\r\n  customerNotes: customerInfo.notes,\r\n  timestamp: new Date().toISOString(),\r\n  orderType: OrderType.DELIVERY,\r\n  orderInfo: {\r\n    customer: {\r\n      name: customerInfo.name.trim(),\r\n      phone: customerInfo.phone.replace(/\\D/g, ''),\r\n      email: customerInfo.email.trim(),\r\n      address: customerInfo.address,\r\n      unit: customerInfo.unit,\r\n      city: customerInfo.city,\r\n      state: customerInfo.state,\r\n      zipCode: customerInfo.zipCode,\r\n      notes: customerInfo.notes,\r\n      instructions: customerInfo.notes // Keep for backward compatibility\r\n    }\r\n  }\r\n}),\r\n      hold_invoice_id: null,\r\n      tip: \"0\",\r\n      tip_type: \"fixed\",\r\n      tip_val: 0\r\n    }\r\n\r\n    logger.debug('Creating hold order with data:', {\r\n      ...orderData,\r\n      debugPrices: {\r\n        subtotal: {\r\n          raw: cartStore.subtotal,\r\n          cents: PriceUtils.toCents(cartStore.subtotal)\r\n        },\r\n        total: {\r\n          raw: cartStore.total,\r\n          cents: PriceUtils.toCents(cartStore.total)\r\n        },\r\n        tax: {\r\n          raw: cartStore.taxAmount,\r\n          cents: PriceUtils.toCents(cartStore.taxAmount)\r\n        }\r\n      }\r\n    })\r\n\r\n    // Get next invoice number\r\n    const nextInvoice = await posApi.invoice.getNextNumber()\r\n    \r\n    if (!nextInvoice) {\r\n      throw new Error('Failed to get next invoice number')\r\n    }\r\n\r\n    // Add invoice number to order data\r\n    orderData.invoice_number = `${nextInvoice.prefix}-${nextInvoice.nextNumber}`\r\n    \r\n    // Create invoice directly\r\n    const invoiceResult = await posApi.invoice.create(orderData)\r\n    \r\n    // Check if we have an invoice object, regardless of success flag\r\n    if (!invoiceResult?.invoice) {\r\n      const errorMsg = 'No invoice data received'\r\n      logger.error('Failed to create invoice:', {\r\n        result: invoiceResult,\r\n        orderData: orderData\r\n      })\r\n      throw new Error(errorMsg)\r\n    }\r\n\r\n    // Add to kitchen display\r\n    kitchenStore.addDirectInvoice(invoiceResult.invoice)\r\n\r\n    logger.debug('Invoice created successfully:', invoiceResult.invoice)\r\n\r\n    const convertedInvoiceData = {\r\n      success: true,\r\n      invoice: invoiceResult.invoice\r\n    }\r\n    \r\n    if (!convertedInvoiceData.success) {\r\n      throw new Error('Failed to prepare invoice data')\r\n    }\r\n\r\n    logger.debug('Converted invoice data:', convertedInvoiceData)\r\n\r\n    // Update invoice data ref\r\n    invoiceData.value = {\r\n      invoice: convertedInvoiceData.invoice,\r\n      invoicePrefix: nextInvoice.prefix,\r\n      nextInvoiceNumber: nextInvoice.nextNumber\r\n    }\r\n\r\n    // Show payment dialog\r\n    showPaymentDialog.value = true\r\n  } catch (err) {\r\n    logger.error('Failed to prepare delivery order:', {\r\n      error: err,\r\n      message: err.message,\r\n      data: {\r\n        customerInfo\r\n      }\r\n    })\r\n    window.toastr?.error(err.message || 'Failed to prepare delivery order')\r\n  } finally {\r\n    processing.value = false\r\n  }\r\n}\r\n\r\nconst onPaymentComplete = async (success) => {\r\n  if (success) {\r\n    dialog.value = false\r\n    window.toastr?.['success']('Delivery order created successfully')\r\n  }\r\n}\r\n\r\n// Close modal handler\r\nconst closeModal = () => {\r\n  if (!processing.value) {\r\n    dialog.value = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: rgb(var(--v-theme-surface));\r\n}\r\n\r\n.v-toolbar {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.v-card-text {\r\n  overflow-y: auto;\r\n}\r\n\r\n:deep(.v-text-field .v-field__input),\r\n:deep(.v-select .v-field__input),\r\n:deep(.v-textarea .v-field__input) {\r\n  min-height: 44px;\r\n  padding-top: 8px;\r\n}\r\n\r\n:deep(.v-card-actions) {\r\n  background-color: rgb(var(--v-theme-surface));\r\n  border-top: thin solid rgba(var(--v-border-color), var(--v-border-opacity));\r\n  padding: 12px 24px;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.form-section-title {\r\n  margin-bottom: 16px;\r\n  font-weight: 500;\r\n}\r\n</style>\r\n","<template>\r\n  <v-dialog \r\n    v-model=\"dialog\" \r\n    fullscreen\r\n    transition=\"dialog-bottom-transition\"\r\n    :scrim=\"false\"\r\n  >\r\n    <DeliveryPaymentDialog\r\n      v-model=\"showPaymentDialog\"\r\n      :invoice=\"invoiceData\"\r\n      @payment-complete=\"onPaymentComplete\"\r\n    />\r\n    <template v-slot:activator=\"{ props: dialogProps }\">\r\n      <v-btn\r\n        color=\"primary\"\r\n        v-bind=\"dialogProps\"\r\n        prepend-icon=\"mdi-store-clock\"\r\n        :loading=\"loading\"\r\n        :disabled=\"disabled || cartStore.isEmpty\"\r\n        class=\"text-none px-6\"\r\n        rounded=\"pill\"\r\n        :elevation=\"$vuetify.display.mobile ? 1 : 2\"\r\n        size=\"large\"\r\n        :block=\"$vuetify.display.mobile\"\r\n      >\r\n        <span class=\"text-subtitle-1 font-weight-medium\">PICK UP</span>\r\n      </v-btn>\r\n    </template>\r\n\r\n    <v-card class=\"modal-card\">\r\n      <v-toolbar \r\n        color=\"primary\"\r\n        density=\"comfortable\"\r\n      >\r\n        <v-toolbar-title class=\"text-h6 font-weight-medium\">\r\n          <v-icon icon=\"mdi-store-clock\" size=\"large\" class=\"mr-2\"></v-icon>\r\n          Pick Up Order\r\n        </v-toolbar-title>\r\n        <v-spacer></v-spacer>\r\n        <v-btn\r\n          icon\r\n          @click=\"closeModal\"\r\n        >\r\n          <v-icon>mdi-close</v-icon>\r\n        </v-btn>\r\n      </v-toolbar>\r\n\r\n      <v-card-text class=\"pa-0 fill-height d-flex flex-column\">\r\n        <v-container fluid class=\"flex-grow-1 pa-4\">\r\n          <!-- Loading State -->\r\n          <v-row v-if=\"loading\">\r\n            <v-col cols=\"12\" class=\"text-center\">\r\n              <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <!-- Error State -->\r\n          <v-row v-else-if=\"error\">\r\n            <v-col cols=\"12\" class=\"text-center\">\r\n              <v-alert type=\"error\" variant=\"tonal\">\r\n                {{ error }}\r\n              </v-alert>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <!-- Delivery Information Form -->\r\n          <template v-else>\r\n            <!-- Customer Information Section -->\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <div class=\"text-subtitle-1 mb-2\">Customer Information</div>\r\n                <v-autocomplete\r\n                  v-model=\"selectedCustomer\"\r\n                  v-model:search=\"customerSearch\"\r\n                  :items=\"searchResults\"\r\n                  :loading=\"isSearching\"\r\n                  :error-messages=\"validationErrors.name\"\r\n                  label=\"Search Customer\"\r\n                  item-title=\"title\"\r\n                  item-subtitle=\"subtitle\"\r\n                  item-value=\"value\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  persistent-hint\r\n                  hint=\"Search by name, phone, or email (min. 3 characters)\"\r\n                  return-object\r\n                  @update:search=\"onCustomerSearch\"\r\n                  @update:model-value=\"onCustomerSelect\"\r\n                >\r\n                  <template v-slot:append-inner>\r\n                    <v-icon\r\n                      v-if=\"selectedCustomer\"\r\n                      color=\"error\"\r\n                      @click.stop=\"clearSelectedCustomer\"\r\n                    >\r\n                      mdi-close\r\n                    </v-icon>\r\n                  </template>\r\n                  <template v-slot:no-data>\r\n                    <v-list-item>\r\n                      <v-list-item-title>\r\n                        No customers found\r\n                      </v-list-item-title>\r\n                      <template v-slot:append>\r\n                        <v-btn\r\n                          color=\"primary\"\r\n                          variant=\"text\"\r\n                          @click=\"showCreateCustomer = true\"\r\n                        >\r\n                          Create New\r\n                        </v-btn>\r\n                      </template>\r\n                    </v-list-item>\r\n                  </template>\r\n                </v-autocomplete>\r\n\r\n                <CreateCustomerDialog\r\n                  v-model=\"showCreateCustomer\"\r\n                  @customer-created=\"onCustomerCreated\"\r\n                />\r\n                \r\n                <!-- Add Notes Field -->\r\n                <v-textarea\r\n                  v-model=\"customerNotes\"\r\n                  label=\"Order Notes\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  rows=\"3\"\r\n                  class=\"mt-4\"\r\n                  hide-details\r\n                  placeholder=\"Add any special instructions or notes for this order\"\r\n                ></v-textarea>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <v-text-field\r\n                  v-model=\"customerInfo.phone\"\r\n                  label=\"Phone Number\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  :error-messages=\"validationErrors.phone\"\r\n                  @input=\"clearError('phone')\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <!-- Pickup Time -->\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <div class=\"text-subtitle-1 mb-2\">Pickup Time</div>\r\n                <v-text-field\r\n                  v-model=\"customerInfo.pickupTime\"\r\n                  label=\"Pickup Time\"\r\n                  type=\"time\"\r\n                  variant=\"outlined\"\r\n                  density=\"comfortable\"\r\n                  :error-messages=\"validationErrors.pickupTime\"\r\n                  @input=\"clearError('pickupTime')\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <!-- SMS Toggle -->\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <v-switch\r\n                  v-model=\"sendSms\"\r\n                  color=\"primary\"\r\n                  label=\"Send invoice via SMS\"\r\n                  hint=\"Customer will receive an SMS with the invoice link\"\r\n                  persistent-hint\r\n                ></v-switch>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <!-- Submit Button -->\r\n            <v-row class=\"mt-4\">\r\n              <v-col cols=\"12\">\r\n                <v-btn\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  block\r\n                  height=\"56\"\r\n                  @click=\"processOrder\"\r\n                  :loading=\"processing\"\r\n                  :disabled=\"!canProcessOrder || processing\"\r\n                  elevation=\"2\"\r\n                >\r\n                  <v-icon start>mdi-check-circle</v-icon>\r\n                  Process Order\r\n                </v-btn>\r\n              </v-col>\r\n            </v-row>\r\n          </template>\r\n        </v-container>\r\n      </v-card-text>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, reactive } from 'vue'\r\nimport CreateCustomerDialog from '../customer/CreateCustomerDialog.vue'\r\nimport DeliveryPaymentDialog from '../dialogs/DeliveryPaymentDialog.vue'\r\nimport { useOrderType, ORDER_TYPES } from '../../composables/useOrderType'\r\nimport { useCustomerSearch } from '../../composables/useCustomerSearch'\r\nimport { useCartStore } from '@/stores/cart-store'\r\nimport { useCompanyStore } from '@/stores/company'\r\nimport { useKitchenStore } from '@/stores/kitchen'\r\nimport { logger } from '../../../../utils/logger'\r\nimport { posApi } from '@/services/api/pos-api'\r\nimport { PriceUtils } from '@/utils/price'\r\n\r\nconst props = defineProps({\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\n// Initialize composables and stores\r\nconst cartStore = useCartStore()\r\nconst companyStore = useCompanyStore()\r\nconst { setOrderType, setCustomerInfo, customerNotes } = useOrderType()\r\n\r\n// Add computed properties for store and cashier\r\nconst selectedStore = computed(() => companyStore.selectedStore)\r\nconst selectedCashier = computed(() => companyStore.selectedCashier)\r\n\r\n// Local state\r\nconst dialog = ref(false)\r\nconst loading = ref(false)\r\nconst processing = ref(false)\r\nconst sendSms = ref(false)\r\nconst showPaymentDialog = ref(false)\r\nconst error = computed(() => searchError.value)\r\nconst customerSearch = ref('')\r\nconst selectedCustomer = ref(null)\r\nconst showCreateCustomer = ref(false)\r\n\r\n// Customer search integration\r\nconst { \r\n  searchResults,\r\n  isSearching,\r\n  searchError,\r\n  searchCustomers,\r\n  createCustomer\r\n} = useCustomerSearch()\r\n\r\n// Customer search handlers\r\nconst onCustomerSearch = async (search) => {\r\n  if (!search || search.length < 3) {\r\n    searchResults.value = []\r\n    return\r\n  }\r\n\r\n  try {\r\n    isSearching.value = true\r\n    await searchCustomers(search)\r\n  } catch (err) {\r\n    logger.error('Error searching customers:', err)\r\n  }\r\n}\r\n\r\nconst onCustomerSelect = async (selection) => {\r\n  if (!selection) {\r\n    clearSelectedCustomer()\r\n    return\r\n  }\r\n\r\n  try {\r\n    const customer = selection.value\r\n    if (customer) {\r\n      // Set the selected customer ref\r\n      selectedCustomer.value = customer\r\n\r\n      // First, set the basic customer info immediately\r\n      customerInfo.name = customer.name || ''\r\n      customerInfo.phone = customer.phone || ''\r\n      customerInfo.email = customer.email || ''\r\n      \r\n      // Keep the search value\r\n      customerSearch.value = customer.name\r\n\r\n      // Then fetch full customer details\r\n      const response = await posApi.get(`/v1/customers/${customer.id}`, {\r\n        params: {\r\n          include: 'billing_address'\r\n        }\r\n      })\r\n      \r\n      const fullCustomer = response.data.customer\r\n      logger.debug('Full customer data:', fullCustomer)\r\n\r\n      // Update with complete customer information\r\n      customerInfo.name = fullCustomer?.name?.trim() || fullCustomer?.first_name?.trim() || customer.name || ''\r\n      customerInfo.phone = fullCustomer?.phone?.trim() || customer.phone || ''\r\n      customerInfo.email = fullCustomer?.email?.trim() || customer.email || ''\r\n\r\n      // Update selected customer with full data\r\n      selectedCustomer.value = fullCustomer\r\n\r\n      logger.debug('Customer selected:', fullCustomer)\r\n      logger.info('Customer data populated:', { \r\n        customer: customer.id,\r\n        fields: { ...customerInfo }\r\n      })\r\n\r\n      // Clear any existing validation errors\r\n      clearAllErrors()\r\n    }\r\n  } catch (err) {\r\n    logger.error('Error selecting customer:', err)\r\n    if (window.toastr) {\r\n      window.toastr.error('Failed to load customer details')\r\n    }\r\n    // Don't clear selection on API error, keep the basic info\r\n  }\r\n}\r\n\r\nconst clearSelectedCustomer = () => {\r\n  selectedCustomer.value = null\r\n  customerInfo.name = ''\r\n  customerInfo.phone = ''\r\n  customerInfo.email = ''\r\n  customerInfo.pickupTime = ''\r\n}\r\n\r\nconst onCustomerCreated = (customer) => {\r\n  logger.debug('[PickupModal] New customer created:', customer)\r\n  selectedCustomer.value = {\r\n    id: customer.id,\r\n    title: customer.name,\r\n    phone: customer.phone,\r\n    email: customer.email\r\n  }\r\n  showCreateCustomer.value = false\r\n  \r\n  // Update form with new customer info\r\n  customerInfo.name = customer.name\r\n  customerInfo.phone = customer.phone\r\n  customerInfo.email = customer.email\r\n}\r\n\r\n// Initialize notes from cart when dialog opens\r\nwatch(dialog, (isOpen) => {\r\n  if (isOpen && cartStore.notes) {\r\n    try {\r\n      const notesObj = JSON.parse(cartStore.notes)\r\n      customerNotes.value = notesObj.customerNotes || ''\r\n    } catch (e) {\r\n      // If parsing fails, treat as legacy format\r\n      customerNotes.value = cartStore.notes\r\n    }\r\n  }\r\n})\r\n\r\n// Watch for changes in cart notes and sync with order type notes\r\nwatch(() => cartStore.notes, (newNotes) => {\r\n  if (newNotes) {\r\n    try {\r\n      const notesObj = JSON.parse(newNotes)\r\n      if (notesObj.customerNotes !== customerNotes.value) {\r\n        customerNotes.value = notesObj.customerNotes || ''\r\n      }\r\n    } catch (e) {\r\n      // If not JSON, treat as legacy format\r\n      if (newNotes !== customerNotes.value) {\r\n        customerNotes.value = newNotes\r\n      }\r\n    }\r\n  } else {\r\n    customerNotes.value = ''\r\n  }\r\n}, { immediate: true })\r\n\r\n// Watch for changes in customer notes and sync with cart\r\nwatch(customerNotes, (newNotes) => {\r\n  if (newNotes) {\r\n    try {\r\n      const notesObj = {\r\n        customerNotes: newNotes,\r\n        orderInfo: {\r\n          customer: customerInfo\r\n        },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n      cartStore.notes = JSON.stringify(notesObj)\r\n    } catch (e) {\r\n      logger.error('Error syncing notes with cart:', e)\r\n    }\r\n  } else {\r\n    cartStore.notes = ''\r\n  }\r\n}, { immediate: true })\r\n\r\n// Form state\r\nconst customerInfo = reactive({\r\n  name: '',\r\n  phone: '',\r\n  email: '',\r\n  pickupTime: ''\r\n})\r\n\r\n// Validation\r\nconst validationErrors = reactive({\r\n  name: '',\r\n  phone: '',\r\n  pickupTime: ''\r\n})\r\n\r\n// Computed properties\r\nconst canProcessOrder = computed(() => {\r\n  return !cartStore.isEmpty && \r\n         (customerInfo.name || '').trim() && \r\n         (customerInfo.phone || '').trim() && \r\n         (customerInfo.pickupTime || '').trim()\r\n})\r\n\r\n// Watch for dialog open to set order type\r\nwatch(dialog, (newValue) => {\r\n  if (newValue) {\r\n    setOrderType(ORDER_TYPES.PICKUP)\r\n  } else {\r\n    // Reset form when dialog closes\r\n    Object.keys(customerInfo).forEach(key => {\r\n      customerInfo[key] = ''\r\n    })\r\n    clearAllErrors()\r\n  }\r\n})\r\n\r\n// Validation helper\r\nconst validateForm = () => {\r\n  let isValid = true\r\n  clearAllErrors()\r\n\r\n  if (!selectedCustomer.value?.id) {\r\n    validationErrors.name = 'Please select a customer from the search results'\r\n    isValid = false\r\n  }\r\n\r\n  if (!customerInfo.phone.trim()) {\r\n    validationErrors.phone = 'Phone number is required'\r\n    isValid = false\r\n  }\r\n\r\n  if (!customerInfo.pickupTime.trim()) {\r\n    validationErrors.pickupTime = 'Pickup time is required'\r\n    isValid = false\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\n// Clear validation errors\r\nconst clearError = (field) => {\r\n  validationErrors[field] = ''\r\n}\r\n\r\nconst clearAllErrors = () => {\r\n  Object.keys(validationErrors).forEach(key => {\r\n    validationErrors[key] = ''\r\n  })\r\n}\r\n\r\n// Process the order\r\n// Add reactive invoice data state\r\nconst invoiceData = ref({\r\n  invoice: null,\r\n  invoicePrefix: '',\r\n  nextInvoiceNumber: ''\r\n})\r\n\r\n// Process the order\r\nconst processOrder = async () => {\r\n  if (!validateForm()) return\r\n\r\n  processing.value = true\r\n\r\n  try {\r\n    // Update customer info in the order type composable\r\n    const customerData = {\r\n      customer_id: selectedCustomer.value?.id || null,\r\n      name: (customerInfo.name || '').trim(),\r\n      phone: (customerInfo.phone || '').trim(),\r\n      email: (customerInfo.email || '').trim(),\r\n      send_sms: sendSms.value ? 1 : 0\r\n    }\r\n    setCustomerInfo(customerData)\r\n\r\n    // Get current date and due date\r\n    const currentDate = new Date()\r\n    const dueDate = new Date(currentDate)\r\n    dueDate.setDate(dueDate.getDate() + 7) // Set due date to 7 days from now\r\n\r\n    // Get next invoice number\r\n    const nextInvoice = await posApi.invoice.getNextNumber()\r\n    if (!nextInvoice) {\r\n      throw new Error('Failed to get next invoice number')\r\n    }\r\n\r\n    // Format notes with additional context\r\n    const formattedNotes = customerNotes.value ? JSON.stringify({\r\n      customerNotes: customerNotes.value,\r\n      orderInfo: {\r\n        customer: customerInfo,\r\n        store: selectedStore.value?.name || '',\r\n        cashier: selectedCashier.value?.name || '',\r\n        orderType: 'pickup'\r\n      },\r\n      timestamp: new Date().toISOString()\r\n    }) : ''\r\n\r\n    // Create invoice data with required fields\r\n    const orderData = {\r\n      // Required fields first\r\n      invoice_date: currentDate.toISOString().split('T')[0],\r\n      due_date: dueDate.toISOString().split('T')[0],\r\n      invoice_number: `${nextInvoice.prefix}-${nextInvoice.nextNumber}`,\r\n      sub_total: cartStore.subtotal, // Already in cents from the cart store\r\n      total: cartStore.total, // Already in cents from the cart store\r\n      tax: cartStore.taxAmount, // Already in cents from the cart store\r\n      items: cartStore.items.map(item => ({\r\n        item_id: item.id,\r\n        name: item.name,\r\n        description: item.description || '',\r\n        price: PriceUtils.normalizePrice(item.price),\r\n        quantity: item.quantity,\r\n        unit_name: item.unit_name || 'units',\r\n        total: PriceUtils.normalizePrice(item.total),\r\n        sub_total: PriceUtils.normalizePrice(item.sub_total),\r\n        tax: PriceUtils.normalizePrice(item.tax || 0)\r\n      })),\r\n\r\n      // Boolean flags\r\n      avalara_bool: false,\r\n      banType: true,\r\n      package_bool: false,\r\n      print_pdf: false,\r\n      save_as_draft: false,\r\n      send_email: false,\r\n      not_charge_automatically: false,\r\n      is_hold_invoice: true,\r\n      is_invoice_pos: 1,\r\n      is_pdf_pos: true,\r\n\r\n      // IDs and references\r\n      invoice_template_id: 1,\r\n      invoice_pbx_modify: 0,\r\n      store_id: companyStore.selectedStore?.id,\r\n      cash_register_id: companyStore.selectedCashier?.id,\r\n      user_id: selectedCustomer.value?.id || null,\r\n\r\n      // Order type and status\r\n      type: ORDER_TYPES.PICKUP,\r\n      status: 'HELD',\r\n      description: `Pick Up Order - ${customerInfo.pickupTime}`,\r\n\r\n      // Customer contact info\r\n      contact: {\r\n        name: selectedCustomer.value?.name || customerInfo.name.trim(),\r\n        last_name: 'N/A',\r\n        email: selectedCustomer.value?.email || customerInfo.email.trim(),\r\n        phone: selectedCustomer.value?.phone || customerInfo.phone.trim(),\r\n        second_phone: 'N/A',\r\n        identification: 'N/A'\r\n      },\r\n\r\n      // Arrays\r\n      tables_selected: [],\r\n      packages: [],\r\n      taxes: [],\r\n\r\n      // Amounts and calculations\r\n      discount: \"0\",\r\n      discount_type: \"fixed\",\r\n      discount_val: Math.round(Number(0)),\r\n      discount_per_item: \"NO\",\r\n      \r\n      // SMS notification\r\n      send_sms: sendSms.value ? 1 : 0,\r\n\r\n      // Notes with additional context\r\n      notes: formattedNotes,\r\n      \r\n      // Additional required fields\r\n      hold_invoice_id: null,\r\n      tip: \"0\",\r\n      tip_type: \"fixed\",\r\n      tip_val: 0\r\n    }\r\n\r\n    logger.debug('Creating pickup order with data:', orderData)\r\n\r\n    // Create invoice\r\n    const invoiceResult = await posApi.invoice.create(orderData)\r\n    \r\n    if (!invoiceResult?.invoice) {\r\n      throw new Error('No invoice data received')\r\n    }\r\n\r\n    // Add to kitchen display\r\n    kitchenStore.addDirectInvoice(invoiceResult.invoice)\r\n\r\n    logger.debug('Invoice created successfully:', invoiceResult)\r\n\r\n    // Update invoice data for payment dialog\r\n    invoiceData.value = {\r\n      invoice: {\r\n        ...invoiceResult.invoice,\r\n        type: ORDER_TYPES.PICKUP  // Explicitly set the type\r\n      },\r\n      invoicePrefix: nextInvoice.prefix,\r\n      nextInvoiceNumber: nextInvoice.nextNumber\r\n    }\r\n\r\n    // Show payment dialog\r\n    showPaymentDialog.value = true\r\n  } catch (error) {\r\n    logger.error('Failed to prepare pickup order:', {\r\n      error,\r\n      message: error.message,\r\n      data: { customerInfo }\r\n    })\r\n    if (window.toastr) {\r\n      window.toastr.error('Failed to create pickup order. Please try again.')\r\n    }\r\n  } finally {\r\n    processing.value = false\r\n  }\r\n}\r\n\r\nconst onPaymentComplete = async (success) => {\r\n  if (success) {\r\n    dialog.value = false\r\n    window.toastr?.['success']('Pick up order created successfully')\r\n  }\r\n}\r\n\r\n// Close modal handler\r\nconst closeModal = () => {\r\n  if (!processing.value) {\r\n    dialog.value = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: rgb(var(--v-theme-surface));\r\n}\r\n\r\n.v-toolbar {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.v-card-text {\r\n  overflow-y: auto;\r\n}\r\n\r\n:deep(.v-text-field .v-field__input),\r\n:deep(.v-select .v-field__input),\r\n:deep(.v-textarea .v-field__input) {\r\n  min-height: 44px;\r\n  padding-top: 8px;\r\n}\r\n\r\n:deep(.v-card-actions) {\r\n  background-color: rgb(var(--v-theme-surface));\r\n  border-top: thin solid rgba(var(--v-border-color), var(--v-border-opacity));\r\n  padding: 12px 24px;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.form-section-title {\r\n  margin-bottom: 16px;\r\n  font-weight: 500;\r\n}\r\n\r\n:deep(.v-switch .v-selection-control) {\r\n  min-height: 44px;\r\n}\r\n\r\n:deep(.v-list-item) {\r\n  min-height: 64px;\r\n  padding: 12px 16px;\r\n}\r\n\r\n:deep(.v-list-item-subtitle) {\r\n  margin-top: 4px;\r\n  opacity: 0.7;\r\n}\r\n</style>\r\n","<template>\r\n  <div>\r\n    <v-dialog\r\n      v-model=\"dialog\"\r\n      fullscreen\r\n      transition=\"dialog-bottom-transition\"\r\n      :scrim=\"false\"\r\n      class=\"payment-dialog\"\r\n    >\r\n      <v-card class=\"modal-card\">\r\n        <v-toolbar\r\n          color=\"primary\"\r\n          :elevation=\"1\"\r\n        >\r\n          <v-toolbar-title class=\"text-h6 font-weight-medium\">\r\n            <v-icon icon=\"mdi-cash-register\" size=\"large\" class=\"mr-2\"></v-icon>\r\n            Process Payment\r\n          </v-toolbar-title>\r\n          <v-spacer></v-spacer>\r\n          <v-btn\r\n            icon\r\n            @click=\"closeDialog\"\r\n          >\r\n            <v-icon>mdi-close</v-icon>\r\n          </v-btn>\r\n        </v-toolbar>\r\n\r\n        <div class=\"payment-content\">\r\n          <!-- Error Alert -->\r\n          <v-alert\r\n            v-if=\"error\"\r\n            type=\"error\"\r\n            variant=\"tonal\"\r\n            closable\r\n            class=\"error-alert\"\r\n            @click:close=\"error = null\"\r\n          >\r\n            {{ error }}\r\n          </v-alert>\r\n\r\n          <!-- Loading State -->\r\n          <div v-if=\"processing\" class=\"processing-state\">\r\n            <v-progress-circular\r\n              indeterminate\r\n              color=\"primary\"\r\n              size=\"64\"\r\n            ></v-progress-circular>\r\n            <div class=\"text-h6 mt-4\">Processing Payment...</div>\r\n          </div>\r\n\r\n          <!-- Cart Empty Warning -->\r\n          <v-alert\r\n            v-else-if=\"!hasItems\"\r\n            type=\"warning\"\r\n            variant=\"tonal\"\r\n            class=\"mb-4\"\r\n          >\r\n            Please add items to cart before proceeding with payment.\r\n          </v-alert>\r\n\r\n          <!-- Payment Content -->\r\n          <div v-else>\r\n            {{ processPayment() }}\r\n          </div>\r\n        </div>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <!-- Add Payment Dialog -->\r\n    <PaymentDialog\r\n      v-model=\"showPaymentDialog\"\r\n      :invoice=\"currentInvoice\"\r\n      @payment-complete=\"handlePaymentComplete\"\r\n    />\r\n    <PdfViewerDialog\r\n      v-model=\"showPdfViewer\"\r\n      :pdfUrl=\"currentPdfUrl\"\r\n      @closed=\"handlePdfViewerClosed\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { storeToRefs } from 'pinia'\r\nimport { useCartStore } from '@/stores/cart-store'\r\nimport { useCompanyStore } from '@/stores/company'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport { posApi } from '@/services/api/pos-api'\r\nimport { logger } from '@/utils/logger'\r\nimport { PriceUtils } from '@/utils/price'\r\nimport { OrderType, PaidStatus } from '@/types/order'\r\nimport PaymentDialog from './PaymentDialog.vue'\r\nimport PdfViewerDialog from '@/components/common/PdfViewerDialog.vue'\r\n\r\nconst formatApiDate = (date) => {\r\n  const d = new Date(date)\r\n  const year = d.getFullYear()\r\n  const month = String(d.getMonth() + 1).padStart(2, '0')\r\n  const day = String(d.getDate()).padStart(2, '0')\r\n  return `${year}-${month}-${day}`\r\n}\r\n\r\nconst props = defineProps({\r\n  modelValue: Boolean\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'payment-complete'])\r\n\r\n// Store initialization\r\nconst cartStore = useCartStore()\r\nconst companyStore = useCompanyStore()\r\nconst authStore = useAuthStore()\r\n\r\n// Ensure company data is loaded\r\nonMounted(async () => {\r\n  console.log('Component mounted, initializing company store...')\r\n  try {\r\n    await companyStore.initializeStore()\r\n    console.log('Company data after initialization:', {\r\n      selectedCustomer: companyStore.selectedCustomer,\r\n      currentStore: companyStore.currentStore,\r\n      isConfigured: companyStore.isConfigured\r\n    })\r\n  } catch (error) {\r\n    console.error('Failed to initialize company store:', error)\r\n  }\r\n})\r\n\r\nconst { items } = storeToRefs(cartStore)\r\n\r\n// Get user from auth store\r\nconst { user } = storeToRefs(authStore)\r\nconsole.log('Auth Store User:', user.value)\r\n\r\n// State\r\nconst processing = ref(false)\r\nconst error = ref(null)\r\nconst currentInvoice = ref(null)\r\nconst showPaymentDialog = ref(false)\r\n\r\n// Dialog computed property\r\nconst dialog = computed({\r\n  get: () => props.modelValue,\r\n  set: (value) => emit('update:modelValue', value)\r\n})\r\n\r\n// Cart validation computed properties\r\nconst hasItems = computed(() => items.value.length > 0)\r\nconst canPay = computed(() => hasItems.value && !processing.value)\r\n\r\nconst showPdfViewer = ref(false)\r\nconst currentPdfUrl = ref('')\r\n\r\n// Computed properties for invoice details\r\nconst invoiceNumber = computed(() => {\r\n  return currentInvoice.value?.invoice?.invoice_number || \r\n         `${currentInvoice.value?.invoicePrefix}-${currentInvoice.value?.nextInvoiceNumber}` || \r\n         ''\r\n})\r\nconst invoiceTotal = computed(() => currentInvoice.value?.total || 0)\r\n\r\nconst handlePdfViewerClosed = () => {\r\n  showPdfViewer.value = false\r\n  currentPdfUrl.value = ''\r\n}\r\n\r\n// Get current user ID\r\nconst getCurrentUserId = computed(() => {\r\n  // Fallback to a default user ID if not available\r\n  return user.value?.id || companyStore.currentStore?.default_user_id || 1\r\n})\r\n\r\n// Ensure user profile is loaded before processing payment\r\nconst ensureUserProfile = async () => {\r\n  if (!user.value?.id) {\r\n    try {\r\n      await authStore.loadUserProfile()\r\n    } catch (error) {\r\n      logger.warn('Failed to load user profile, using fallback user ID')\r\n    }\r\n  }\r\n}\r\n\r\n// Methods\r\nconst formatCurrency = (amount) => PriceUtils.format(amount)\r\n\r\nconst formatInvoiceItems = (items) => {\r\n  return items.map(item => ({\r\n    item_id: Number(item.id),\r\n    name: item.name,\r\n    description: item.description || '',\r\n    price: item.price,\r\n    quantity: item.quantity,\r\n    unit_name: item.unit_name || 'units',\r\n    sub_total: item.price * item.quantity,\r\n    total: item.price * item.quantity,\r\n    discount: \"0\",\r\n    discount_val: 0,\r\n    discount_type: \"fixed\",\r\n    tax: Math.round(Number(item.tax || 0)),\r\n    retention_amount: 0,\r\n    retention_concept: null,\r\n    retention_percentage: null,\r\n    retentions_id: null\r\n  }))\r\n}\r\n\r\nconst createInvoice = async () => {\r\n  logger.startGroup('Creating Retail Invoice')\r\n  try {\r\n    // Ensure company store is initialized\r\n    if (!companyStore.isConfigured) {\r\n      await companyStore.initializeStore()\r\n    }\r\n\r\n    // Get next invoice number\r\n    const nextInvoiceResponse = await posApi.invoice.getNextNumber()\r\n    logger.debug('Next invoice number response:', nextInvoiceResponse)\r\n    \r\n    // Get current date\r\n    const currentDate = new Date()\r\n    const formattedDate = formatApiDate(currentDate)\r\n    \r\n    // Format items for invoice\r\n    const formattedItems = formatInvoiceItems(cartStore.items)\r\n    \r\n    // Get the current store details\r\n    const currentStore = companyStore.currentStore\r\n    if (!currentStore) {\r\n      throw new Error('No store selected')\r\n    }\r\n    \r\n    // Prepare invoice data\r\n    const invoiceData = {\r\n      invoice_number: `${nextInvoiceResponse.prefix}-${nextInvoiceResponse.nextNumber}`,\r\n      invoice_date: formattedDate,\r\n      due_date: formatApiDate(new Date(currentDate.getTime() + 7 * 24 * 60 * 60 * 1000)),\r\n      total: PriceUtils.toCents(cartStore.total),\r\n      sub_total: PriceUtils.toCents(cartStore.subtotal),\r\n      tax: PriceUtils.toCents(cartStore.taxAmount),\r\n      items: formattedItems,\r\n      hold_items: formattedItems, // Add hold_items for payment dialog\r\n      taxes: [],\r\n      packages: [],\r\n      tables_selected: [],\r\n      contact: {\r\n        name: currentStore.company_name || \"Walk-in Customer\",\r\n        company_name: currentStore.company_name || \"Walk-in Customer\",\r\n        first_name: currentStore.company_name || \"Walk-in\",\r\n        last_name: \"Customer\",\r\n        email: currentStore.email || \"walk-in@example.com\",\r\n        phone: currentStore.phone || \"000-000-0000\",\r\n        second_phone: \"N/A\",\r\n        identification: currentStore.tax_id || \"N/A\",\r\n        type: \"company\"\r\n      },\r\n      type: OrderType.TO_GO, // Changed from RETAIL to TO_GO since RETAIL is not a valid order type\r\n      status: \"SENT\",\r\n      paid_status: PaidStatus.UNPAID,\r\n      description: \"Retail Point of Sale Transaction\",\r\n      user_id: getCurrentUserId.value,\r\n      company_id: companyStore.company?.id,\r\n      invoice_template_id: 1,\r\n      is_invoice_pos: 1,\r\n      is_pdf_pos: true,\r\n      is_hold_invoice: false,\r\n      avalara_bool: false,\r\n      banType: true,\r\n      package_bool: false,\r\n      print_pdf: false,\r\n      save_as_draft: false,\r\n      send_email: false,\r\n      not_charge_automatically: false,\r\n      invoice_pbx_modify: 0,\r\n      send_sms: 0,\r\n      discount: \"0\",\r\n      discount_type: \"fixed\",\r\n      discount_val: 0,\r\n      discount_per_item: \"NO\",\r\n      tip: \"0\",\r\n      tip_type: \"fixed\",\r\n      tip_val: 0,\r\n      notes: \"\",\r\n      hold_invoice_id: null,\r\n      store_id: currentStore.id || 0,\r\n      cash_register_id: companyStore.selectedCashier?.id || 0\r\n    }\r\n\r\n    // Create the invoice\r\n    const response = await posApi.invoice.create(invoiceData)\r\n    \r\n    // Set up the current invoice for payment dialog\r\n    currentInvoice.value = {\r\n      invoice: {\r\n        ...invoiceData,\r\n        id: response?.data?.id || `${nextInvoiceResponse.prefix}-${nextInvoiceResponse.nextNumber}`,\r\n        type: OrderType.TO_GO,\r\n        hold_items: formattedItems,\r\n        total: cartStore.total,\r\n        sub_total: cartStore.subtotal,\r\n        tax: cartStore.taxAmount,\r\n        is_prepared_data: true\r\n      }\r\n    }\r\n\r\n    // Show payment dialog\r\n    showPaymentDialog.value = true\r\n    dialog.value = false\r\n\r\n    logger.endGroup()\r\n    return currentInvoice.value.invoice\r\n\r\n  } catch (error) {\r\n    logger.error('Invoice Creation Failed:', error)\r\n    logger.endGroup()\r\n    throw error\r\n  }\r\n}\r\n\r\nconst processPayment = async () => {\r\n  if (!canPay.value) {\r\n    closeDialog()\r\n    return\r\n  }\r\n  \r\n  processing.value = true\r\n  error.value = null\r\n  \r\n  try {\r\n    const invoice = await createInvoice()\r\n    if (!invoice) {\r\n      throw new Error('Failed to create invoice')\r\n    }\r\n  } catch (err) {\r\n    error.value = err.message || 'Failed to process payment'\r\n    logger.error('Payment processing error:', err)\r\n    closeDialog()\r\n  } finally {\r\n    processing.value = false\r\n  }\r\n}\r\n\r\nconst handlePaymentComplete = async (result) => {\r\n  logger.info('Payment completion handler called with result:', result)\r\n  \r\n  if (result) {\r\n    try {\r\n      // Get invoice details from the result\r\n      const invoice = result?.invoice?.invoice || result?.invoice\r\n      \r\n      if (!invoice?.unique_hash) {\r\n        console.error('📄 [Invoice PDF] Missing invoice hash:', invoice)\r\n        throw new Error('Could not generate invoice PDF: Missing invoice hash')\r\n      }\r\n\r\n      // Get invoice PDF URL with fallback\r\n      const invoicePdfUrl = invoice.invoicePdfUrl || \r\n        `${import.meta.env.VITE_API_URL.replace('/api/v1', '')}/invoices/pdf/${invoice.unique_hash}`\r\n\r\n      console.log('📄 [Invoice PDF] Opening PDF viewer with URL:', invoicePdfUrl)\r\n      currentPdfUrl.value = invoicePdfUrl\r\n      showPdfViewer.value = true\r\n\r\n      // Close payment dialog and emit completion event\r\n      closeDialog()\r\n      emit('payment-complete', result)\r\n    } catch (error) {\r\n      console.error('📄 [Invoice PDF] Failed to display invoice:', error)\r\n      window.toastr?.['error'](error.message || 'Failed to display invoice PDF')\r\n    }\r\n  }\r\n}\r\n\r\nconst closeDialog = () => {\r\n  if (!processing.value) {\r\n    error.value = null\r\n    currentInvoice.value = null\r\n    showPaymentDialog.value = false\r\n    emit('update:modelValue', false)\r\n  }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.modal-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n.payment-content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  background-color: #f5f5f5;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.payment-container {\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  min-height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.invoice-summary-card {\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\r\n  background-color: white;\r\n  margin: 24px 0;\r\n}\r\n\r\n.items-list {\r\n  max-height: 50vh;\r\n  overflow-y: auto;\r\n  padding-right: 8px;\r\n}\r\n\r\n.items-list::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.items-list::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 4px;\r\n}\r\n\r\n.items-list::-webkit-scrollbar-thumb {\r\n  background: #888;\r\n  border-radius: 4px;\r\n}\r\n\r\n.items-list::-webkit-scrollbar-thumb:hover {\r\n  background: #666;\r\n}\r\n\r\n.item-row {\r\n  padding: 12px 0;\r\n}\r\n\r\n.item-row:not(:last-child) {\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.item-details {\r\n  flex: 1;\r\n  min-width: 0;\r\n  padding-right: 16px;\r\n}\r\n\r\n.item-details .text-h6 {\r\n  margin-bottom: 4px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.totals-section {\r\n  background-color: #f8f9fa;\r\n  padding: 24px;\r\n  border-radius: 8px;\r\n  margin-top: 16px;\r\n}\r\n\r\n.error-alert {\r\n  position: fixed;\r\n  top: 24px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 1000;\r\n  min-width: 400px;\r\n}\r\n\r\n.processing-state {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  text-align: center;\r\n  z-index: 1000;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 32px;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .invoice-summary-card {\r\n    margin: 12px 0;\r\n  }\r\n\r\n  .payment-container {\r\n    padding: 8px !important;\r\n  }\r\n\r\n  .totals-section {\r\n    padding: 16px;\r\n  }\r\n}\r\n</style>\r\n","<!-- src/views/pos/components/PosFooter.vue -->\r\n<template>\r\n  <v-footer app class=\"pos-footer\">\r\n    <div class=\"footer-content\">\r\n      <!-- Order Type Actions -->\r\n      <div class=\"order-types\">\r\n        <held-orders-modal \r\n          v-model=\"showHeldOrdersModal\"\r\n          :disabled=\"false\" \r\n        />\r\n        <dine-in-modal :disabled=\"isDisabled\" />\r\n        <to-go-modal :disabled=\"isDisabled\" />\r\n        <delivery-modal :disabled=\"isDisabled\" />\r\n        <pickup-modal :disabled=\"isDisabled\" />\r\n      </div>\r\n\r\n      <!-- Order Actions -->\r\n      <div class=\"order-actions\">\r\n        <v-btn\r\n          color=\"success\"\r\n          prepend-icon=\"mdi-cash-register\"\r\n          @click=\"showPaymentDialog = true\"\r\n          :disabled=\"!canPay\"\r\n          :loading=\"isProcessingPayment\"\r\n          class=\"text-none action-btn\"\r\n          elevation=\"2\"\r\n          size=\"large\"\r\n        >\r\n          PAY {{ PriceUtils.format(cartStore.total) }}\r\n        </v-btn>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Payment Dialog -->\r\n    <retail-payment-dialog\r\n      v-model=\"showPaymentDialog\"\r\n      @payment-complete=\"handlePaymentComplete\"\r\n    />\r\n  </v-footer>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { storeToRefs } from 'pinia'\r\nimport HeldOrdersModal from './held-orders/HeldOrdersModal.vue'\r\nimport DineInModal from './order-types/DineInModal.vue'\r\nimport ToGoModal from './order-types/ToGoModal.vue'\r\nimport DeliveryModal from './order-types/DeliveryModal.vue'\r\nimport PickupModal from './order-types/PickupModal.vue'\r\nimport PaymentDialog from './dialogs/PaymentDialog.vue'\r\nimport RetailPaymentDialog from './dialogs/RetailPaymentDialog.vue'\r\nimport { useCartStore } from '@/stores/cart-store'\r\nimport { useCompanyStore } from '@/stores/company'\r\nimport { usePayment } from '../composables/usePayment'\r\nimport { logger } from '@/utils/logger'\r\nimport { convertHeldOrderToInvoice } from './held-orders/utils/invoiceConverter'\r\nimport { usePosStore } from '@/stores/pos-store'\r\nimport { PriceUtils } from '@/utils/price'\r\n\r\nconst cartStore = useCartStore()\r\nconst companyStore = useCompanyStore()\r\nconst posStore = usePosStore()\r\nconst { isProcessingPayment } = usePayment()\r\n\r\n// Local state\r\nconst showPaymentDialog = ref(false)\r\nconst currentInvoice = ref(null)\r\nconst showHeldOrdersModal = ref(false)\r\n\r\n// Use storeToRefs to maintain reactivity for store state\r\nconst { items, holdInvoiceId } = storeToRefs(cartStore)\r\nconst { isConfigured } = storeToRefs(companyStore)\r\n\r\n// Compute if cart is empty based on items length\r\nconst isEmpty = computed(() => items.value.length === 0)\r\n\r\n// Compute disabled state for all buttons\r\nconst isDisabled = computed(() => {\r\n  return isEmpty.value || !isConfigured.value\r\n})\r\n\r\n// Compute if payment can be processed\r\nconst canPay = computed(() => {\r\n  const canPayValue = !isEmpty.value && isConfigured.value\r\n  logger.debug('Can pay computed:', {\r\n    isEmpty: isEmpty.value,\r\n    isConfigured: isConfigured.value,\r\n    canPay: canPayValue\r\n  })\r\n  return canPayValue\r\n})\r\n\r\n// Handle payment completion\r\nconst handlePaymentComplete = async (result) => {\r\n  logger.info('Payment completion handler called with result:', result)\r\n  \r\n  if (result) {\r\n    // Clear the cart after successful payment\r\n    await cartStore.$reset()\r\n    window.toastr?.['success']('Payment processed successfully')\r\n  }\r\n  \r\n  showPaymentDialog.value = false\r\n}\r\n\r\n// Debug mounted state\r\nonMounted(() => {\r\n  logger.debug('PosFooter mounted:', {\r\n    isEmpty: isEmpty.value,\r\n    isConfigured: isConfigured.value,\r\n    holdInvoiceId: holdInvoiceId.value,\r\n    canPay: canPay.value,\r\n    items: items.value.length\r\n  })\r\n})\r\n\r\ndefineEmits(['print-order', 'submit-order'])\r\n</script>\r\n\r\n<style scoped>\r\n.pos-footer {\r\n  box-shadow: 0 -2px 4px rgba(0,0,0,0.1);\r\n  padding: 8px 24px !important;\r\n  width: 100% !important;\r\n  height: auto !important;\r\n  min-height: 72px;\r\n  background-color: #f8f9fa !important;\r\n}\r\n\r\n.footer-content {\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  gap: 32px;\r\n}\r\n\r\n.order-types {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  flex-wrap: nowrap;\r\n  flex-shrink: 1;\r\n  min-width: 0;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.order-types :deep(.v-btn) {\r\n  flex: 0 0 auto !important;\r\n  min-width: 100px !important;\r\n  max-width: 130px !important;\r\n  padding: 0 16px !important;\r\n  height: 48px !important;\r\n  border-radius: 8px !important;\r\n  text-transform: none !important;\r\n  letter-spacing: 0.25px !important;\r\n  font-weight: 500 !important;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important;\r\n  transition: all 0.2s ease-in-out !important;\r\n}\r\n\r\n.order-types :deep(.v-btn:hover) {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.15) !important;\r\n}\r\n\r\n.order-types :deep(.v-btn:active) {\r\n  transform: translateY(1px);\r\n  box-shadow: 0 1px 2px rgba(0,0,0,0.1) !important;\r\n}\r\n\r\n.order-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.action-btn {\r\n  white-space: nowrap;\r\n  min-width: 160px !important;\r\n  height: 48px !important;\r\n  border-radius: 8px !important;\r\n  text-transform: none !important;\r\n  letter-spacing: 0.25px !important;\r\n  font-weight: 600 !important;\r\n  font-size: 1.1rem !important;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important;\r\n  transition: all 0.2s ease-in-out !important;\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.15) !important;\r\n}\r\n\r\n.action-btn:active {\r\n  transform: translateY(1px);\r\n  box-shadow: 0 1px 2px rgba(0,0,0,0.1) !important;\r\n}\r\n\r\n/* Large screens */\r\n@media (min-width: 1441px) {\r\n  .pos-footer {\r\n    padding: 12px 32px !important;\r\n  }\r\n  \r\n  .footer-content {\r\n    gap: 48px;\r\n  }\r\n  \r\n  .order-types {\r\n    gap: 16px;\r\n  }\r\n\r\n  .order-types :deep(.v-btn) {\r\n    min-width: 120px !important;\r\n    max-width: 160px !important;\r\n    height: 52px !important;\r\n  }\r\n  \r\n  .order-actions {\r\n    gap: 24px;\r\n  }\r\n\r\n  .action-btn {\r\n    min-width: 180px !important;\r\n    height: 52px !important;\r\n  }\r\n}\r\n\r\n/* Medium-large screens */\r\n@media (max-width: 1440px) {\r\n  .pos-footer {\r\n    padding: 8px 20px !important;\r\n  }\r\n  \r\n  .footer-content {\r\n    gap: 24px;\r\n  }\r\n\r\n  .order-types :deep(.v-btn) {\r\n    min-width: 110px !important;\r\n    max-width: 140px !important;\r\n    padding: 0 12px !important;\r\n  }\r\n}\r\n\r\n/* Medium screens - where the issue starts */\r\n@media (max-width: 1280px) {\r\n  .pos-footer {\r\n    padding: 12px !important;\r\n  }\r\n\r\n  .footer-content {\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    gap: 8px;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  .order-types {\r\n    flex: 0 1 auto;\r\n    justify-content: flex-end;\r\n    gap: 8px;\r\n  }\r\n\r\n  .order-types :deep(.v-btn) {\r\n    min-width: 90px !important;\r\n    max-width: 120px !important;\r\n    padding: 0 8px !important;\r\n  }\r\n\r\n  .order-actions {\r\n    flex: 0 0 auto;\r\n    gap: 8px;\r\n  }\r\n\r\n  .action-btn {\r\n    min-width: 90px !important;\r\n  }\r\n}\r\n\r\n/* Small screens */\r\n@media (max-width: 768px) {\r\n  .pos-footer {\r\n    padding: 8px !important;\r\n  }\r\n\r\n  .footer-content {\r\n    gap: 6px;\r\n  }\r\n\r\n  .order-types {\r\n    gap: 6px;\r\n  }\r\n\r\n  .order-types :deep(.v-btn) {\r\n    min-width: 80px !important;\r\n    max-width: 110px !important;\r\n    padding: 0 6px !important;\r\n  }\r\n\r\n  .action-btn {\r\n    min-width: 80px !important;\r\n    padding: 0 8px !important;\r\n  }\r\n}\r\n\r\n/* Extra small screens */\r\n@media (max-width: 480px) {\r\n  .pos-footer {\r\n    padding: 8px 4px !important;\r\n  }\r\n\r\n  .footer-content {\r\n    gap: 4px;\r\n  }\r\n\r\n  .order-types {\r\n    gap: 4px;\r\n  }\r\n\r\n  .order-types :deep(.v-btn) {\r\n    min-width: 70px !important;\r\n    max-width: 100px !important;\r\n    padding: 0 4px !important;\r\n  }\r\n\r\n  .order-actions {\r\n    gap: 4px;\r\n  }\r\n\r\n  .action-btn {\r\n    min-width: 70px !important;\r\n    padding: 0 6px !important;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <v-dialog v-model=\"show\" max-width=\"400\">\r\n    <v-card>\r\n      <v-card-title>Enter Reference Number</v-card-title>\r\n      <v-card-text>\r\n        <v-text-field\r\n          v-model=\"referenceNumber\"\r\n          label=\"Reference Number\"\r\n          :rules=\"[v => !!v || 'Reference number is required']\"\r\n          required\r\n          density=\"compact\"\r\n        />\r\n      </v-card-text>\r\n      <v-card-actions>\r\n        <v-spacer />\r\n        <v-btn\r\n          color=\"grey\"\r\n          variant=\"text\"\r\n          @click=\"close\"\r\n        >\r\n          Cancel\r\n        </v-btn>\r\n        <v-btn\r\n          color=\"primary\"\r\n          :disabled=\"!referenceNumber\"\r\n          @click=\"confirm\"\r\n        >\r\n          Hold Order\r\n        </v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue'\r\n\r\nconst props = defineProps({\r\n  modelValue: Boolean\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'confirm'])\r\n\r\nconst referenceNumber = ref('')\r\n\r\nconst show = computed({\r\n  get: () => props.modelValue,\r\n  set: (value) => emit('update:modelValue', value)\r\n})\r\n\r\nconst close = () => {\r\n  show.value = false\r\n  referenceNumber.value = ''\r\n}\r\n\r\nconst confirm = () => {\r\n  if (!referenceNumber.value) return\r\n  emit('confirm', referenceNumber.value)\r\n  close()\r\n}\r\n</script>\r\n","import { ref } from 'vue'\nimport { useCartStore } from '@/stores/cart-store'\nimport { useCompanyStore } from '@/stores/company'\nimport { posOperations } from '@/services/api/pos-operations'\nimport { logger } from '@/utils/logger'\n\nexport function useOrderManagement() {\n  const cartStore = useCartStore()\n  const companyStore = useCompanyStore()\n  const showReferenceDialog = ref(false)\n  const error = ref(null)\n\n  const confirmHoldOrder = async (referenceNumber) => {\n    if (!referenceNumber) return\n    \n    try {\n      const holdInvoice = cartStore.prepareHoldInvoiceData(\n        companyStore.selectedStore,\n        companyStore.selectedCashier,\n        referenceNumber\n      )\n      await posOperations.createHoldInvoice(holdInvoice)\n      cartStore.clearCart()\n    } catch (err) {\n      error.value = err.message\n      logger.error('Failed to create hold invoice:', err)\n      throw err\n    }\n  }\n\n  const printOrder = async (orderId = null) => {\n    try {\n      if (orderId) {\n        await posOperations.printOrder(orderId)\n      } else {\n        // Print current cart\n        const orderData = {\n          items: cartStore.items,\n          total: cartStore.total,\n          subtotal: cartStore.subtotal,\n          tax: cartStore.taxAmount\n        }\n        \n        const response = await posOperations.submitOrder(orderData)\n        await posOperations.printOrder(response.invoice.id)\n      }\n    } catch (err) {\n      error.value = err.message\n      logger.error('Failed to print order:', err)\n      throw err\n    }\n  }\n\n  const submitOrder = () => {\n    showReferenceDialog.value = true\n  }\n\n  return {\n    showReferenceDialog,\n    error,\n    confirmHoldOrder,\n    printOrder,\n    submitOrder\n  }\n}\n","import { ref, watch } from 'vue'\nimport { logger } from '@/utils/logger'\n\nexport function useErrorHandling() {\n  const error = ref(null)\n  const loading = ref(false)\n\n  const handleError = (err, context = '') => {\n    const errorMessage = err.message || 'An unexpected error occurred'\n    error.value = errorMessage\n    logger.error(`Error in ${context}:`, err)\n    return errorMessage\n  }\n\n  const clearError = () => {\n    error.value = null\n  }\n\n  // Auto-clear error when loading state changes\n  watch(loading, (newValue) => {\n    if (newValue) {\n      clearError()\n    }\n  })\n\n  return {\n    error,\n    loading,\n    handleError,\n    clearError\n  }\n}\n","<!-- src/views/pos/PosView.vue -->\r\n<template>\r\n  <v-layout class=\"pos-layout fill-height\" :class=\"{ 'mobile-layout': $vuetify.display.smAndDown }\">\r\n    <!-- Error Alert -->\r\n    <v-alert\r\n      v-if=\"error\"\r\n      type=\"error\"\r\n      closable\r\n      class=\"ma-4\"\r\n      @click:close=\"clearError\"\r\n    >\r\n      {{ error }}\r\n    </v-alert>\r\n\r\n    <!-- Main Content -->\r\n    <template v-if=\"companyStore.isConfigured\">\r\n      <v-main class=\"pos-main pa-0\">\r\n        <v-container fluid class=\"fill-height pos-container\">\r\n          <v-row no-gutters class=\"fill-height\" style=\"width: 100%; margin: 0;\">\r\n            <!-- Left Side - Cart -->\r\n            <v-col \r\n              cols=\"12\" \r\n              sm=\"12\" \r\n              md=\"5\" \r\n              lg=\"4\" \r\n              xl=\"3\" \r\n              class=\"pos-cart border-r\"\r\n              :class=\"{'pos-cart-mobile': $vuetify.display.smAndDown}\"\r\n            >\r\n              <div class=\"cart-container\">\r\n                <pos-cart />\r\n              </div>\r\n            </v-col>\r\n\r\n            <!-- Right Side - Products -->\r\n            <v-col \r\n              cols=\"12\" \r\n              sm=\"12\" \r\n              md=\"7\" \r\n              lg=\"8\" \r\n              xl=\"9\" \r\n              class=\"pos-products\"\r\n              :class=\"{'pos-products-mobile': $vuetify.display.smAndDown}\"\r\n            >\r\n              <div class=\"products-container\">\r\n                <pos-products />\r\n              </div>\r\n            </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </v-main>\r\n\r\n      <!-- Footer -->\r\n      <pos-footer\r\n        @print-order=\"printOrder\"\r\n        @submit-order=\"submitOrder\"\r\n      />\r\n    </template>\r\n\r\n    <!-- Reference Number Dialog -->\r\n    <reference-dialog\r\n      v-model=\"showReferenceDialog\"\r\n      @confirm=\"confirmHoldOrder\"\r\n    />\r\n\r\n    <!-- Loading Overlay -->\r\n    <v-overlay\r\n      :model-value=\"loading\"\r\n      class=\"align-center justify-center\"\r\n    >\r\n      <v-progress-circular\r\n        size=\"64\"\r\n        color=\"primary\"\r\n        indeterminate\r\n      />\r\n    </v-overlay>\r\n  </v-layout>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref, computed } from 'vue'\r\nimport { useCompanyStore } from '@/stores/company'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport { WindowManager } from '@/utils/windowManager'\r\nimport PosCart from './components/PosCart.vue'\r\nimport PosProducts from './components/PosProducts.vue'\r\nimport PosFooter from './components/PosFooter.vue'\r\nimport ReferenceDialog from './components/dialogs/ReferenceDialog.vue'\r\nimport { useOrderManagement } from './composables/useOrderManagement'\r\nimport { useErrorHandling } from './composables/useErrorHandling'\r\nimport { logger } from '@/utils/logger'\r\n\r\n// Store initialization\r\nconst companyStore = useCompanyStore()\r\nconst router = useRouter()\r\nconst route = useRoute()\r\nconst drawer = ref(false)\r\n\r\nconst isCustomerDisplay = computed(() => {\r\n  return route.path === '/customer-display'\r\n})\r\n\r\n// Composables\r\nconst {\r\n  showReferenceDialog,\r\n  confirmHoldOrder,\r\n  printOrder,\r\n  submitOrder\r\n} = useOrderManagement()\r\n\r\nconst {\r\n  error,\r\n  loading,\r\n  clearError\r\n} = useErrorHandling()\r\n\r\n// Initialize the POS view\r\nasync function initializePos() {\r\n  try {\r\n    logger.startGroup('POS View: Initializing')\r\n    logger.info('Starting POS initialization')\r\n\r\n    if (!companyStore.isConfigured) {\r\n      router.push('/select-cashier')\r\n      return\r\n    }\r\n\r\n    logger.info('POS initialization complete:', {\r\n      isConfigured: companyStore.isConfigured,\r\n      selectedCustomer: companyStore.selectedCustomer,\r\n      selectedStore: companyStore.selectedStore,\r\n      selectedCashier: companyStore.selectedCashier\r\n    })\r\n  } catch (err) {\r\n    logger.error('Failed to initialize POS view:', err)\r\n    error.value = 'Failed to initialize POS. Please try refreshing the page.'\r\n  } finally {\r\n    logger.endGroup()\r\n  }\r\n}\r\n\r\n// Initialize on mount\r\nonMounted(async () => {\r\n  await initializePos()\r\n  \r\n  // Open customer display on secondary screen\r\n  try {\r\n    const customerWindow = await WindowManager.openCustomerDisplay()\r\n    if (!customerWindow) {\r\n      logger.warn('Failed to open customer display on secondary screen')\r\n    }\r\n  } catch (error) {\r\n    logger.error('Error opening customer display:', error)\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.pos-layout {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh !important;\r\n  max-height: 100vh !important;\r\n  min-height: 100vh !important;\r\n  overflow: hidden;\r\n  width: 100vw !important;\r\n  max-width: 100vw !important;\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n}\r\n\r\n.v-main--pos {\r\n  padding-bottom: 0 !important;\r\n}\r\n\r\n.v-main--pos .v-main__wrap {\r\n  padding: 0 !important;\r\n}\r\n\r\n.mobile-layout {\r\n  padding-bottom: 64px;\r\n}\r\n\r\n:deep(.v-main) {\r\n  flex: 1 1 auto;\r\n  height: calc(100% - 64px);\r\n  overflow: hidden;\r\n  padding-bottom: 0 !important;\r\n}\r\n\r\n:deep(.v-main > .v-main__wrap) {\r\n  height: 100%;\r\n  padding: 0 !important;\r\n}\r\n\r\n.pos-container {\r\n  height: calc(100vh - 64px) !important;\r\n  min-height: calc(100vh - 64px) !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  width: 100vw !important;\r\n  max-width: 100vw !important;\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n  position: relative;\r\n}\r\n\r\n.pos-main {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n.cart-container, .products-container {\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  position: relative;\r\n}\r\n\r\n.pos-cart, .pos-products {\r\n  height: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  :deep(.v-main) {\r\n    height: calc(100% - 64px);\r\n    margin-bottom: 64px;\r\n  }\r\n\r\n  .pos-cart-mobile .cart-container, \r\n  .pos-products-mobile .products-container {\r\n    height: 50vh;\r\n    max-height: calc(100vh - 128px);\r\n    overflow-y: auto;\r\n    position: relative;\r\n  }\r\n\r\n  .pos-cart-mobile {\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\r\n  }\r\n}\r\n\r\n@media (min-width: 601px) and (max-width: 960px) {\r\n  :deep(.v-main) {\r\n    height: calc(100% - 88px);\r\n    margin-bottom: 88px;\r\n  }\r\n\r\n  .cart-container, .products-container {\r\n    height: 100%;\r\n    overflow-y: auto;\r\n  }\r\n}\r\n\r\n.border-r {\r\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n/* Mobile Optimizations */\r\n@media (max-width: 600px) {\r\n  .selection-dialog {\r\n    margin: 0;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    border-radius: 16px 16px 0 0;\r\n  }\r\n\r\n  .selection-dialog :deep(.v-card-text) {\r\n    padding: 16px;\r\n  }\r\n\r\n  .selection-dialog :deep(.v-list-item) {\r\n    min-height: 56px;\r\n    padding: 8px;\r\n  }\r\n}\r\n</style>\r\n"],"names":["WindowManager","left","top","width","height","secondaryScreen","customerWindow","error","props","__props","emit","__emit","item","watch","newItems","oldItems","PriceUtils","formatPrice","cents","computed","total","sum","itemTotal","handleQuantityUpdate","itemId","newQuantity","index","handleRemoveItem","useCartDiscount","cartStore","useCartStore","discountType","ref","discountValue","newType","newValue","type","value","updateDiscount","amount","splitQuantity","showDialog","canSplit","handleSplit","close","byteToHex","i","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","randomUUID","native","v4","options","buf","rnds","validateHoldOrder","order","PaidStatus","logger","OrderType","transformHoldInvoiceResponse","data","_a","invoice","generateIdempotencyKey","uuidv4","handleApiError","errorResponse","configOperations","settings","response","apiClient","cashRegisterId","companyId","endpoint","getApiEndpoint","config","tables","table","_b","invoiceOperations","api","transformedData","id","invoiceData","updatedData","holdOrder","paymentOperations","paymentData","idempotencyKey","orderOperations","orderId","statusData","operations","usePosOperations","posOperations","ORDER_TYPES","useOrderType","posStore","usePosStore","orderType","customerInfo","customerNotes","loading","notesObj","e","newNotes","isValid","name","phone","address","requiresCustomerInfo","canCreateOrder","canCreate","currentOrderType","invoiceName","updateCustomerNotes","customer","notes","orderData","info","orderName","holdOrderData","orderInfo","holdResult","result","err","setCustomerNotes","localNotes","saveNotesToCart","updateNotes","onMounted","parseOrderNotes","useCart","updating","quantity","description","_c","clearOrder","updateQuantity","removeItem","updateOrder","splitItem","handleUpdateInvoice","originalInvoice","updateData","showEditDialog","editingItem","editingIndex","editItem","searchQuery","isLoading","mobile","useDisplay","isMobile","SKU_PATTERNS","searchTimeout","skuBuffer","skuBufferTimeout","isValidSKU","upperValue","pattern","handleSearch","clearSearch","handleEnter","selectedTab","currentPage","itemsPerPage","displayedProducts","start","end","totalPages","handlePageChange","page","handleProductSelect","price","getImageUrl","getImageHeight","defaultSettings","localLayout","localColumns","localRows","columnOptions","rowOptions","updateLayout","newSettings","updateColumns","updateRows","resetToDefaults","showGridSettings","gridSettings","updateGridSettings","query","handleCategoryChange","categoryId","quickAdd","product","fullProduct","handleQuickAdd","searchTerm","productBySku","p","productByName","usePayment","paymentMethods","fetchSettings","fetchPaymentMethods","createPayment","payments","nextNumberResponse","payment","method","m","calculateFees","totalPayment","getPaymentMethod","isCashOnly","methodId","getDenominations","fees","totalFee","fixedFee","percentageFee","useTableManagement","companyStore","useCompanyStore","holdInvoices","storeToRefs","selectedCashier","currentCashRegister","findHoldInvoiceForTable","tableId","getTableInfoFromHoldInvoices","tableInfo","getTables","isOccupied","isTableOccupied","holdTable","setTableOccupancy","occupied","stillOccupied","formatApiDate","date","formatDate","formatCurrency","toCents","getOrderType","getOrderTypeColor","HISTORY_STORAGE_KEY","useHeldOrders","holdInvoiceSettings","releaseTablesAfterPayment","loadingOrder","deletingOrder","convertingOrder","search","selectedType","selectedStatus","showPaymentDialog","currentInvoice","originalHoldInvoice","orderHistory","initializeOrderHistory","storedHistory","parsedHistory","clearOrderHistory","orderTypes","handlePaymentComplete","paymentResult","historyEntry","storageError","deleteOrder","_d","_e","convertToInvoice","validateInvoiceData","validateItemData","processCartProperties","loadOrder","normalizePriceFromBackend","numPrice","normalized","normalizedPrice","invoiceId","fetchHoldInvoices","useInvoices","invoices","pagination","customerId","status","fromDate","toDate","invoiceNumber","customcode","unit","orderByField","orderBy","limit","current_page","last_page","_f","_g","selectedFilter","filterItems","statusItems","selectedPaymentStatus","paymentStatusItems","logOrderInfo","action","hasNotes","getTooltipText","getStatusColor","newVal","oldVal","missingFields","field","convertHeldOrderToInvoice","posApi","issuancePeriod","currentDate","dueDate","tableData","formattedItems","itemPrice","itemQuantity","tipValue","subTotal","taxAmount","totalAmount","invoiceResponse","createdInvoice","dialog","handleIframeLoad","print","iframe","closeDialog","invoiceTotal","paymentLoading","paymentError","tableLoading","tableError","processing","showPdfViewer","currentPdfUrl","handlePdfViewerClosed","showTipDialog","tipPercentages","selectedTipPercent","customTipPercent","tipAmount","tipType","calculatedTip","percent","dollarAmount","remainingAmount","totalPaid","remaining","canAddMorePayments","isValidAmount","isValidReceivedAmount","hasPaymentFees","getFeeDescription","getPaymentMethodIcon","methodName","isMethodSelected","isMethodDisabled","selectPaymentMethod","displayAmount","validateAmount","handleDenominationClick","money","currentReceived","amountToAdd","newTotal","calculateChange","receivedInCents","amountInCents","addPayment","removePayment","idx","selectTipPercent","handleCustomTipInput","cancelTip","confirmTip","processPayment","holdInvoice","totalWithTip","tipPercentage","invoiceResult","heldOrderData","formattedPayments","invoicePdfUrl","_h","canLoadToCart","loadToCart","totalPayments","totalFees","received","finalInvoice","totalPaymentAmount","_i","_j","_k","_l","newInvoices","oldInvoices","showConfirmDialog","selectedInvoice","showDetailsDialog","selectedInvoiceDetails","numericPrice","loadInvoiceToCart","transformedInvoice","color","getPaidStatusColor","showInvoiceDetails","handlePayClick","confirmPayment","deleteDialog","isDeleting","activeTab","invoiceSearch","invoiceSelectedStatus","invoiceSelectedPaymentStatus","invoicePage","invoiceItemsPerPage","deliverySearch","deliverySelectedStatus","deliverySelectedPaymentStatus","deliveryPage","deliveryLoading","updateModelValue","holdOrdersLoading","invoicesLoading","invoicesError","invoicesPagination","fetchInvoices","activeOrders","filteredActiveOrders","filtered","startIndex","totalInvoicePages","filteredDeliveryOrders","totalDeliveryPages","filteredInvoiceOrders","handleLoadOrder","handleConvertOrder","finalTotal","handleDeleteOrder","confirmDelete","handleOrderLoaded","params","selectedStore","hasStore","hasCashier","hasItems","setOrderType","setCustomerInfo","selectedTables","isTableAvailable","isTableSelected","t","getTableQuantity","handleTableClick","incrementQuantity","decrementQuantity","retryLoadTables","processOrder","selectedTablesData","tableNames","totalCustomers","holdError","resolve","closeModal","__expose","reactive","validationErrors","existingNotes","validateForm","clearAllErrors","clearError","key","formattedPhone","holdInvoiceData","inv","holdInvoiceId","statesApi","countryCode","states","selectedState","fetchStates","onStateSelect","stateCode","state","isObject","isObject_1","freeGlobal","global","_freeGlobal","require$$0","freeSelf","root","_root","now","now_1","reWhitespace","trimmedEndIndex","string","_trimmedEndIndex","reTrimStart","baseTrim","_baseTrim","Symbol","_Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","isOwn","tag","unmasked","_getRawTag","objectToString","_objectToString","require$$1","require$$2","nullTag","undefinedTag","baseGetTag","_baseGetTag","isObjectLike","isObjectLike_1","symbolTag","isSymbol","isSymbol_1","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","other","isBinary","toNumber_1","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","debounce_1","useCustomerSearch","searchResults","isSearching","searchError","lastSearchQuery","searchCustomers","customerData","errorMessage","apiCreateCustomer","formData","initialFormData","resetForm","errors","creating","createCustomer","apiError","SectionOrderService","sectionId","OrderStatus","holdOrders","invoiceOrders","orderDetailsPromises","orderDetailsResults","items","section","sectionOrderService","useSectionOrdersStore","defineStore","orders","lastUpdated","cache","CACHE_DURATION","getOrdersBySection","sectionType","debouncedFetch","fetchOrdersForSection","force","cacheKey","cached","sectionOrders","refreshOrders","KITCHEN_ORDER_TYPES","useKitchenStore","completedOrders","initializeOrders","directInvoices","sectionStore","source","processedOrders","a","b","persistOrders","addOrder","completeOrder","orderIndex","o","STORAGE_KEY","stored","formattedInvoice","kitchenStore","processOrderType","orderError","sendSms","canProcessOrder","customerSearch","selectedCustomer","showCreateCustomer","onCustomerSearch","isPhoneSearch","customers","displayName","displayPhone","displayEmail","onCustomerSelect","fullCustomer","billingAddress","clearSelectedCustomer","onCustomerCreated","fullAddress","nextInvoice","errorMsg","convertedInvoiceData","onPaymentComplete","success","selection","isOpen","formattedNotes","d","year","month","day","authStore","useAuthStore","user","canPay","getCurrentUserId","formatInvoiceItems","createInvoice","nextInvoiceResponse","formattedDate","currentStore","isProcessingPayment","showHeldOrdersModal","isConfigured","isEmpty","isDisabled","canPayValue","referenceNumber","show","confirm","useOrderManagement","showReferenceDialog","useErrorHandling","handleError","context","router","useRouter","route","useRoute","confirmHoldOrder","printOrder","submitOrder","initializePos"],"mappings":"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","x_google_ignoreList":[5,6,7,8,41,42,43,44,45,46,47,48,49,50,51,52,53,54]}